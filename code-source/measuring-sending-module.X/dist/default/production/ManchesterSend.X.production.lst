

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Apr  1 20:56:52 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F819
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	intentry,global,class=CODE,delta=2
    25                           	dabs	1,0x7E,2
    26  0000                     
    27                           ; Version 2.10
    28                           ; Generated 31/07/2019 GMT
    29                           ; 
    30                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC16F819 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61  0000                     	;# 
    62  0001                     	;# 
    63  0002                     	;# 
    64  0003                     	;# 
    65  0004                     	;# 
    66  0005                     	;# 
    67  0006                     	;# 
    68  000A                     	;# 
    69  000B                     	;# 
    70  000C                     	;# 
    71  000D                     	;# 
    72  000E                     	;# 
    73  000E                     	;# 
    74  000F                     	;# 
    75  0010                     	;# 
    76  0011                     	;# 
    77  0012                     	;# 
    78  0013                     	;# 
    79  0014                     	;# 
    80  0015                     	;# 
    81  0015                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  008F                     	;# 
    93  0090                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0094                     	;# 
    97  009E                     	;# 
    98  009F                     	;# 
    99  010C                     	;# 
   100  010D                     	;# 
   101  010E                     	;# 
   102  010F                     	;# 
   103  018C                     	;# 
   104  018D                     	;# 
   105  0000                     	;# 
   106  0001                     	;# 
   107  0002                     	;# 
   108  0003                     	;# 
   109  0004                     	;# 
   110  0005                     	;# 
   111  0006                     	;# 
   112  000A                     	;# 
   113  000B                     	;# 
   114  000C                     	;# 
   115  000D                     	;# 
   116  000E                     	;# 
   117  000E                     	;# 
   118  000F                     	;# 
   119  0010                     	;# 
   120  0011                     	;# 
   121  0012                     	;# 
   122  0013                     	;# 
   123  0014                     	;# 
   124  0015                     	;# 
   125  0015                     	;# 
   126  0016                     	;# 
   127  0017                     	;# 
   128  001E                     	;# 
   129  001F                     	;# 
   130  0081                     	;# 
   131  0085                     	;# 
   132  0086                     	;# 
   133  008C                     	;# 
   134  008D                     	;# 
   135  008E                     	;# 
   136  008F                     	;# 
   137  0090                     	;# 
   138  0092                     	;# 
   139  0093                     	;# 
   140  0094                     	;# 
   141  009E                     	;# 
   142  009F                     	;# 
   143  010C                     	;# 
   144  010D                     	;# 
   145  010E                     	;# 
   146  010F                     	;# 
   147  018C                     	;# 
   148  018D                     	;# 
   149  0000                     	;# 
   150  0001                     	;# 
   151  0002                     	;# 
   152  0003                     	;# 
   153  0004                     	;# 
   154  0005                     	;# 
   155  0006                     	;# 
   156  000A                     	;# 
   157  000B                     	;# 
   158  000C                     	;# 
   159  000D                     	;# 
   160  000E                     	;# 
   161  000E                     	;# 
   162  000F                     	;# 
   163  0010                     	;# 
   164  0011                     	;# 
   165  0012                     	;# 
   166  0013                     	;# 
   167  0014                     	;# 
   168  0015                     	;# 
   169  0015                     	;# 
   170  0016                     	;# 
   171  0017                     	;# 
   172  001E                     	;# 
   173  001F                     	;# 
   174  0081                     	;# 
   175  0085                     	;# 
   176  0086                     	;# 
   177  008C                     	;# 
   178  008D                     	;# 
   179  008E                     	;# 
   180  008F                     	;# 
   181  0090                     	;# 
   182  0092                     	;# 
   183  0093                     	;# 
   184  0094                     	;# 
   185  009E                     	;# 
   186  009F                     	;# 
   187  010C                     	;# 
   188  010D                     	;# 
   189  010E                     	;# 
   190  010F                     	;# 
   191  018C                     	;# 
   192  018D                     	;# 
   193  0000                     	;# 
   194  0001                     	;# 
   195  0002                     	;# 
   196  0003                     	;# 
   197  0004                     	;# 
   198  0005                     	;# 
   199  0006                     	;# 
   200  000A                     	;# 
   201  000B                     	;# 
   202  000C                     	;# 
   203  000D                     	;# 
   204  000E                     	;# 
   205  000E                     	;# 
   206  000F                     	;# 
   207  0010                     	;# 
   208  0011                     	;# 
   209  0012                     	;# 
   210  0013                     	;# 
   211  0014                     	;# 
   212  0015                     	;# 
   213  0015                     	;# 
   214  0016                     	;# 
   215  0017                     	;# 
   216  001E                     	;# 
   217  001F                     	;# 
   218  0081                     	;# 
   219  0085                     	;# 
   220  0086                     	;# 
   221  008C                     	;# 
   222  008D                     	;# 
   223  008E                     	;# 
   224  008F                     	;# 
   225  0090                     	;# 
   226  0092                     	;# 
   227  0093                     	;# 
   228  0094                     	;# 
   229  009E                     	;# 
   230  009F                     	;# 
   231  010C                     	;# 
   232  010D                     	;# 
   233  010E                     	;# 
   234  010F                     	;# 
   235  018C                     	;# 
   236  018D                     	;# 
   237  0000                     	;# 
   238  0001                     	;# 
   239  0002                     	;# 
   240  0003                     	;# 
   241  0004                     	;# 
   242  0005                     	;# 
   243  0006                     	;# 
   244  000A                     	;# 
   245  000B                     	;# 
   246  000C                     	;# 
   247  000D                     	;# 
   248  000E                     	;# 
   249  000E                     	;# 
   250  000F                     	;# 
   251  0010                     	;# 
   252  0011                     	;# 
   253  0012                     	;# 
   254  0013                     	;# 
   255  0014                     	;# 
   256  0015                     	;# 
   257  0015                     	;# 
   258  0016                     	;# 
   259  0017                     	;# 
   260  001E                     	;# 
   261  001F                     	;# 
   262  0081                     	;# 
   263  0085                     	;# 
   264  0086                     	;# 
   265  008C                     	;# 
   266  008D                     	;# 
   267  008E                     	;# 
   268  008F                     	;# 
   269  0090                     	;# 
   270  0092                     	;# 
   271  0093                     	;# 
   272  0094                     	;# 
   273  009E                     	;# 
   274  009F                     	;# 
   275  010C                     	;# 
   276  010D                     	;# 
   277  010E                     	;# 
   278  010F                     	;# 
   279  018C                     	;# 
   280  018D                     	;# 
   281  0000                     	;# 
   282  0001                     	;# 
   283  0002                     	;# 
   284  0003                     	;# 
   285  0004                     	;# 
   286  0005                     	;# 
   287  0006                     	;# 
   288  000A                     	;# 
   289  000B                     	;# 
   290  000C                     	;# 
   291  000D                     	;# 
   292  000E                     	;# 
   293  000E                     	;# 
   294  000F                     	;# 
   295  0010                     	;# 
   296  0011                     	;# 
   297  0012                     	;# 
   298  0013                     	;# 
   299  0014                     	;# 
   300  0015                     	;# 
   301  0015                     	;# 
   302  0016                     	;# 
   303  0017                     	;# 
   304  001E                     	;# 
   305  001F                     	;# 
   306  0081                     	;# 
   307  0085                     	;# 
   308  0086                     	;# 
   309  008C                     	;# 
   310  008D                     	;# 
   311  008E                     	;# 
   312  008F                     	;# 
   313  0090                     	;# 
   314  0092                     	;# 
   315  0093                     	;# 
   316  0094                     	;# 
   317  009E                     	;# 
   318  009F                     	;# 
   319  010C                     	;# 
   320  010D                     	;# 
   321  010E                     	;# 
   322  010F                     	;# 
   323  018C                     	;# 
   324  018D                     	;# 
   325  0000                     	;# 
   326  0001                     	;# 
   327  0002                     	;# 
   328  0003                     	;# 
   329  0004                     	;# 
   330  0005                     	;# 
   331  0006                     	;# 
   332  000A                     	;# 
   333  000B                     	;# 
   334  000C                     	;# 
   335  000D                     	;# 
   336  000E                     	;# 
   337  000E                     	;# 
   338  000F                     	;# 
   339  0010                     	;# 
   340  0011                     	;# 
   341  0012                     	;# 
   342  0013                     	;# 
   343  0014                     	;# 
   344  0015                     	;# 
   345  0015                     	;# 
   346  0016                     	;# 
   347  0017                     	;# 
   348  001E                     	;# 
   349  001F                     	;# 
   350  0081                     	;# 
   351  0085                     	;# 
   352  0086                     	;# 
   353  008C                     	;# 
   354  008D                     	;# 
   355  008E                     	;# 
   356  008F                     	;# 
   357  0090                     	;# 
   358  0092                     	;# 
   359  0093                     	;# 
   360  0094                     	;# 
   361  009E                     	;# 
   362  009F                     	;# 
   363  010C                     	;# 
   364  010D                     	;# 
   365  010E                     	;# 
   366  010F                     	;# 
   367  018C                     	;# 
   368  018D                     	;# 
   369                           
   370                           	psect	strings
   371  019E                     __pstrings:	
   372  019E                     stringtab:	
   373  019E                     __stringtab:	
   374  019E                     stringcode:	
   375                           ;	String table - string pointers are 1 byte each
   376                           
   377  019E                     stringdir:	
   378  019E  3001               	movlw	high stringdir
   379  019F  008A               	movwf	10
   380  01A0  0804               	movf	4,w
   381  01A1  0A84               	incf	4,f
   382  01A2  0782               	addwf	2,f
   383  01A3                     __stringbase:	
   384  01A3  3400               	retlw	0
   385  01A4                     __end_of__stringtab:	
   386  01A4                     CRC16@generator:	
   387  01A4  3421               	retlw	33
   388  01A5  3410               	retlw	16
   389  01A6                     __end_ofCRC16@generator:	
   390  01A6                     InterruptConfig@k_baud_rate:	
   391  01A6  342C               	retlw	44
   392  01A7  3401               	retlw	1
   393  01A8  3400               	retlw	0
   394  01A9  3400               	retlw	0
   395  01AA                     __end_ofInterruptConfig@k_baud_rate:	
   396  000E                     _TMR1	set	14
   397  0015                     _CCPR1	set	21
   398  0006                     _PORTBbits	set	6
   399  0005                     _PORTAbits	set	5
   400  000C                     _PIR1bits	set	12
   401  0017                     _CCP1CONbits	set	23
   402  0010                     _T1CONbits	set	16
   403  000B                     _INTCONbits	set	11
   404  005A                     _TMR0IF	set	90
   405  005D                     _TMR0IE	set	93
   406  0081                     _OPTION_REGbits	set	129
   407  009F                     _ADCON1bits	set	159
   408  008F                     _OSCCONbits	set	143
   409  0435                     _TRISB5	set	1077
   410  0434                     _TRISB4	set	1076
   411  0433                     _TRISB3	set	1075
   412  0432                     _TRISB2	set	1074
   413  0431                     _TRISB1	set	1073
   414  0430                     _TRISB0	set	1072
   415  042F                     _TRISA7	set	1071
   416  042E                     _TRISA6	set	1070
   417  042C                     _TRISA4	set	1068
   418  042B                     _TRISA3	set	1067
   419  042A                     _TRISA2	set	1066
   420  0429                     _TRISA1	set	1065
   421  0428                     _TRISA0	set	1064
   422                           
   423                           ; #config settings
   424  0000                     
   425                           	psect	cinit
   426  000B                     start_initialization:	
   427  000B                     __initialization:	
   428                           
   429                           ; Clear objects allocated to COMMON
   430  000B  01FB               	clrf	__pbssCOMMON& (0+127)
   431  000C                     end_of_initialization:	
   432                           ;End of C runtime variable initialization code
   433                           
   434  000C                     __end_of__initialization:	
   435  000C  0183               	clrf	3
   436  000D  29DA               	ljmp	_main	;jump to C main() function
   437                           
   438                           	psect	bssCOMMON
   439  007B                     __pbssCOMMON:	
   440  007B                     _g_key_timer:	
   441  007B                     	ds	1
   442                           
   443                           	psect	cstackCOMMON
   444  0070                     __pcstackCOMMON:	
   445  0070                     ?_LineState:	
   446  0070                     ?_CheckGateCloseSwitch:	
   447                           ; 1 bytes @ 0x0
   448                           
   449  0070                     ?_DebounceWait:	
   450                           ; 1 bytes @ 0x0
   451                           
   452  0070                     ?_GateStartHighTime:	
   453                           ; 1 bytes @ 0x0
   454                           
   455  0070                     ?_GlobalInits:	
   456                           ; 1 bytes @ 0x0
   457                           
   458  0070                     ?_InterruptConfig:	
   459                           ; 1 bytes @ 0x0
   460                           
   461  0070                     ?_ISR:	
   462                           ; 1 bytes @ 0x0
   463                           
   464  0070                     ??_ISR:	
   465                           ; 1 bytes @ 0x0
   466                           
   467  0070                     ?_main:	
   468                           ; 1 bytes @ 0x0
   469                           
   470  0070                     ?_WaitManchesterT:	
   471                           ; 1 bytes @ 0x0
   472                           
   473  0070                     ?_ManchesterSendOne:	
   474                           ; 1 bytes @ 0x0
   475                           
   476  0070                     ?_ManchesterSendZero:	
   477                           ; 1 bytes @ 0x0
   478                           
   479  0070                     ?_SendFrame:	
   480                           ; 1 bytes @ 0x0
   481                           
   482  0070                     ?_CheckInputState:	
   483                           ; 1 bytes @ 0x0
   484                           
   485                           
   486                           ; 1 bytes @ 0x0
   487  0070                     	ds	2
   488  0072                     ??_DebounceWait:	
   489  0072                     ??_GateStartHighTime:	
   490                           ; 1 bytes @ 0x2
   491                           
   492  0072                     ??_GlobalInits:	
   493                           ; 1 bytes @ 0x2
   494                           
   495  0072                     ??_InterruptConfig:	
   496                           ; 1 bytes @ 0x2
   497                           
   498  0072                     ??_WaitManchesterT:	
   499                           ; 1 bytes @ 0x2
   500                           
   501  0072                     ??_ManchesterSendOne:	
   502                           ; 1 bytes @ 0x2
   503                           
   504  0072                     ??_ManchesterSendZero:	
   505                           ; 1 bytes @ 0x2
   506                           
   507  0072                     ?_ManchesteEncode:	
   508                           ; 1 bytes @ 0x2
   509                           
   510  0072                     ?_CRC16:	
   511                           ; 1 bytes @ 0x2
   512                           
   513  0072                     CRC16@size:	
   514                           ; 2 bytes @ 0x2
   515                           
   516  0072                     ManchesteEncode@data_lenght:	
   517                           ; 1 bytes @ 0x2
   518                           
   519                           
   520                           ; 1 bytes @ 0x2
   521  0072                     	ds	1
   522  0073                     ??_CheckGateCloseSwitch:	
   523  0073                     ??_ManchesteEncode:	
   524                           ; 1 bytes @ 0x3
   525                           
   526  0073                     ??_CheckInputState:	
   527                           ; 1 bytes @ 0x3
   528                           
   529  0073                     CheckInputState@input:	
   530                           ; 1 bytes @ 0x3
   531                           
   532                           
   533                           ; 1 bytes @ 0x3
   534  0073                     	ds	1
   535  0074                     ??_CRC16:	
   536                           
   537                           ; 1 bytes @ 0x4
   538  0074                     	ds	2
   539  0076                     ManchesteEncode@data_to_send:	
   540                           
   541                           ; 1 bytes @ 0x6
   542  0076                     	ds	1
   543  0077                     ManchesteEncode@data_loop:	
   544                           
   545                           ; 1 bytes @ 0x7
   546  0077                     	ds	1
   547  0078                     ManchesteEncode@bit_loop:	
   548                           
   549                           ; 1 bytes @ 0x8
   550  0078                     	ds	1
   551  0079                     ??_SendFrame:	
   552                           
   553                           ; 1 bytes @ 0x9
   554  0079                     	ds	1
   555  007A                     ??_LineState:	
   556                           
   557                           ; 1 bytes @ 0xA
   558  007A                     	ds	1
   559  007B                     ??_main:	
   560                           
   561                           	psect	cstackBANK0
   562  0020                     __pcstackBANK0:	
   563                           ; 1 bytes @ 0xB
   564                           
   565  0020                     CRC16@data_tab_ptr:	
   566                           
   567                           ; 1 bytes @ 0x0
   568  0020                     	ds	1
   569  0021                     CRC16@k:	
   570                           
   571                           ; 1 bytes @ 0x1
   572  0021                     	ds	1
   573  0022                     CRC16@i:	
   574                           
   575                           ; 1 bytes @ 0x2
   576  0022                     	ds	1
   577  0023                     CRC16@crc:	
   578                           
   579                           ; 2 bytes @ 0x3
   580  0023                     	ds	2
   581  0025                     SendFrame@data_table:	
   582                           
   583                           ; 10 bytes @ 0x5
   584  0025                     	ds	10
   585  002F                     SendFrame@crc_val:	
   586                           
   587                           ; 2 bytes @ 0xF
   588  002F                     	ds	2
   589  0031                     SendFrame@i:	
   590                           
   591                           ; 1 bytes @ 0x11
   592  0031                     	ds	1
   593  0032                     SendFrame@type:	
   594                           
   595                           ; 1 bytes @ 0x12
   596  0032                     	ds	1
   597                           
   598                           	psect	maintext
   599  01DA                     __pmaintext:	
   600 ;;
   601 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   602 ;;
   603 ;; *************** function _main *****************
   604 ;; Defined at:
   605 ;;		line 18 in file "main.c"
   606 ;; Parameters:    Size  Location     Type
   607 ;;		None
   608 ;; Auto vars:     Size  Location     Type
   609 ;;		None
   610 ;; Return value:  Size  Location     Type
   611 ;;                  1    wreg      void 
   612 ;; Registers used:
   613 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   614 ;; Tracked objects:
   615 ;;		On entry : B00/0
   616 ;;		On exit  : 0/0
   617 ;;		Unchanged: 0/0
   618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   619 ;;      Params:         0       0       0       0
   620 ;;      Locals:         0       0       0       0
   621 ;;      Temps:          0       0       0       0
   622 ;;      Totals:         0       0       0       0
   623 ;;Total ram usage:        0 bytes
   624 ;; Hardware stack levels required when called:    6
   625 ;; This function calls:
   626 ;;		_CheckGateCloseSwitch
   627 ;;		_GlobalInits
   628 ;;		_InterruptConfig
   629 ;;		_LineState
   630 ;; This function is called by:
   631 ;;		Startup code after reset
   632 ;; This function uses a non-reentrant model
   633 ;;
   634                           
   635                           
   636                           ;psect for function _main
   637  01DA                     _main:	
   638  01DA                     l1244:	
   639                           ;incstack = 0
   640                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   641                           
   642                           
   643                           ;main.c: 20:     GlobalInits();
   644  01DA  2165               	fcall	_GlobalInits
   645                           
   646                           ;main.c: 21:     InterruptConfig();
   647  01DB  2135               	fcall	_InterruptConfig
   648  01DC                     l1246:	
   649                           
   650                           ;main.c: 24:     {;main.c: 25:         LineState();
   651  01DC  210B               	fcall	_LineState
   652  01DD                     l1248:	
   653                           
   654                           ;main.c: 26:         CheckGateCloseSwitch();
   655  01DD  217B               	fcall	_CheckGateCloseSwitch
   656  01DE  29DC               	goto	l1246
   657  01DF  280A               	ljmp	start
   658  01E0                     __end_of_main:	
   659                           
   660                           	psect	text1
   661  010B                     __ptext1:	
   662 ;; *************** function _LineState *****************
   663 ;; Defined at:
   664 ;;		line 39 in file "input_handler.c"
   665 ;; Parameters:    Size  Location     Type
   666 ;;		None
   667 ;; Auto vars:     Size  Location     Type
   668 ;;		None
   669 ;; Return value:  Size  Location     Type
   670 ;;                  1    wreg      void 
   671 ;; Registers used:
   672 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   673 ;; Tracked objects:
   674 ;;		On entry : 0/0
   675 ;;		On exit  : 0/0
   676 ;;		Unchanged: 0/0
   677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   678 ;;      Params:         0       0       0       0
   679 ;;      Locals:         0       0       0       0
   680 ;;      Temps:          1       0       0       0
   681 ;;      Totals:         1       0       0       0
   682 ;;Total ram usage:        1 bytes
   683 ;; Hardware stack levels used:    1
   684 ;; Hardware stack levels required when called:    5
   685 ;; This function calls:
   686 ;;		_CheckInputState
   687 ;;		_SendFrame
   688 ;; This function is called by:
   689 ;;		_main
   690 ;; This function uses a non-reentrant model
   691 ;;
   692                           
   693                           
   694                           ;psect for function _LineState
   695  010B                     _LineState:	
   696  010B                     l1232:	
   697                           ;incstack = 0
   698                           ; Regs used in _LineState: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   699                           
   700                           
   701                           ;input_handler.c: 42:     if(CheckInputState(PORTAbits.RA4)==1)
   702  010B  1283               	bcf	3,5	;RP0=0, select bank0
   703  010C  1303               	bcf	3,6	;RP1=0, select bank0
   704  010D  0E05               	swapf	5,w	;volatile
   705  010E  3901               	andlw	1
   706  010F  218E               	fcall	_CheckInputState
   707  0110  3A01               	xorlw	1
   708  0111  1D03               	skipz
   709  0112  2914               	goto	u551
   710  0113  2915               	goto	u550
   711  0114                     u551:	
   712  0114  2918               	goto	l1236
   713  0115                     u550:	
   714  0115                     l1234:	
   715                           
   716                           ;input_handler.c: 43:     {;input_handler.c: 44:          SendFrame(1);
   717  0115  3001               	movlw	1
   718  0116  200E               	fcall	_SendFrame
   719                           
   720                           ;input_handler.c: 46:     }else if(CheckInputState(PORTAbits.RA3)==1)
   721  0117  2934               	goto	l179
   722  0118                     l1236:	
   723  0118  1283               	bcf	3,5	;RP0=0, select bank0
   724  0119  1303               	bcf	3,6	;RP1=0, select bank0
   725  011A  0C05               	rrf	5,w	;volatile
   726  011B  00FA               	movwf	??_LineState
   727  011C  0CFA               	rrf	??_LineState,f
   728  011D  0C7A               	rrf	??_LineState,w
   729  011E  3901               	andlw	1
   730  011F  218E               	fcall	_CheckInputState
   731  0120  3A01               	xorlw	1
   732  0121  1D03               	skipz
   733  0122  2924               	goto	u561
   734  0123  2925               	goto	u560
   735  0124                     u561:	
   736  0124  2928               	goto	l1240
   737  0125                     u560:	
   738  0125                     l1238:	
   739                           
   740                           ;input_handler.c: 47:     {;input_handler.c: 48:         SendFrame(0);
   741  0125  3000               	movlw	0
   742  0126  200E               	fcall	_SendFrame
   743                           
   744                           ;input_handler.c: 50:     }else if(CheckInputState(PORTBbits.RB0)==1)
   745  0127  2934               	goto	l179
   746  0128                     l1240:	
   747  0128  1283               	bcf	3,5	;RP0=0, select bank0
   748  0129  1303               	bcf	3,6	;RP1=0, select bank0
   749  012A  0806               	movf	6,w	;volatile
   750  012B  3901               	andlw	1
   751  012C  218E               	fcall	_CheckInputState
   752  012D  3A01               	xorlw	1
   753  012E  1D03               	skipz
   754  012F  2931               	goto	u571
   755  0130  2932               	goto	u570
   756  0131                     u571:	
   757  0131  2934               	goto	l179
   758  0132                     u570:	
   759  0132                     l1242:	
   760                           
   761                           ;input_handler.c: 51:     {;input_handler.c: 52:         SendFrame(2);
   762  0132  3002               	movlw	2
   763  0133  200E               	fcall	_SendFrame
   764  0134                     l179:	
   765  0134  0008               	return
   766  0135                     __end_of_LineState:	
   767                           
   768                           	psect	text2
   769  000E                     __ptext2:	
   770 ;; *************** function _SendFrame *****************
   771 ;; Defined at:
   772 ;;		line 64 in file "manchester_encode.c"
   773 ;; Parameters:    Size  Location     Type
   774 ;;  type            1    wreg     unsigned char 
   775 ;; Auto vars:     Size  Location     Type
   776 ;;  type            1   18[BANK0 ] unsigned char 
   777 ;;  data_table     10    5[BANK0 ] unsigned char [10]
   778 ;;  crc_val         2   15[BANK0 ] unsigned int 
   779 ;;  i               1   17[BANK0 ] unsigned char 
   780 ;; Return value:  Size  Location     Type
   781 ;;                  1    wreg      void 
   782 ;; Registers used:
   783 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   784 ;; Tracked objects:
   785 ;;		On entry : 0/0
   786 ;;		On exit  : 0/0
   787 ;;		Unchanged: 0/0
   788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   789 ;;      Params:         0       0       0       0
   790 ;;      Locals:         0      14       0       0
   791 ;;      Temps:          1       0       0       0
   792 ;;      Totals:         1      14       0       0
   793 ;;Total ram usage:       15 bytes
   794 ;; Hardware stack levels used:    1
   795 ;; Hardware stack levels required when called:    4
   796 ;; This function calls:
   797 ;;		_CRC16
   798 ;;		_ManchesteEncode
   799 ;;		_WaitManchesterT
   800 ;; This function is called by:
   801 ;;		_LineState
   802 ;; This function uses a non-reentrant model
   803 ;;
   804                           
   805                           
   806                           ;psect for function _SendFrame
   807  000E                     _SendFrame:	
   808                           
   809                           ;incstack = 0
   810                           ; Regs used in _SendFrame: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   811                           ;SendFrame@type stored from wreg
   812  000E  1283               	bcf	3,5	;RP0=0, select bank0
   813  000F  1303               	bcf	3,6	;RP1=0, select bank0
   814  0010  00B2               	movwf	SendFrame@type
   815  0011                     l1188:	
   816                           
   817                           ;manchester_encode.c: 64: void SendFrame(unsigned char type);manchester_encode.c: 65: {;
      +                          manchester_encode.c: 67:     unsigned char data_table[6 +4];;manchester_encode.c: 70:  d
      +                          ata_table[0]=0xFE;
   818  0011  30FE               	movlw	254
   819  0012  00F9               	movwf	??_SendFrame
   820  0013  0879               	movf	??_SendFrame,w
   821  0014  00A5               	movwf	SendFrame@data_table
   822                           
   823                           ;manchester_encode.c: 71:     data_table[1]=0xFE;
   824  0015  30FE               	movlw	254
   825  0016  00F9               	movwf	??_SendFrame
   826  0017  0879               	movf	??_SendFrame,w
   827  0018  00A6               	movwf	SendFrame@data_table+1
   828                           
   829                           ;manchester_encode.c: 72:     data_table[2]=0xFE;
   830  0019  30FE               	movlw	254
   831  001A  00F9               	movwf	??_SendFrame
   832  001B  0879               	movf	??_SendFrame,w
   833  001C  00A7               	movwf	SendFrame@data_table+2
   834                           
   835                           ;manchester_encode.c: 73:     data_table[3]=0xFE;
   836  001D  30FE               	movlw	254
   837  001E  00F9               	movwf	??_SendFrame
   838  001F  0879               	movf	??_SendFrame,w
   839  0020  00A8               	movwf	SendFrame@data_table+3
   840                           
   841                           ;manchester_encode.c: 75:  data_table[4]='$';
   842  0021  3024               	movlw	36
   843  0022  00F9               	movwf	??_SendFrame
   844  0023  0879               	movf	??_SendFrame,w
   845  0024  00A9               	movwf	SendFrame@data_table+4
   846  0025                     l1190:	
   847                           
   848                           ;manchester_encode.c: 77:     if(type==1)
   849  0025  0332               	decf	SendFrame@type,w
   850  0026  1D03               	btfss	3,2
   851  0027  2829               	goto	u511
   852  0028  282A               	goto	u510
   853  0029                     u511:	
   854  0029  2833               	goto	l1194
   855  002A                     u510:	
   856  002A                     l1192:	
   857                           
   858                           ;manchester_encode.c: 78:     {;manchester_encode.c: 79:         data_table[5]='G';
   859  002A  3047               	movlw	71
   860  002B  00F9               	movwf	??_SendFrame
   861  002C  0879               	movf	??_SendFrame,w
   862  002D  00AA               	movwf	SendFrame@data_table+5
   863                           
   864                           ;manchester_encode.c: 80:         data_table[6]='0';
   865  002E  3030               	movlw	48
   866  002F  00F9               	movwf	??_SendFrame
   867  0030  0879               	movf	??_SendFrame,w
   868  0031  00AB               	movwf	SendFrame@data_table+6
   869                           
   870                           ;manchester_encode.c: 82:     }else if(type==0)
   871  0032  284F               	goto	l1202
   872  0033                     l1194:	
   873  0033  0832               	movf	SendFrame@type,w
   874  0034  1D03               	btfss	3,2
   875  0035  2837               	goto	u521
   876  0036  2838               	goto	u520
   877  0037                     u521:	
   878  0037  2841               	goto	l1198
   879  0038                     u520:	
   880  0038                     l1196:	
   881                           
   882                           ;manchester_encode.c: 83:     {;manchester_encode.c: 84:         data_table[5]='W';
   883  0038  3057               	movlw	87
   884  0039  00F9               	movwf	??_SendFrame
   885  003A  0879               	movf	??_SendFrame,w
   886  003B  00AA               	movwf	SendFrame@data_table+5
   887                           
   888                           ;manchester_encode.c: 85:         data_table[6]='0';
   889  003C  3030               	movlw	48
   890  003D  00F9               	movwf	??_SendFrame
   891  003E  0879               	movf	??_SendFrame,w
   892  003F  00AB               	movwf	SendFrame@data_table+6
   893                           
   894                           ;manchester_encode.c: 87:     }else if(type==2)
   895  0040  284F               	goto	l1202
   896  0041                     l1198:	
   897  0041  3002               	movlw	2
   898  0042  0632               	xorwf	SendFrame@type,w
   899  0043  1D03               	btfss	3,2
   900  0044  2846               	goto	u531
   901  0045  2847               	goto	u530
   902  0046                     u531:	
   903  0046  284F               	goto	l1202
   904  0047                     u530:	
   905  0047                     l1200:	
   906                           
   907                           ;manchester_encode.c: 88:     {;manchester_encode.c: 89:         data_table[5]='W';
   908  0047  3057               	movlw	87
   909  0048  00F9               	movwf	??_SendFrame
   910  0049  0879               	movf	??_SendFrame,w
   911  004A  00AA               	movwf	SendFrame@data_table+5
   912                           
   913                           ;manchester_encode.c: 90:         data_table[6]='B';
   914  004B  3042               	movlw	66
   915  004C  00F9               	movwf	??_SendFrame
   916  004D  0879               	movf	??_SendFrame,w
   917  004E  00AB               	movwf	SendFrame@data_table+6
   918  004F                     l1202:	
   919                           
   920                           ;manchester_encode.c: 95:      unsigned int crc_val;;manchester_encode.c: 96:     crc_va
      +                          l=CRC16(&data_table[5],2);
   921  004F  3002               	movlw	2
   922  0050  00F9               	movwf	??_SendFrame
   923  0051  0879               	movf	??_SendFrame,w
   924  0052  00F2               	movwf	CRC16@size
   925  0053  302A               	movlw	(low ((SendFrame@data_table| 0+5)))& (0+255)
   926  0054  2082               	fcall	_CRC16
   927  0055  0873               	movf	?_CRC16+1,w
   928  0056  1283               	bcf	3,5	;RP0=0, select bank0
   929  0057  1303               	bcf	3,6	;RP1=0, select bank0
   930  0058  00B0               	movwf	SendFrame@crc_val+1
   931  0059  0872               	movf	?_CRC16,w
   932  005A  00AF               	movwf	SendFrame@crc_val
   933  005B                     l1204:	
   934                           
   935                           ;manchester_encode.c: 97:     data_table[7]=crc_val>>8;
   936  005B  0830               	movf	SendFrame@crc_val+1,w
   937  005C  00F9               	movwf	??_SendFrame
   938  005D  0879               	movf	??_SendFrame,w
   939  005E  00AC               	movwf	SendFrame@data_table+7
   940  005F                     l1206:	
   941                           
   942                           ;manchester_encode.c: 98:  data_table[8]=crc_val & 0x00FF;
   943  005F  082F               	movf	SendFrame@crc_val,w
   944  0060  00F9               	movwf	??_SendFrame
   945  0061  0879               	movf	??_SendFrame,w
   946  0062  00AD               	movwf	SendFrame@data_table+8
   947  0063                     l1208:	
   948                           
   949                           ;manchester_encode.c: 99:  data_table[9]='&';
   950  0063  3026               	movlw	38
   951  0064  00F9               	movwf	??_SendFrame
   952  0065  0879               	movf	??_SendFrame,w
   953  0066  00AE               	movwf	SendFrame@data_table+9
   954  0067                     l1210:	
   955                           
   956                           ;manchester_encode.c: 102:     T1CONbits.TMR1ON=1;
   957  0067  1410               	bsf	16,0	;volatile
   958  0068                     l1212:	
   959                           
   960                           ;manchester_encode.c: 103:     INTCONbits.TMR0IE=0;
   961  0068  128B               	bcf	11,5	;volatile
   962  0069                     l1214:	
   963                           
   964                           ;manchester_encode.c: 106:     unsigned char i;;manchester_encode.c: 107:     for(i=0;i<
      +                          3;i++)
   965  0069  01B1               	clrf	SendFrame@i
   966  006A                     l1220:	
   967                           
   968                           ;manchester_encode.c: 108:     {;manchester_encode.c: 109:         ManchesteEncode(&data
      +                          _table[0], 6 +4);
   969  006A  300A               	movlw	10
   970  006B  00F9               	movwf	??_SendFrame
   971  006C  0879               	movf	??_SendFrame,w
   972  006D  00F2               	movwf	ManchesteEncode@data_lenght
   973  006E  3025               	movlw	(low (SendFrame@data_table| 0))& (0+255)
   974  006F  20CC               	fcall	_ManchesteEncode
   975  0070                     l1222:	
   976                           
   977                           ;manchester_encode.c: 111:         WaitManchesterT();
   978  0070  21AA               	fcall	_WaitManchesterT
   979  0071                     l1224:	
   980                           
   981                           ;manchester_encode.c: 112:         WaitManchesterT();
   982  0071  21AA               	fcall	_WaitManchesterT
   983  0072                     l1226:	
   984                           
   985                           ;manchester_encode.c: 113:         WaitManchesterT();
   986  0072  21AA               	fcall	_WaitManchesterT
   987  0073                     l1228:	
   988                           
   989                           ;manchester_encode.c: 114:     }
   990  0073  3001               	movlw	1
   991  0074  00F9               	movwf	??_SendFrame
   992  0075  0879               	movf	??_SendFrame,w
   993  0076  1283               	bcf	3,5	;RP0=0, select bank0
   994  0077  1303               	bcf	3,6	;RP1=0, select bank0
   995  0078  07B1               	addwf	SendFrame@i,f
   996  0079                     l1230:	
   997  0079  3003               	movlw	3
   998  007A  0231               	subwf	SendFrame@i,w
   999  007B  1C03               	skipc
  1000  007C  287E               	goto	u541
  1001  007D  287F               	goto	u540
  1002  007E                     u541:	
  1003  007E  286A               	goto	l1220
  1004  007F                     u540:	
  1005  007F                     l136:	
  1006                           
  1007                           ;manchester_encode.c: 115:     T1CONbits.TMR1ON=0;
  1008  007F  1010               	bcf	16,0	;volatile
  1009                           
  1010                           ;manchester_encode.c: 116:     INTCONbits.TMR0IE=1;
  1011  0080  168B               	bsf	11,5	;volatile
  1012  0081                     l137:	
  1013  0081  0008               	return
  1014  0082                     __end_of_SendFrame:	
  1015                           
  1016                           	psect	text3
  1017  00CC                     __ptext3:	
  1018 ;; *************** function _ManchesteEncode *****************
  1019 ;; Defined at:
  1020 ;;		line 45 in file "manchester_encode.c"
  1021 ;; Parameters:    Size  Location     Type
  1022 ;;  data_to_send    1    wreg     PTR unsigned char 
  1023 ;;		 -> SendFrame@data_table(10), 
  1024 ;;  data_lenght     1    2[COMMON] unsigned char 
  1025 ;; Auto vars:     Size  Location     Type
  1026 ;;  data_to_send    1    6[COMMON] PTR unsigned char 
  1027 ;;		 -> SendFrame@data_table(10), 
  1028 ;;  bit_loop        1    8[COMMON] char 
  1029 ;;  data_loop       1    7[COMMON] char 
  1030 ;; Return value:  Size  Location     Type
  1031 ;;                  1    wreg      void 
  1032 ;; Registers used:
  1033 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1034 ;; Tracked objects:
  1035 ;;		On entry : 0/0
  1036 ;;		On exit  : 0/0
  1037 ;;		Unchanged: 0/0
  1038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1039 ;;      Params:         1       0       0       0
  1040 ;;      Locals:         3       0       0       0
  1041 ;;      Temps:          3       0       0       0
  1042 ;;      Totals:         7       0       0       0
  1043 ;;Total ram usage:        7 bytes
  1044 ;; Hardware stack levels used:    1
  1045 ;; Hardware stack levels required when called:    3
  1046 ;; This function calls:
  1047 ;;		_ManchesterSendOne
  1048 ;;		_ManchesterSendZero
  1049 ;; This function is called by:
  1050 ;;		_SendFrame
  1051 ;; This function uses a non-reentrant model
  1052 ;;
  1053                           
  1054                           
  1055                           ;psect for function _ManchesteEncode
  1056  00CC                     _ManchesteEncode:	
  1057                           
  1058                           ;incstack = 0
  1059                           ; Regs used in _ManchesteEncode: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1060                           ;ManchesteEncode@data_to_send stored from wreg
  1061  00CC  00F6               	movwf	ManchesteEncode@data_to_send
  1062  00CD                     l1078:	
  1063                           
  1064                           ;manchester_encode.c: 45: void ManchesteEncode(unsigned char *data_to_send, unsigned cha
      +                          r data_lenght);manchester_encode.c: 46: {;manchester_encode.c: 47:  signed char bit_loop
      +                          , data_loop;;manchester_encode.c: 49:  for(data_loop=0;data_loop<data_lenght;data_loop++
      +                          )
  1065  00CD  01F7               	clrf	ManchesteEncode@data_loop
  1066  00CE  28F5               	goto	l1098
  1067  00CF                     l1080:	
  1068                           
  1069                           ;manchester_encode.c: 50:  {;manchester_encode.c: 51:   for(bit_loop=7;bit_loop>=0;bit_l
      +                          oop--)
  1070  00CF  3007               	movlw	7
  1071  00D0  00F3               	movwf	??_ManchesteEncode
  1072  00D1  0873               	movf	??_ManchesteEncode,w
  1073  00D2  00F8               	movwf	ManchesteEncode@bit_loop
  1074  00D3                     l1086:	
  1075                           
  1076                           ;manchester_encode.c: 52:   {;manchester_encode.c: 53:    if(((*(data_to_send+data_loop)
      +                          )>>bit_loop) & 0x01)
  1077  00D3  0877               	movf	ManchesteEncode@data_loop,w
  1078  00D4  0776               	addwf	ManchesteEncode@data_to_send,w
  1079  00D5  00F3               	movwf	??_ManchesteEncode
  1080  00D6  0873               	movf	??_ManchesteEncode,w
  1081  00D7  0084               	movwf	4
  1082  00D8  1383               	bcf	3,7	;select IRP bank0
  1083  00D9  0800               	movf	0,w
  1084  00DA  00F4               	movwf	??_ManchesteEncode+1
  1085  00DB  0A78               	incf	ManchesteEncode@bit_loop,w
  1086  00DC  28DF               	goto	u364
  1087  00DD                     u365:	
  1088  00DD  1003               	clrc
  1089  00DE  0CF4               	rrf	??_ManchesteEncode+1,f
  1090  00DF                     u364:	
  1091  00DF  3EFF               	addlw	-1
  1092  00E0  1D03               	skipz
  1093  00E1  28DD               	goto	u365
  1094  00E2  1C74               	btfss	??_ManchesteEncode+1,0
  1095  00E3  28E5               	goto	u371
  1096  00E4  28E6               	goto	u370
  1097  00E5                     u371:	
  1098  00E5  28E8               	goto	l1090
  1099  00E6                     u370:	
  1100  00E6                     l1088:	
  1101                           
  1102                           ;manchester_encode.c: 54:    {;manchester_encode.c: 55:     ManchesterSendOne();
  1103  00E6  21D1               	fcall	_ManchesterSendOne
  1104                           
  1105                           ;manchester_encode.c: 56:    }else
  1106  00E7  28E9               	goto	l1092
  1107  00E8                     l1090:	
  1108                           
  1109                           ;manchester_encode.c: 57:     ManchesterSendZero();
  1110  00E8  21C8               	fcall	_ManchesterSendZero
  1111  00E9                     l1092:	
  1112                           
  1113                           ;manchester_encode.c: 58:    }
  1114  00E9  30FF               	movlw	255
  1115  00EA  00F3               	movwf	??_ManchesteEncode
  1116  00EB  0873               	movf	??_ManchesteEncode,w
  1117  00EC  07F8               	addwf	ManchesteEncode@bit_loop,f
  1118  00ED                     l1094:	
  1119  00ED  1FF8               	btfss	ManchesteEncode@bit_loop,7
  1120  00EE  28F0               	goto	u381
  1121  00EF  28F1               	goto	u380
  1122  00F0                     u381:	
  1123  00F0  28D3               	goto	l1086
  1124  00F1                     u380:	
  1125  00F1                     l1096:	
  1126                           
  1127                           ;manchester_encode.c: 59:  }
  1128  00F1  3001               	movlw	1
  1129  00F2  00F3               	movwf	??_ManchesteEncode
  1130  00F3  0873               	movf	??_ManchesteEncode,w
  1131  00F4  07F7               	addwf	ManchesteEncode@data_loop,f
  1132  00F5                     l1098:	
  1133  00F5  0877               	movf	ManchesteEncode@data_loop,w
  1134  00F6  00F3               	movwf	??_ManchesteEncode
  1135  00F7  01F4               	clrf	??_ManchesteEncode+1
  1136  00F8  1BF3               	btfsc	??_ManchesteEncode,7
  1137  00F9  03F4               	decf	??_ManchesteEncode+1,f
  1138  00FA  0874               	movf	??_ManchesteEncode+1,w
  1139  00FB  3A80               	xorlw	128
  1140  00FC  00F5               	movwf	??_ManchesteEncode+2
  1141  00FD  3080               	movlw	128
  1142  00FE  0275               	subwf	??_ManchesteEncode+2,w
  1143  00FF  1D03               	skipz
  1144  0100  2903               	goto	u395
  1145  0101  0872               	movf	ManchesteEncode@data_lenght,w
  1146  0102  0273               	subwf	??_ManchesteEncode,w
  1147  0103                     u395:	
  1148  0103  1C03               	skipc
  1149  0104  2906               	goto	u391
  1150  0105  2907               	goto	u390
  1151  0106                     u391:	
  1152  0106  28CF               	goto	l1080
  1153  0107                     u390:	
  1154  0107                     l126:	
  1155                           
  1156                           ;manchester_encode.c: 61:     PORTAbits.RA2=1;
  1157  0107  1283               	bcf	3,5	;RP0=0, select bank0
  1158  0108  1303               	bcf	3,6	;RP1=0, select bank0
  1159  0109  1505               	bsf	5,2	;volatile
  1160  010A                     l127:	
  1161  010A  0008               	return
  1162  010B                     __end_of_ManchesteEncode:	
  1163                           
  1164                           	psect	text4
  1165  01C8                     __ptext4:	
  1166 ;; *************** function _ManchesterSendZero *****************
  1167 ;; Defined at:
  1168 ;;		line 37 in file "manchester_encode.c"
  1169 ;; Parameters:    Size  Location     Type
  1170 ;;		None
  1171 ;; Auto vars:     Size  Location     Type
  1172 ;;		None
  1173 ;; Return value:  Size  Location     Type
  1174 ;;                  1    wreg      void 
  1175 ;; Registers used:
  1176 ;;		status,2, status,0, pclath, cstack
  1177 ;; Tracked objects:
  1178 ;;		On entry : 0/0
  1179 ;;		On exit  : 0/0
  1180 ;;		Unchanged: 0/0
  1181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1182 ;;      Params:         0       0       0       0
  1183 ;;      Locals:         0       0       0       0
  1184 ;;      Temps:          0       0       0       0
  1185 ;;      Totals:         0       0       0       0
  1186 ;;Total ram usage:        0 bytes
  1187 ;; Hardware stack levels used:    1
  1188 ;; Hardware stack levels required when called:    2
  1189 ;; This function calls:
  1190 ;;		_WaitManchesterT
  1191 ;; This function is called by:
  1192 ;;		_ManchesteEncode
  1193 ;; This function uses a non-reentrant model
  1194 ;;
  1195                           
  1196                           
  1197                           ;psect for function _ManchesterSendZero
  1198  01C8                     _ManchesterSendZero:	
  1199  01C8                     l1046:	
  1200                           ;incstack = 0
  1201                           ; Regs used in _ManchesterSendZero: [status,2+status,0+pclath+cstack]
  1202                           
  1203                           
  1204                           ;manchester_encode.c: 39:  PORTAbits.RA2=1;
  1205  01C8  1283               	bcf	3,5	;RP0=0, select bank0
  1206  01C9  1303               	bcf	3,6	;RP1=0, select bank0
  1207  01CA  1505               	bsf	5,2	;volatile
  1208  01CB                     l1048:	
  1209                           
  1210                           ;manchester_encode.c: 40:  WaitManchesterT();
  1211  01CB  21AA               	fcall	_WaitManchesterT
  1212  01CC                     l1050:	
  1213                           
  1214                           ;manchester_encode.c: 41:  PORTAbits.RA2=0;
  1215  01CC  1283               	bcf	3,5	;RP0=0, select bank0
  1216  01CD  1303               	bcf	3,6	;RP1=0, select bank0
  1217  01CE  1105               	bcf	5,2	;volatile
  1218                           
  1219                           ;manchester_encode.c: 42:  WaitManchesterT();
  1220  01CF  21AA               	fcall	_WaitManchesterT
  1221  01D0                     l117:	
  1222  01D0  0008               	return
  1223  01D1                     __end_of_ManchesterSendZero:	
  1224                           
  1225                           	psect	text5
  1226  01D1                     __ptext5:	
  1227 ;; *************** function _ManchesterSendOne *****************
  1228 ;; Defined at:
  1229 ;;		line 29 in file "manchester_encode.c"
  1230 ;; Parameters:    Size  Location     Type
  1231 ;;		None
  1232 ;; Auto vars:     Size  Location     Type
  1233 ;;		None
  1234 ;; Return value:  Size  Location     Type
  1235 ;;                  1    wreg      void 
  1236 ;; Registers used:
  1237 ;;		status,2, status,0, pclath, cstack
  1238 ;; Tracked objects:
  1239 ;;		On entry : 0/0
  1240 ;;		On exit  : 0/0
  1241 ;;		Unchanged: 0/0
  1242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1243 ;;      Params:         0       0       0       0
  1244 ;;      Locals:         0       0       0       0
  1245 ;;      Temps:          0       0       0       0
  1246 ;;      Totals:         0       0       0       0
  1247 ;;Total ram usage:        0 bytes
  1248 ;; Hardware stack levels used:    1
  1249 ;; Hardware stack levels required when called:    2
  1250 ;; This function calls:
  1251 ;;		_WaitManchesterT
  1252 ;; This function is called by:
  1253 ;;		_ManchesteEncode
  1254 ;; This function uses a non-reentrant model
  1255 ;;
  1256                           
  1257                           
  1258                           ;psect for function _ManchesterSendOne
  1259  01D1                     _ManchesterSendOne:	
  1260  01D1                     l1040:	
  1261                           ;incstack = 0
  1262                           ; Regs used in _ManchesterSendOne: [status,2+status,0+pclath+cstack]
  1263                           
  1264                           
  1265                           ;manchester_encode.c: 31:  PORTAbits.RA2=0;
  1266  01D1  1283               	bcf	3,5	;RP0=0, select bank0
  1267  01D2  1303               	bcf	3,6	;RP1=0, select bank0
  1268  01D3  1105               	bcf	5,2	;volatile
  1269  01D4                     l1042:	
  1270                           
  1271                           ;manchester_encode.c: 32:  WaitManchesterT();
  1272  01D4  21AA               	fcall	_WaitManchesterT
  1273  01D5                     l1044:	
  1274                           
  1275                           ;manchester_encode.c: 33:  PORTAbits.RA2=1;
  1276  01D5  1283               	bcf	3,5	;RP0=0, select bank0
  1277  01D6  1303               	bcf	3,6	;RP1=0, select bank0
  1278  01D7  1505               	bsf	5,2	;volatile
  1279                           
  1280                           ;manchester_encode.c: 34:  WaitManchesterT();
  1281  01D8  21AA               	fcall	_WaitManchesterT
  1282  01D9                     l114:	
  1283  01D9  0008               	return
  1284  01DA                     __end_of_ManchesterSendOne:	
  1285                           
  1286                           	psect	text6
  1287  01AA                     __ptext6:	
  1288 ;; *************** function _WaitManchesterT *****************
  1289 ;; Defined at:
  1290 ;;		line 21 in file "manchester_encode.c"
  1291 ;; Parameters:    Size  Location     Type
  1292 ;;		None
  1293 ;; Auto vars:     Size  Location     Type
  1294 ;;		None
  1295 ;; Return value:  Size  Location     Type
  1296 ;;                  1    wreg      void 
  1297 ;; Registers used:
  1298 ;;		status,2
  1299 ;; Tracked objects:
  1300 ;;		On entry : 0/0
  1301 ;;		On exit  : 0/0
  1302 ;;		Unchanged: 0/0
  1303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1304 ;;      Params:         0       0       0       0
  1305 ;;      Locals:         0       0       0       0
  1306 ;;      Temps:          0       0       0       0
  1307 ;;      Totals:         0       0       0       0
  1308 ;;Total ram usage:        0 bytes
  1309 ;; Hardware stack levels used:    1
  1310 ;; Hardware stack levels required when called:    1
  1311 ;; This function calls:
  1312 ;;		Nothing
  1313 ;; This function is called by:
  1314 ;;		_ManchesterSendOne
  1315 ;;		_ManchesterSendZero
  1316 ;;		_SendFrame
  1317 ;; This function uses a non-reentrant model
  1318 ;;
  1319                           
  1320                           
  1321                           ;psect for function _WaitManchesterT
  1322  01AA                     _WaitManchesterT:	
  1323  01AA                     l1036:	
  1324                           ;incstack = 0
  1325                           ; Regs used in _WaitManchesterT: [status,2]
  1326                           
  1327                           
  1328                           ;manchester_encode.c: 23:     PIR1bits.CCP1IF=0;
  1329  01AA  1283               	bcf	3,5	;RP0=0, select bank0
  1330  01AB  1303               	bcf	3,6	;RP1=0, select bank0
  1331  01AC  110C               	bcf	12,2	;volatile
  1332  01AD                     l1038:	
  1333                           
  1334                           ;manchester_encode.c: 24:     TMR1=0;
  1335  01AD  018E               	clrf	14	;volatile
  1336  01AE  018F               	clrf	15	;volatile
  1337  01AF                     l108:	
  1338                           ;manchester_encode.c: 25:     while(PIR1bits.CCP1IF==0);
  1339                           
  1340  01AF  1D0C               	btfss	12,2	;volatile
  1341  01B0  29B2               	goto	u311
  1342  01B1  29B3               	goto	u310
  1343  01B2                     u311:	
  1344  01B2  29AF               	goto	l108
  1345  01B3                     u310:	
  1346  01B3                     l111:	
  1347  01B3  0008               	return
  1348  01B4                     __end_of_WaitManchesterT:	
  1349                           
  1350                           	psect	text7
  1351  0082                     __ptext7:	
  1352 ;; *************** function _CRC16 *****************
  1353 ;; Defined at:
  1354 ;;		line 8 in file "crc16.c"
  1355 ;; Parameters:    Size  Location     Type
  1356 ;;  data_tab_ptr    1    wreg     PTR unsigned char 
  1357 ;;		 -> SendFrame@data_table(10), 
  1358 ;;  size            1    2[COMMON] unsigned char 
  1359 ;; Auto vars:     Size  Location     Type
  1360 ;;  data_tab_ptr    1    0[BANK0 ] PTR unsigned char 
  1361 ;;		 -> SendFrame@data_table(10), 
  1362 ;;  crc             2    3[BANK0 ] unsigned int 
  1363 ;;  i               1    2[BANK0 ] unsigned char 
  1364 ;;  k               1    1[BANK0 ] unsigned char 
  1365 ;; Return value:  Size  Location     Type
  1366 ;;                  2    2[COMMON] unsigned int 
  1367 ;; Registers used:
  1368 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  1369 ;; Tracked objects:
  1370 ;;		On entry : 0/0
  1371 ;;		On exit  : 0/0
  1372 ;;		Unchanged: 0/0
  1373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1374 ;;      Params:         2       0       0       0
  1375 ;;      Locals:         0       5       0       0
  1376 ;;      Temps:          3       0       0       0
  1377 ;;      Totals:         5       5       0       0
  1378 ;;Total ram usage:       10 bytes
  1379 ;; Hardware stack levels used:    1
  1380 ;; Hardware stack levels required when called:    1
  1381 ;; This function calls:
  1382 ;;		Nothing
  1383 ;; This function is called by:
  1384 ;;		_SendFrame
  1385 ;; This function uses a non-reentrant model
  1386 ;;
  1387                           
  1388                           
  1389                           ;psect for function _CRC16
  1390  0082                     _CRC16:	
  1391                           
  1392                           ;incstack = 0
  1393                           ; Regs used in _CRC16: [wreg-fsr0h+status,2+status,0+btemp+1]
  1394                           ;CRC16@data_tab_ptr stored from wreg
  1395  0082  1283               	bcf	3,5	;RP0=0, select bank0
  1396  0083  1303               	bcf	3,6	;RP1=0, select bank0
  1397  0084  00A0               	movwf	CRC16@data_tab_ptr
  1398  0085                     l1162:	
  1399                           
  1400                           ;crc16.c: 8: unsigned int CRC16(unsigned char *data_tab_ptr, unsigned char size);crc16.c
      +                          : 9: {;crc16.c: 10:     const unsigned int generator = 0x1021;;crc16.c: 11:     unsigned
      +                           int crc = 0;
  1401  0085  01A3               	clrf	CRC16@crc
  1402  0086  01A4               	clrf	CRC16@crc+1
  1403                           
  1404                           ;crc16.c: 12:     unsigned char k,i;;crc16.c: 14:     for(k=0;k<size;k++)
  1405  0087  01A1               	clrf	CRC16@k
  1406  0088  28C1               	goto	l1182
  1407  0089                     l1164:	
  1408                           
  1409                           ;crc16.c: 15:     {;crc16.c: 16:         crc ^= (*(data_tab_ptr+k) << 8);
  1410  0089  0821               	movf	CRC16@k,w
  1411  008A  0720               	addwf	CRC16@data_tab_ptr,w
  1412  008B  00F4               	movwf	??_CRC16
  1413  008C  0874               	movf	??_CRC16,w
  1414  008D  0084               	movwf	4
  1415  008E  1383               	bcf	3,7	;select IRP bank0
  1416  008F  0800               	movf	0,w
  1417  0090  00F5               	movwf	??_CRC16+1
  1418  0091  01F6               	clrf	??_CRC16+2
  1419  0092  0875               	movf	??_CRC16+1,w
  1420  0093  00F6               	movwf	??_CRC16+2
  1421  0094  01F5               	clrf	??_CRC16+1
  1422  0095  0875               	movf	??_CRC16+1,w
  1423  0096  06A3               	xorwf	CRC16@crc,f
  1424  0097  0876               	movf	??_CRC16+2,w
  1425  0098  06A4               	xorwf	CRC16@crc+1,f
  1426  0099                     l1166:	
  1427                           
  1428                           ;crc16.c: 18:         for (i=0;i<8;i++)
  1429  0099  01A2               	clrf	CRC16@i
  1430  009A                     l7:	
  1431                           
  1432                           ;crc16.c: 19:         {;crc16.c: 20:             if ((crc&0x8000)!=0)
  1433  009A  1FA4               	btfss	CRC16@crc+1,7
  1434  009B  289D               	goto	u471
  1435  009C  289E               	goto	u470
  1436  009D                     u471:	
  1437  009D  28AC               	goto	l1174
  1438  009E                     u470:	
  1439  009E                     l1172:	
  1440                           
  1441                           ;crc16.c: 21:             {;crc16.c: 22:                  crc=(crc<<1)^generator;
  1442  009E  0824               	movf	CRC16@crc+1,w
  1443  009F  00F5               	movwf	??_CRC16+1
  1444  00A0  0823               	movf	CRC16@crc,w
  1445  00A1  00F4               	movwf	??_CRC16
  1446  00A2  1003               	clrc
  1447  00A3  0DF4               	rlf	??_CRC16,f
  1448  00A4  0DF5               	rlf	??_CRC16+1,f
  1449  00A5  3021               	movlw	33
  1450  00A6  0674               	xorwf	??_CRC16,w
  1451  00A7  00A3               	movwf	CRC16@crc
  1452  00A8  3010               	movlw	16
  1453  00A9  0675               	xorwf	??_CRC16+1,w
  1454  00AA  00A4               	movwf	CRC16@crc+1
  1455                           
  1456                           ;crc16.c: 23:             }else
  1457  00AB  28B3               	goto	l1176
  1458  00AC                     l1174:	
  1459                           
  1460                           ;crc16.c: 24:             {;crc16.c: 25:                 crc<<=1;
  1461  00AC  3001               	movlw	1
  1462  00AD                     u485:	
  1463  00AD  1003               	clrc
  1464  00AE  0DA3               	rlf	CRC16@crc,f
  1465  00AF  0DA4               	rlf	CRC16@crc+1,f
  1466  00B0  3EFF               	addlw	-1
  1467  00B1  1D03               	skipz
  1468  00B2  28AD               	goto	u485
  1469  00B3                     l1176:	
  1470                           
  1471                           ;crc16.c: 27:         }
  1472  00B3  3001               	movlw	1
  1473  00B4  00F4               	movwf	??_CRC16
  1474  00B5  0874               	movf	??_CRC16,w
  1475  00B6  07A2               	addwf	CRC16@i,f
  1476  00B7                     l1178:	
  1477  00B7  3008               	movlw	8
  1478  00B8  0222               	subwf	CRC16@i,w
  1479  00B9  1C03               	skipc
  1480  00BA  28BC               	goto	u491
  1481  00BB  28BD               	goto	u490
  1482  00BC                     u491:	
  1483  00BC  289A               	goto	l7
  1484  00BD                     u490:	
  1485  00BD                     l1180:	
  1486                           
  1487                           ;crc16.c: 28:     }
  1488  00BD  3001               	movlw	1
  1489  00BE  00F4               	movwf	??_CRC16
  1490  00BF  0874               	movf	??_CRC16,w
  1491  00C0  07A1               	addwf	CRC16@k,f
  1492  00C1                     l1182:	
  1493  00C1  0872               	movf	CRC16@size,w
  1494  00C2  0221               	subwf	CRC16@k,w
  1495  00C3  1C03               	skipc
  1496  00C4  28C6               	goto	u501
  1497  00C5  28C7               	goto	u500
  1498  00C6                     u501:	
  1499  00C6  2889               	goto	l1164
  1500  00C7                     u500:	
  1501  00C7                     l1184:	
  1502                           
  1503                           ;crc16.c: 30:     return crc;
  1504  00C7  0824               	movf	CRC16@crc+1,w
  1505  00C8  00F3               	movwf	?_CRC16+1
  1506  00C9  0823               	movf	CRC16@crc,w
  1507  00CA  00F2               	movwf	?_CRC16
  1508  00CB                     l12:	
  1509  00CB  0008               	return
  1510  00CC                     __end_of_CRC16:	
  1511                           
  1512                           	psect	text8
  1513  018E                     __ptext8:	
  1514 ;; *************** function _CheckInputState *****************
  1515 ;; Defined at:
  1516 ;;		line 24 in file "input_handler.c"
  1517 ;; Parameters:    Size  Location     Type
  1518 ;;  input           1    wreg     unsigned char 
  1519 ;; Auto vars:     Size  Location     Type
  1520 ;;  input           1    3[COMMON] unsigned char 
  1521 ;; Return value:  Size  Location     Type
  1522 ;;                  1    wreg      unsigned char 
  1523 ;; Registers used:
  1524 ;;		wreg, status,2, status,0, pclath, cstack
  1525 ;; Tracked objects:
  1526 ;;		On entry : 0/0
  1527 ;;		On exit  : 0/0
  1528 ;;		Unchanged: 0/0
  1529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1530 ;;      Params:         0       0       0       0
  1531 ;;      Locals:         1       0       0       0
  1532 ;;      Temps:          0       0       0       0
  1533 ;;      Totals:         1       0       0       0
  1534 ;;Total ram usage:        1 bytes
  1535 ;; Hardware stack levels used:    1
  1536 ;; Hardware stack levels required when called:    2
  1537 ;; This function calls:
  1538 ;;		_DebounceWait
  1539 ;; This function is called by:
  1540 ;;		_LineState
  1541 ;; This function uses a non-reentrant model
  1542 ;;
  1543                           
  1544                           
  1545                           ;psect for function _CheckInputState
  1546  018E                     _CheckInputState:	
  1547                           
  1548                           ;incstack = 0
  1549                           ; Regs used in _CheckInputState: [wreg+status,2+status,0+pclath+cstack]
  1550                           ;CheckInputState@input stored from wreg
  1551  018E  00F3               	movwf	CheckInputState@input
  1552  018F                     l900:	
  1553                           
  1554                           ;input_handler.c: 24: unsigned char CheckInputState(unsigned char input);input_handler.c
      +                          : 25: {;input_handler.c: 26:  if(input==1)
  1555  018F  0373               	decf	CheckInputState@input,w
  1556  0190  1D03               	btfss	3,2
  1557  0191  2993               	goto	u151
  1558  0192  2994               	goto	u150
  1559  0193                     u151:	
  1560  0193  299C               	goto	l910
  1561  0194                     u150:	
  1562  0194                     l902:	
  1563                           
  1564                           ;input_handler.c: 27:  {;input_handler.c: 28:         DebounceWait();
  1565  0194  21BE               	fcall	_DebounceWait
  1566  0195                     l904:	
  1567                           
  1568                           ;input_handler.c: 30:         if(input==1)
  1569  0195  0373               	decf	CheckInputState@input,w
  1570  0196  1D03               	btfss	3,2
  1571  0197  2999               	goto	u161
  1572  0198  299A               	goto	u160
  1573  0199                     u161:	
  1574  0199  299C               	goto	l910
  1575  019A                     u160:	
  1576  019A                     l906:	
  1577                           
  1578                           ;input_handler.c: 31:         {;input_handler.c: 32:             return 1;
  1579  019A  3001               	movlw	1
  1580  019B  299D               	goto	l171
  1581  019C                     l910:	
  1582                           
  1583                           ;input_handler.c: 36:     return 0;
  1584  019C  3000               	movlw	0
  1585  019D                     l171:	
  1586  019D  0008               	return
  1587  019E                     __end_of_CheckInputState:	
  1588                           
  1589                           	psect	text9
  1590  0135                     __ptext9:	
  1591 ;; *************** function _InterruptConfig *****************
  1592 ;; Defined at:
  1593 ;;		line 12 in file "interrupts.c"
  1594 ;; Parameters:    Size  Location     Type
  1595 ;;		None
  1596 ;; Auto vars:     Size  Location     Type
  1597 ;;		None
  1598 ;; Return value:  Size  Location     Type
  1599 ;;                  1    wreg      void 
  1600 ;; Registers used:
  1601 ;;		wreg, status,2, status,0
  1602 ;; Tracked objects:
  1603 ;;		On entry : 0/0
  1604 ;;		On exit  : 0/0
  1605 ;;		Unchanged: 0/0
  1606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1607 ;;      Params:         0       0       0       0
  1608 ;;      Locals:         0       0       0       0
  1609 ;;      Temps:          0       0       0       0
  1610 ;;      Totals:         0       0       0       0
  1611 ;;Total ram usage:        0 bytes
  1612 ;; Hardware stack levels used:    1
  1613 ;; Hardware stack levels required when called:    1
  1614 ;; This function calls:
  1615 ;;		Nothing
  1616 ;; This function is called by:
  1617 ;;		_main
  1618 ;; This function uses a non-reentrant model
  1619 ;;
  1620                           
  1621                           
  1622                           ;psect for function _InterruptConfig
  1623  0135                     _InterruptConfig:	
  1624  0135                     l946:	
  1625                           ;incstack = 0
  1626                           ; Regs used in _InterruptConfig: [wreg+status,2+status,0]
  1627                           
  1628                           
  1629                           ;interrupts.c: 15:     OPTION_REGbits.T0CS=0;
  1630  0135  1683               	bsf	3,5	;RP0=1, select bank1
  1631  0136  1303               	bcf	3,6	;RP1=0, select bank1
  1632  0137  1281               	bcf	1,5	;volatile
  1633                           
  1634                           ;interrupts.c: 16:     OPTION_REGbits.PSA=0;
  1635  0138  1181               	bcf	1,3	;volatile
  1636  0139                     l948:	
  1637                           
  1638                           ;interrupts.c: 17:     OPTION_REGbits.PS=0b010;
  1639  0139  0801               	movf	1,w	;volatile
  1640  013A  39F8               	andlw	-8
  1641  013B  3802               	iorlw	2
  1642  013C  0081               	movwf	1	;volatile
  1643  013D                     l950:	
  1644                           
  1645                           ;interrupts.c: 18:     INTCONbits.TMR0IE=1;
  1646  013D  168B               	bsf	11,5	;volatile
  1647  013E                     l952:	
  1648                           
  1649                           ;interrupts.c: 22:     T1CONbits.TMR1CS=0;
  1650  013E  1283               	bcf	3,5	;RP0=0, select bank0
  1651  013F  1303               	bcf	3,6	;RP1=0, select bank0
  1652  0140  1090               	bcf	16,1	;volatile
  1653                           
  1654                           ;interrupts.c: 23:     T1CONbits.T1CKPS=0;
  1655  0141  30CF               	movlw	-49
  1656  0142  0590               	andwf	16,f	;volatile
  1657                           
  1658                           ;interrupts.c: 26:     CCP1CONbits.CCP1M=0b1010;
  1659  0143  0817               	movf	23,w	;volatile
  1660  0144  39F0               	andlw	-16
  1661  0145  380A               	iorlw	10
  1662  0146  0097               	movwf	23	;volatile
  1663  0147                     l954:	
  1664                           
  1665                           ;interrupts.c: 30:     const unsigned long int k_baud_rate=300;;interrupts.c: 31:     CC
      +                          PR1=8000000/(4*k_baud_rate);
  1666  0147  301A               	movlw	26
  1667  0148  0096               	movwf	22	;volatile
  1668  0149  300A               	movlw	10
  1669  014A  0095               	movwf	21	;volatile
  1670  014B                     l956:	
  1671                           
  1672                           ;interrupts.c: 34:     INTCONbits.GIE=1;
  1673  014B  178B               	bsf	11,7	;volatile
  1674  014C                     l958:	
  1675                           
  1676                           ;interrupts.c: 35:     INTCONbits.PEIE=1;
  1677  014C  170B               	bsf	11,6	;volatile
  1678  014D                     l66:	
  1679  014D  0008               	return
  1680  014E                     __end_of_InterruptConfig:	
  1681                           
  1682                           	psect	text10
  1683  0165                     __ptext10:	
  1684 ;; *************** function _GlobalInits *****************
  1685 ;; Defined at:
  1686 ;;		line 4 in file "inits.c"
  1687 ;; Parameters:    Size  Location     Type
  1688 ;;		None
  1689 ;; Auto vars:     Size  Location     Type
  1690 ;;		None
  1691 ;; Return value:  Size  Location     Type
  1692 ;;                  1    wreg      void 
  1693 ;; Registers used:
  1694 ;;		wreg, status,2, status,0
  1695 ;; Tracked objects:
  1696 ;;		On entry : 0/0
  1697 ;;		On exit  : 0/0
  1698 ;;		Unchanged: 0/0
  1699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1700 ;;      Params:         0       0       0       0
  1701 ;;      Locals:         0       0       0       0
  1702 ;;      Temps:          0       0       0       0
  1703 ;;      Totals:         0       0       0       0
  1704 ;;Total ram usage:        0 bytes
  1705 ;; Hardware stack levels used:    1
  1706 ;; Hardware stack levels required when called:    1
  1707 ;; This function calls:
  1708 ;;		Nothing
  1709 ;; This function is called by:
  1710 ;;		_main
  1711 ;; This function uses a non-reentrant model
  1712 ;;
  1713                           
  1714                           
  1715                           ;psect for function _GlobalInits
  1716  0165                     _GlobalInits:	
  1717  0165                     l918:	
  1718                           ;incstack = 0
  1719                           ; Regs used in _GlobalInits: [wreg+status,2+status,0]
  1720                           
  1721                           
  1722                           ;inits.c: 7:     OSCCONbits.IRCF=0b111;
  1723  0165  3070               	movlw	112
  1724  0166  1683               	bsf	3,5	;RP0=1, select bank1
  1725  0167  1303               	bcf	3,6	;RP1=0, select bank1
  1726  0168  048F               	iorwf	15,f	;volatile
  1727                           
  1728                           ;inits.c: 8:     ADCON1bits.PCFG=0b0110;
  1729  0169  081F               	movf	31,w	;volatile
  1730  016A  39F0               	andlw	-16
  1731  016B  3806               	iorlw	6
  1732  016C  009F               	movwf	31	;volatile
  1733  016D                     l920:	
  1734                           
  1735                           ;inits.c: 11:     TRISA0=0;
  1736  016D  1005               	bcf	5,0	;volatile
  1737  016E                     l922:	
  1738                           
  1739                           ;inits.c: 12:     TRISA1=1;
  1740  016E  1485               	bsf	5,1	;volatile
  1741  016F                     l924:	
  1742                           
  1743                           ;inits.c: 13:     TRISA2=0;
  1744  016F  1105               	bcf	5,2	;volatile
  1745  0170                     l926:	
  1746                           
  1747                           ;inits.c: 14:     TRISA3=1;
  1748  0170  1585               	bsf	5,3	;volatile
  1749  0171                     l928:	
  1750                           
  1751                           ;inits.c: 15:     TRISA4=1;
  1752  0171  1605               	bsf	5,4	;volatile
  1753  0172                     l930:	
  1754                           
  1755                           ;inits.c: 16:     TRISA6=1;
  1756  0172  1705               	bsf	5,6	;volatile
  1757  0173                     l932:	
  1758                           
  1759                           ;inits.c: 17:     TRISA7=1;
  1760  0173  1785               	bsf	5,7	;volatile
  1761  0174                     l934:	
  1762                           
  1763                           ;inits.c: 19:     TRISB0=1;
  1764  0174  1406               	bsf	6,0	;volatile
  1765  0175                     l936:	
  1766                           
  1767                           ;inits.c: 20:     TRISB1=1;
  1768  0175  1486               	bsf	6,1	;volatile
  1769  0176                     l938:	
  1770                           
  1771                           ;inits.c: 21:     TRISB2=0;
  1772  0176  1106               	bcf	6,2	;volatile
  1773  0177                     l940:	
  1774                           
  1775                           ;inits.c: 22:     TRISB3=0;
  1776  0177  1186               	bcf	6,3	;volatile
  1777  0178                     l942:	
  1778                           
  1779                           ;inits.c: 23:     TRISB4=0;
  1780  0178  1206               	bcf	6,4	;volatile
  1781  0179                     l944:	
  1782                           
  1783                           ;inits.c: 24:     TRISB5=0;
  1784  0179  1286               	bcf	6,5	;volatile
  1785  017A                     l45:	
  1786  017A  0008               	return
  1787  017B                     __end_of_GlobalInits:	
  1788                           
  1789                           	psect	text11
  1790  017B                     __ptext11:	
  1791 ;; *************** function _CheckGateCloseSwitch *****************
  1792 ;; Defined at:
  1793 ;;		line 56 in file "input_handler.c"
  1794 ;; Parameters:    Size  Location     Type
  1795 ;;		None
  1796 ;; Auto vars:     Size  Location     Type
  1797 ;;		None
  1798 ;; Return value:  Size  Location     Type
  1799 ;;                  1    wreg      void 
  1800 ;; Registers used:
  1801 ;;		wreg, status,2, status,0, pclath, cstack
  1802 ;; Tracked objects:
  1803 ;;		On entry : 0/0
  1804 ;;		On exit  : 0/0
  1805 ;;		Unchanged: 0/0
  1806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1807 ;;      Params:         0       0       0       0
  1808 ;;      Locals:         0       0       0       0
  1809 ;;      Temps:          0       0       0       0
  1810 ;;      Totals:         0       0       0       0
  1811 ;;Total ram usage:        0 bytes
  1812 ;; Hardware stack levels used:    1
  1813 ;; Hardware stack levels required when called:    2
  1814 ;; This function calls:
  1815 ;;		_DebounceWait
  1816 ;;		_GateStartHighTime
  1817 ;; This function is called by:
  1818 ;;		_main
  1819 ;; This function uses a non-reentrant model
  1820 ;;
  1821                           
  1822                           
  1823                           ;psect for function _CheckGateCloseSwitch
  1824  017B                     _CheckGateCloseSwitch:	
  1825  017B                     l972:	
  1826                           ;incstack = 0
  1827                           ; Regs used in _CheckGateCloseSwitch: [wreg+status,2+status,0+pclath+cstack]
  1828                           
  1829                           
  1830                           ;input_handler.c: 58:  if(PORTAbits.RA1==1)
  1831  017B  1283               	bcf	3,5	;RP0=0, select bank0
  1832  017C  1303               	bcf	3,6	;RP1=0, select bank0
  1833  017D  1C85               	btfss	5,1	;volatile
  1834  017E  2980               	goto	u211
  1835  017F  2981               	goto	u210
  1836  0180                     u211:	
  1837  0180  298D               	goto	l184
  1838  0181                     u210:	
  1839  0181                     l974:	
  1840                           
  1841                           ;input_handler.c: 59:  {;input_handler.c: 60:         DebounceWait();
  1842  0181  21BE               	fcall	_DebounceWait
  1843  0182                     l976:	
  1844                           
  1845                           ;input_handler.c: 62:         if(PORTAbits.RA1==1)
  1846  0182  1283               	bcf	3,5	;RP0=0, select bank0
  1847  0183  1303               	bcf	3,6	;RP1=0, select bank0
  1848  0184  1C85               	btfss	5,1	;volatile
  1849  0185  2987               	goto	u221
  1850  0186  2988               	goto	u220
  1851  0187                     u221:	
  1852  0187  298D               	goto	l184
  1853  0188                     u220:	
  1854  0188                     l978:	
  1855                           
  1856                           ;input_handler.c: 63:         {;input_handler.c: 64:             PORTBbits.RB3=1;
  1857  0188  1586               	bsf	6,3	;volatile
  1858  0189                     l980:	
  1859                           
  1860                           ;input_handler.c: 65:             GateStartHighTime();
  1861  0189  21B4               	fcall	_GateStartHighTime
  1862  018A                     l982:	
  1863                           
  1864                           ;input_handler.c: 66:             PORTBbits.RB3=0;
  1865  018A  1283               	bcf	3,5	;RP0=0, select bank0
  1866  018B  1303               	bcf	3,6	;RP1=0, select bank0
  1867  018C  1186               	bcf	6,3	;volatile
  1868  018D                     l184:	
  1869  018D  0008               	return
  1870  018E                     __end_of_CheckGateCloseSwitch:	
  1871                           
  1872                           	psect	text12
  1873  01B4                     __ptext12:	
  1874 ;; *************** function _GateStartHighTime *****************
  1875 ;; Defined at:
  1876 ;;		line 79 in file "input_handler.c"
  1877 ;; Parameters:    Size  Location     Type
  1878 ;;		None
  1879 ;; Auto vars:     Size  Location     Type
  1880 ;;		None
  1881 ;; Return value:  Size  Location     Type
  1882 ;;                  1    wreg      void 
  1883 ;; Registers used:
  1884 ;;		wreg, status,2, status,0
  1885 ;; Tracked objects:
  1886 ;;		On entry : 0/0
  1887 ;;		On exit  : 0/0
  1888 ;;		Unchanged: 0/0
  1889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1890 ;;      Params:         0       0       0       0
  1891 ;;      Locals:         0       0       0       0
  1892 ;;      Temps:          1       0       0       0
  1893 ;;      Totals:         1       0       0       0
  1894 ;;Total ram usage:        1 bytes
  1895 ;; Hardware stack levels used:    1
  1896 ;; Hardware stack levels required when called:    1
  1897 ;; This function calls:
  1898 ;;		Nothing
  1899 ;; This function is called by:
  1900 ;;		_CheckGateCloseSwitch
  1901 ;; This function uses a non-reentrant model
  1902 ;;
  1903                           
  1904                           
  1905                           ;psect for function _GateStartHighTime
  1906  01B4                     _GateStartHighTime:	
  1907  01B4                     l914:	
  1908                           ;incstack = 0
  1909                           ; Regs used in _GateStartHighTime: [wreg+status,2+status,0]
  1910                           
  1911                           
  1912                           ;input_handler.c: 81:     g_key_timer=200;
  1913  01B4  30C8               	movlw	200
  1914  01B5  00F2               	movwf	??_GateStartHighTime
  1915  01B6  0872               	movf	??_GateStartHighTime,w
  1916  01B7  00FB               	movwf	_g_key_timer	;volatile
  1917  01B8                     l916:	
  1918                           ;input_handler.c: 82:     while(g_key_timer>0);
  1919                           
  1920  01B8  087B               	movf	_g_key_timer,w	;volatile
  1921  01B9  1D03               	btfss	3,2
  1922  01BA  29BC               	goto	u171
  1923  01BB  29BD               	goto	u170
  1924  01BC                     u171:	
  1925  01BC  29B8               	goto	l916
  1926  01BD                     u170:	
  1927  01BD                     l196:	
  1928  01BD  0008               	return
  1929  01BE                     __end_of_GateStartHighTime:	
  1930                           
  1931                           	psect	text13
  1932  01BE                     __ptext13:	
  1933 ;; *************** function _DebounceWait *****************
  1934 ;; Defined at:
  1935 ;;		line 71 in file "input_handler.c"
  1936 ;; Parameters:    Size  Location     Type
  1937 ;;		None
  1938 ;; Auto vars:     Size  Location     Type
  1939 ;;		None
  1940 ;; Return value:  Size  Location     Type
  1941 ;;                  1    wreg      void 
  1942 ;; Registers used:
  1943 ;;		wreg, status,2, status,0
  1944 ;; Tracked objects:
  1945 ;;		On entry : 0/0
  1946 ;;		On exit  : 0/0
  1947 ;;		Unchanged: 0/0
  1948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1949 ;;      Params:         0       0       0       0
  1950 ;;      Locals:         0       0       0       0
  1951 ;;      Temps:          1       0       0       0
  1952 ;;      Totals:         1       0       0       0
  1953 ;;Total ram usage:        1 bytes
  1954 ;; Hardware stack levels used:    1
  1955 ;; Hardware stack levels required when called:    1
  1956 ;; This function calls:
  1957 ;;		Nothing
  1958 ;; This function is called by:
  1959 ;;		_CheckInputState
  1960 ;;		_CheckGateCloseSwitch
  1961 ;; This function uses a non-reentrant model
  1962 ;;
  1963                           
  1964                           
  1965                           ;psect for function _DebounceWait
  1966  01BE                     _DebounceWait:	
  1967  01BE                     l852:	
  1968                           ;incstack = 0
  1969                           ; Regs used in _DebounceWait: [wreg+status,2+status,0]
  1970                           
  1971                           
  1972                           ;input_handler.c: 75:     g_key_timer=20;
  1973  01BE  3014               	movlw	20
  1974  01BF  00F2               	movwf	??_DebounceWait
  1975  01C0  0872               	movf	??_DebounceWait,w
  1976  01C1  00FB               	movwf	_g_key_timer	;volatile
  1977  01C2                     l854:	
  1978                           ;input_handler.c: 76:     while(g_key_timer>0);
  1979                           
  1980  01C2  087B               	movf	_g_key_timer,w	;volatile
  1981  01C3  1D03               	btfss	3,2
  1982  01C4  29C6               	goto	u101
  1983  01C5  29C7               	goto	u100
  1984  01C6                     u101:	
  1985  01C6  29C2               	goto	l854
  1986  01C7                     u100:	
  1987  01C7                     l190:	
  1988  01C7  0008               	return
  1989  01C8                     __end_of_DebounceWait:	
  1990                           
  1991                           	psect	text14
  1992  014E                     __ptext14:	
  1993 ;; *************** function _ISR *****************
  1994 ;; Defined at:
  1995 ;;		line 39 in file "interrupts.c"
  1996 ;; Parameters:    Size  Location     Type
  1997 ;;		None
  1998 ;; Auto vars:     Size  Location     Type
  1999 ;;		None
  2000 ;; Return value:  Size  Location     Type
  2001 ;;                  1    wreg      void 
  2002 ;; Registers used:
  2003 ;;		wreg, status,2, status,0
  2004 ;; Tracked objects:
  2005 ;;		On entry : 0/0
  2006 ;;		On exit  : 0/0
  2007 ;;		Unchanged: 0/0
  2008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2009 ;;      Params:         0       0       0       0
  2010 ;;      Locals:         0       0       0       0
  2011 ;;      Temps:          2       0       0       0
  2012 ;;      Totals:         2       0       0       0
  2013 ;;Total ram usage:        2 bytes
  2014 ;; Hardware stack levels used:    1
  2015 ;; This function calls:
  2016 ;;		Nothing
  2017 ;; This function is called by:
  2018 ;;		Interrupt level 1
  2019 ;; This function uses a non-reentrant model
  2020 ;;
  2021                           
  2022                           
  2023                           ;psect for function _ISR
  2024  014E                     _ISR:	
  2025  014E                     i1l984:	
  2026                           
  2027                           ;interrupts.c: 49:     if (TMR0IE && TMR0IF)
  2028  014E  1E8B               	btfss	11,5	;volatile
  2029  014F  2951               	goto	u23_21
  2030  0150  2952               	goto	u23_20
  2031  0151                     u23_21:	
  2032  0151  295E               	goto	i1l73
  2033  0152                     u23_20:	
  2034  0152                     i1l986:	
  2035  0152  1D0B               	btfss	11,2	;volatile
  2036  0153  2955               	goto	u24_21
  2037  0154  2956               	goto	u24_20
  2038  0155                     u24_21:	
  2039  0155  295E               	goto	i1l73
  2040  0156                     u24_20:	
  2041  0156                     i1l988:	
  2042                           
  2043                           ;interrupts.c: 50:     {;interrupts.c: 52:         if(g_key_timer>0)
  2044  0156  087B               	movf	_g_key_timer,w	;volatile
  2045  0157  1903               	btfsc	3,2
  2046  0158  295A               	goto	u25_21
  2047  0159  295B               	goto	u25_20
  2048  015A                     u25_21:	
  2049  015A  295D               	goto	i1l992
  2050  015B                     u25_20:	
  2051  015B                     i1l990:	
  2052                           
  2053                           ;interrupts.c: 53:         {;interrupts.c: 54:            g_key_timer--;
  2054  015B  3001               	movlw	1
  2055  015C  02FB               	subwf	_g_key_timer,f	;volatile
  2056  015D                     i1l992:	
  2057                           
  2058                           ;interrupts.c: 56:         TMR0IF=0;
  2059  015D  110B               	bcf	11,2	;volatile
  2060  015E                     i1l73:	
  2061  015E  0871               	movf	??_ISR+1,w
  2062  015F  008A               	movwf	10
  2063  0160  0E70               	swapf	??_ISR^(0+4294967168),w
  2064  0161  0083               	movwf	3
  2065  0162  0EFE               	swapf	btemp,f
  2066  0163  0E7E               	swapf	btemp,w
  2067  0164  0009               	retfie
  2068  0165                     __end_of_ISR:	
  2069  007E                     btemp	set	126	;btemp
  2070  007E                     wtemp0	set	126
  2071                           
  2072                           	psect	intentry
  2073  0004                     __pintentry:	
  2074                           ;incstack = 0
  2075                           ; Regs used in _ISR: [wreg+status,2+status,0]
  2076                           
  2077  0004                     interrupt_function:	
  2078  007E                     saved_w	set	btemp
  2079  0004  00FE               	movwf	btemp
  2080  0005  0E03               	swapf	3,w
  2081  0006  00F0               	movwf	??_ISR
  2082  0007  080A               	movf	10,w
  2083  0008  00F1               	movwf	??_ISR+1
  2084  0009  294E               	ljmp	_ISR


Data Sizes:
    Strings     0
    Constant    6
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      12
    BANK0            80     19      19
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    ManchesteEncode@data_to_send	PTR unsigned char  size(1) Largest target is 10
		 -> SendFrame@data_table(BANK0[10]), 

    CRC16@data_tab_ptr	PTR unsigned char  size(1) Largest target is 10
		 -> SendFrame@data_table(BANK0[10]), 


Critical Paths under _main in COMMON

    _main->_LineState
    _LineState->_SendFrame
    _SendFrame->_ManchesteEncode
    _CheckInputState->_DebounceWait
    _CheckGateCloseSwitch->_DebounceWait
    _CheckGateCloseSwitch->_GateStartHighTime

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _LineState->_SendFrame
    _SendFrame->_CRC16

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1504
               _CheckGateCloseSwitch
                        _GlobalInits
                    _InterruptConfig
                          _LineState
 ---------------------------------------------------------------------------------
 (1) _LineState                                            1     1      0    1504
                                             10 COMMON     1     1      0
                    _CheckInputState
                          _SendFrame
 ---------------------------------------------------------------------------------
 (2) _SendFrame                                           15    15      0    1474
                                              9 COMMON     1     1      0
                                              5 BANK0     14    14      0
                              _CRC16
                    _ManchesteEncode
                    _WaitManchesterT
 ---------------------------------------------------------------------------------
 (3) _ManchesteEncode                                      7     6      1     267
                                              2 COMMON     7     6      1
                  _ManchesterSendOne
                 _ManchesterSendZero
 ---------------------------------------------------------------------------------
 (4) _ManchesterSendZero                                   0     0      0       0
                    _WaitManchesterT
 ---------------------------------------------------------------------------------
 (4) _ManchesterSendOne                                    0     0      0       0
                    _WaitManchesterT
 ---------------------------------------------------------------------------------
 (3) _WaitManchesterT                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _CRC16                                               10     8      2     429
                                              2 COMMON     5     3      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) _CheckInputState                                      1     1      0      30
                                              3 COMMON     1     1      0
                       _DebounceWait
 ---------------------------------------------------------------------------------
 (1) _InterruptConfig                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GlobalInits                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CheckGateCloseSwitch                                 0     0      0       0
                       _DebounceWait
                  _GateStartHighTime
 ---------------------------------------------------------------------------------
 (2) _GateStartHighTime                                    1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _DebounceWait                                         1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CheckGateCloseSwitch
     _DebounceWait
     _GateStartHighTime
   _GlobalInits
   _InterruptConfig
   _LineState
     _CheckInputState
       _DebounceWait
     _SendFrame
       _CRC16
       _ManchesteEncode
         _ManchesterSendOne
           _WaitManchesterT
         _ManchesterSendZero
           _WaitManchesterT
       _WaitManchesterT

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50     13      13       3       23.8%
BITBANK1            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK1               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK2            50      0       0       6        0.0%
BANK2               50      0       0       7        0.0%
ABS                  0      0      1F       8        0.0%
BITBANK0            50      0       0       9        0.0%
DATA                 0      0      1F      10        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Apr  1 20:56:52 2020

                 ??_CheckInputState 0073                                   l7 009A  
                                 pc 0002                         __CFG_CP$OFF 0000  
                                l12 00CB                                  l45 017A  
                                l66 014D                                  fsr 0004  
                     ??_GlobalInits 0072                                 l111 01B3  
                               l114 01D9                                 l108 01AF  
                               l117 01D0                                 l126 0107  
                               l127 010A                                 l136 007F  
                               l137 0081                                 l171 019D  
                               l190 01C7                                 l184 018D  
                               l179 0134                                 l196 01BD  
                               l900 018F                                 l902 0194  
                               l910 019C                                 l920 016D  
                               l904 0195                                 l914 01B4  
                               l930 0172                                 l922 016E  
                               l906 019A                                 l852 01BE  
                               l916 01B8                                 l940 0177  
                               l932 0173                                 l924 016F  
                               l854 01C2                                 l942 0178  
                               l934 0174                                 l926 0170  
                               l918 0165                                 l950 013D  
                               l944 0179                                 l936 0175  
                               l928 0171                                 l952 013E  
                               l938 0176                                 l954 0147  
                               l946 0135                                 l980 0189  
                               l972 017B                                 l956 014B  
                               l948 0139                                 l982 018A  
                               l974 0181                                 l958 014C  
                               l976 0182                                 l978 0188  
                               u100 01C7                                 u101 01C6  
                               u210 0181                                 u211 0180  
                               u220 0188                                 u221 0187  
                               u150 0194                                 u310 01B3  
                               u151 0193                                 u311 01B2  
                               u160 019A                                 u161 0199  
                               u170 01BD                                 u171 01BC  
                               u500 00C7                                 u501 00C6  
                               u510 002A                                 u511 0029  
                               u520 0038                                 u521 0037  
                               u370 00E6                                 u530 0047  
                      __CFG_CPD$OFF 0000                                 u371 00E5  
                               u531 0046                                 u380 00F1  
                               u364 00DF                                 u540 007F  
                               _ISR 014E                                 u381 00F0  
                               u365 00DD                                 u541 007E  
                               u470 009E                                 u390 0107  
                               u550 0115                                 u471 009D  
                               u391 0106                                 u551 0114  
                               u560 0125                                 u561 0124  
                               u490 00BD                                 u570 0132  
                               u491 00BC                                 u395 0103  
                               u571 0131                                 u485 00AD  
                               fsr0 0004                                 indf 0000  
                      __CFG_LVP$OFF 0000                                ?_ISR 0070  
                              l1040 01D1                                l1200 0047  
                              l1042 01D4                                l1050 01CC  
                              l1210 0067                                l1202 004F  
                              l1036 01AA                                l1044 01D5  
                              l1220 006A                                l1212 0068  
                              l1204 005B                                l1038 01AD  
                              l1046 01C8                                l1230 0079  
                              l1222 0070                                l1214 0069  
                              l1206 005F                                l1048 01CB  
                              l1080 00CF                                l1224 0071  
                              l1208 0063                                l1240 0128  
                              l1232 010B                                l1162 0085  
                              l1090 00E8                                l1226 0072  
                              l1242 0132                                l1234 0115  
                              l1180 00BD                                l1172 009E  
                              l1164 0089                                l1092 00E9  
                              l1228 0073                                l1236 0118  
                              l1244 01DA                                l1174 00AC  
                              l1166 0099                                l1182 00C1  
                              l1094 00ED                                l1086 00D3  
                              l1078 00CD                                l1190 0025  
                              l1238 0125                                l1246 01DC  
                              l1184 00C7                                l1176 00B3  
                              l1096 00F1                                l1088 00E6  
                              l1192 002A                                l1248 01DD  
                              l1178 00B7                                l1098 00F5  
                              l1194 0033                                l1196 0038  
                              l1188 0011                                l1198 0041  
                              i1l73 015E                                _TMR1 000E  
                  ?_ManchesteEncode 0072                        __CFG_WRT$OFF 0000  
                              _main 01DA                                btemp 007E  
                              start 000A                   CRC16@data_tab_ptr 0020  
                     __CFG_MCLRE$ON 0000                               ??_ISR 0070  
                             ?_main 0070                               _CCPR1 0015  
                             _CRC16 0082                       __CFG_WDTE$OFF 0000  
                             i1l990 015B                               i1l992 015D  
                             i1l984 014E                               i1l986 0152  
                             i1l988 0156                               u23_20 0152  
                             u23_21 0151                               u24_20 0156  
                             u24_21 0155                               u25_20 015B  
                             u25_21 015A                      __CFG_CCPMX$RB2 0000  
               __end_of_GlobalInits 017B            ManchesteEncode@data_loop 0077  
                    __CFG_BOREN$OFF 0000                               pclath 000A  
                             status 0003                               wtemp0 007E  
                        SendFrame@i 0031                     __initialization 000B  
                      __end_of_main 01E0                              CRC16@i 0022  
                            CRC16@k 0021                              ??_main 007B  
                            ?_CRC16 0072               __size_of_DebounceWait 000A  
                         CRC16@size 0072                              _TMR0IE 005D  
                            _TMR0IF 005A                              _TRISA0 0428  
                            _TRISA1 0429                              _TRISA2 042A  
                            _TRISB0 0430                              _TRISA3 042B  
                            _TRISB1 0431                              _TRISA4 042C  
                            _TRISB2 0432                              _TRISB3 0433  
                            _TRISA6 042E                              _TRISB4 0434  
                            _TRISA7 042F                              _TRISB5 0435  
                __size_of_LineState 002A                      __CFG_PWRTE$OFF 0000  
                __size_of_SendFrame 0074                        _DebounceWait 01BE  
                       _GlobalInits 0165                     _WaitManchesterT 01AA  
        __end_of_ManchesterSendZero 01D1                              saved_w 007E  
               SendFrame@data_table 0025                     _InterruptConfig 0135  
                   _CheckInputState 018E             __end_of__initialization 000C  
                 _ManchesterSendOne 01D1                       __end_of_CRC16 00CC  
                ?_ManchesterSendOne 0070                      __pcstackCOMMON 0070  
     __size_of_CheckGateCloseSwitch 0013                 ??_ManchesterSendOne 0072  
                           ??_CRC16 0074                   __end_of_LineState 0135  
                    _OPTION_REGbits 0081                   __end_of_SendFrame 0082  
         __end_of_ManchesterSendOne 01DA                          __pmaintext 01DA  
           __end_of_WaitManchesterT 01B4                          __pintentry 0004  
           __end_of_InterruptConfig 014E             __end_of_CheckInputState 019E  
                        __stringtab 019E            __size_of_ManchesteEncode 003F  
                 _GateStartHighTime 01B4                             __ptext1 010B  
                           __ptext2 000E                             __ptext3 00CC  
                           __ptext4 01C8                             __ptext5 01D1  
                           __ptext6 01AA                             __ptext7 0082  
                           __ptext8 018E                             __ptext9 0135  
                ?_GateStartHighTime 0070                        __size_of_ISR 0017  
                         _T1CONbits 0010                CheckInputState@input 0073  
               ??_GateStartHighTime 0072                end_of_initialization 000C  
        __size_of_ManchesterSendOne 0009                    ?_WaitManchesterT 0070  
         __end_of_GateStartHighTime 01BE                        ?_GlobalInits 0070  
                         _PORTAbits 0005                           _PORTBbits 0006  
                  ?_InterruptConfig 0070                    ?_CheckInputState 0070  
                _ManchesterSendZero 01C8                         _CCP1CONbits 0017  
               ?_ManchesterSendZero 0070                   ??_ManchesteEncode 0073  
              ??_ManchesterSendZero 0072             ManchesteEncode@bit_loop 0078  
               start_initialization 000B                         __end_of_ISR 0165  
                         _LineState 010B        __end_of_CheckGateCloseSwitch 018E  
                         _SendFrame 000E                            CRC16@crc 0023  
__end_ofInterruptConfig@k_baud_rate 01AA          InterruptConfig@k_baud_rate 01A6  
        __size_of_GateStartHighTime 000A          ManchesteEncode@data_lenght 0072  
                       __pbssCOMMON 007B                           ___latbits 0000  
                     __pcstackBANK0 0020                          ?_LineState 0070  
                        ?_SendFrame 0070                         _g_key_timer 007B  
                         __pstrings 019E                      __size_of_CRC16 004A  
              __size_of_GlobalInits 0016                   interrupt_function 0004  
                          _PIR1bits 000C                _CheckGateCloseSwitch 017B  
                     ?_DebounceWait 0070                         __stringbase 01A3  
                        _ADCON1bits 009F                         ??_LineState 007A  
                    CRC16@generator 01A4                         ??_SendFrame 0079  
                   _ManchesteEncode 00CC                      ??_DebounceWait 0072  
             ?_CheckGateCloseSwitch 0070                  __end_of__stringtab 01A4  
          __size_of_WaitManchesterT 000A                            __ptext10 0165  
                          __ptext11 017B                            __ptext12 01B4  
                          __ptext13 01BE                            __ptext14 014E  
            __end_ofCRC16@generator 01A6            __size_of_InterruptConfig 0019  
          __size_of_CheckInputState 0010                       __size_of_main 0006  
       ManchesteEncode@data_to_send 0076                          _INTCONbits 000B  
       __size_of_ManchesterSendZero 0009                    SendFrame@crc_val 002F  
                          intlevel1 0000             __end_of_ManchesteEncode 010B  
                         stringcode 019E                          _OSCCONbits 008F  
            ??_CheckGateCloseSwitch 0073                            stringdir 019E  
                          stringtab 019E                   ??_WaitManchesterT 0072  
              __end_of_DebounceWait 01C8                  __CFG_FOSC$INTOSCIO 0000  
                     SendFrame@type 0032                   ??_InterruptConfig 0072  
