Version 4.0 HI-TECH Software Intermediate Code
"30 ./main.h
[; ;./main.h: 30:     KeyStruct *set_down;
[s S135 `uc 1 `uc 1 `uc 1 `uc 1 `uc 1 `uc 1 ]
[n S135 . seconds minutes hours day month year ]
"10 ./hw_uart.h
[; ;./hw_uart.h: 10: void SendUART(char data);
[v _SendUART `(v ~T0 @X0 0 ef1`uc ]
"11
[; ;./hw_uart.h: 11: void SendDigitUART(unsigned int data);
[v _SendDigitUART `(v ~T0 @X0 0 ef1`ui ]
"13 ./hw_i2c.h
[; ;./hw_i2c.h: 13: void I2C_Master_Start(void);
[v _I2C_Master_Start `(v ~T0 @X0 0 ef ]
"15
[; ;./hw_i2c.h: 15: void I2C_Master_Write(unsigned data);
[v _I2C_Master_Write `(v ~T0 @X0 0 ef1`ui ]
"14
[; ;./hw_i2c.h: 14: void I2C_Master_Stop(void);
[v _I2C_Master_Stop `(v ~T0 @X0 0 ef ]
"16
[; ;./hw_i2c.h: 16: unsigned char I2C_Master_Read(unsigned char ack);
[v _I2C_Master_Read `(uc ~T0 @X0 0 ef1`uc ]
"54 /opt/microchip/xc8/v2.10/pic/include/pic16f886.h
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 54: __asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
"61
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 61: __asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
"68
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 68: __asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
"75
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 75: __asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
"161
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 161: __asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
"168
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 168: __asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
"230
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 230: __asm("PORTB equ 06h");
[; <" PORTB equ 06h ;# ">
"292
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 292: __asm("PORTC equ 07h");
[; <" PORTC equ 07h ;# ">
"354
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 354: __asm("PORTE equ 09h");
[; <" PORTE equ 09h ;# ">
"375
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 375: __asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
"382
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 382: __asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
"460
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 460: __asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
"516
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 516: __asm("PIR2 equ 0Dh");
[; <" PIR2 equ 0Dh ;# ">
"573
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 573: __asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
"580
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 580: __asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
"587
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 587: __asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
"594
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 594: __asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
"688
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 688: __asm("TMR2 equ 011h");
[; <" TMR2 equ 011h ;# ">
"695
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 695: __asm("T2CON equ 012h");
[; <" T2CON equ 012h ;# ">
"766
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 766: __asm("SSPBUF equ 013h");
[; <" SSPBUF equ 013h ;# ">
"773
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 773: __asm("SSPCON equ 014h");
[; <" SSPCON equ 014h ;# ">
"843
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 843: __asm("CCPR1 equ 015h");
[; <" CCPR1 equ 015h ;# ">
"850
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 850: __asm("CCPR1L equ 015h");
[; <" CCPR1L equ 015h ;# ">
"857
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 857: __asm("CCPR1H equ 016h");
[; <" CCPR1H equ 016h ;# ">
"864
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 864: __asm("CCP1CON equ 017h");
[; <" CCP1CON equ 017h ;# ">
"961
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 961: __asm("RCSTA equ 018h");
[; <" RCSTA equ 018h ;# ">
"1056
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 1056: __asm("TXREG equ 019h");
[; <" TXREG equ 019h ;# ">
"1063
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 1063: __asm("RCREG equ 01Ah");
[; <" RCREG equ 01Ah ;# ">
"1070
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 1070: __asm("CCPR2 equ 01Bh");
[; <" CCPR2 equ 01Bh ;# ">
"1077
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 1077: __asm("CCPR2L equ 01Bh");
[; <" CCPR2L equ 01Bh ;# ">
"1084
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 1084: __asm("CCPR2H equ 01Ch");
[; <" CCPR2H equ 01Ch ;# ">
"1091
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 1091: __asm("CCP2CON equ 01Dh");
[; <" CCP2CON equ 01Dh ;# ">
"1161
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 1161: __asm("ADRESH equ 01Eh");
[; <" ADRESH equ 01Eh ;# ">
"1168
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 1168: __asm("ADCON0 equ 01Fh");
[; <" ADCON0 equ 01Fh ;# ">
"1269
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 1269: __asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
"1339
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 1339: __asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
"1401
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 1401: __asm("TRISB equ 086h");
[; <" TRISB equ 086h ;# ">
"1463
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 1463: __asm("TRISC equ 087h");
[; <" TRISC equ 087h ;# ">
"1525
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 1525: __asm("TRISE equ 089h");
[; <" TRISE equ 089h ;# ">
"1546
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 1546: __asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
"1602
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 1602: __asm("PIE2 equ 08Dh");
[; <" PIE2 equ 08Dh ;# ">
"1659
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 1659: __asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
"1706
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 1706: __asm("OSCCON equ 08Fh");
[; <" OSCCON equ 08Fh ;# ">
"1771
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 1771: __asm("OSCTUNE equ 090h");
[; <" OSCTUNE equ 090h ;# ">
"1823
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 1823: __asm("SSPCON2 equ 091h");
[; <" SSPCON2 equ 091h ;# ">
"1885
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 1885: __asm("PR2 equ 092h");
[; <" PR2 equ 092h ;# ">
"1892
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 1892: __asm("SSPADD equ 093h");
[; <" SSPADD equ 093h ;# ">
"1899
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 1899: __asm("SSPMSK equ 093h");
[; <" SSPMSK equ 093h ;# ">
"1904
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 1904: __asm("MSK equ 093h");
[; <" MSK equ 093h ;# ">
"2021
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 2021: __asm("SSPSTAT equ 094h");
[; <" SSPSTAT equ 094h ;# ">
"2190
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 2190: __asm("WPUB equ 095h");
[; <" WPUB equ 095h ;# ">
"2260
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 2260: __asm("IOCB equ 096h");
[; <" IOCB equ 096h ;# ">
"2330
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 2330: __asm("VRCON equ 097h");
[; <" VRCON equ 097h ;# ">
"2400
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 2400: __asm("TXSTA equ 098h");
[; <" TXSTA equ 098h ;# ">
"2486
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 2486: __asm("SPBRG equ 099h");
[; <" SPBRG equ 099h ;# ">
"2548
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 2548: __asm("SPBRGH equ 09Ah");
[; <" SPBRGH equ 09Ah ;# ">
"2618
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 2618: __asm("PWM1CON equ 09Bh");
[; <" PWM1CON equ 09Bh ;# ">
"2688
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 2688: __asm("ECCPAS equ 09Ch");
[; <" ECCPAS equ 09Ch ;# ">
"2770
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 2770: __asm("PSTRCON equ 09Dh");
[; <" PSTRCON equ 09Dh ;# ">
"2814
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 2814: __asm("ADRESL equ 09Eh");
[; <" ADRESL equ 09Eh ;# ">
"2821
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 2821: __asm("ADCON1 equ 09Fh");
[; <" ADCON1 equ 09Fh ;# ">
"2855
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 2855: __asm("WDTCON equ 0105h");
[; <" WDTCON equ 0105h ;# ">
"2908
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 2908: __asm("CM1CON0 equ 0107h");
[; <" CM1CON0 equ 0107h ;# ">
"2973
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 2973: __asm("CM2CON0 equ 0108h");
[; <" CM2CON0 equ 0108h ;# ">
"3038
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 3038: __asm("CM2CON1 equ 0109h");
[; <" CM2CON1 equ 0109h ;# ">
"3089
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 3089: __asm("EEDATA equ 010Ch");
[; <" EEDATA equ 010Ch ;# ">
"3094
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 3094: __asm("EEDAT equ 010Ch");
[; <" EEDAT equ 010Ch ;# ">
"3101
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 3101: __asm("EEADR equ 010Dh");
[; <" EEADR equ 010Dh ;# ">
"3108
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 3108: __asm("EEDATH equ 010Eh");
[; <" EEDATH equ 010Eh ;# ">
"3115
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 3115: __asm("EEADRH equ 010Fh");
[; <" EEADRH equ 010Fh ;# ">
"3122
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 3122: __asm("SRCON equ 0185h");
[; <" SRCON equ 0185h ;# ">
"3179
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 3179: __asm("BAUDCTL equ 0187h");
[; <" BAUDCTL equ 0187h ;# ">
"3231
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 3231: __asm("ANSEL equ 0188h");
[; <" ANSEL equ 0188h ;# ">
"3275
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 3275: __asm("ANSELH equ 0189h");
[; <" ANSELH equ 0189h ;# ">
"3325
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 3325: __asm("EECON1 equ 018Ch");
[; <" EECON1 equ 018Ch ;# ">
"3370
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 3370: __asm("EECON2 equ 018Dh");
[; <" EECON2 equ 018Dh ;# ">
"6 ./main.h
[; ;./main.h: 6: 
[p x FOSC = INTRC_NOCLKOUT ]
"7
[; ;./main.h: 7: 
[p x WDTE = OFF ]
"8
[; ;./main.h: 8: typedef struct
[p x PWRTE = OFF ]
"9
[; ;./main.h: 9: {
[p x MCLRE = ON ]
"10
[; ;./main.h: 10:  unsigned char seconds,minutes,hours,day,month,year;
[p x CP = OFF ]
"11
[; ;./main.h: 11: 
[p x CPD = OFF ]
"12
[; ;./main.h: 12: }TimeStruct;
[p x BOREN = OFF ]
"13
[; ;./main.h: 13: 
[p x IESO = OFF ]
"14
[; ;./main.h: 14: typedef struct
[p x FCMEN = OFF ]
"15
[; ;./main.h: 15: {
[p x LVP = OFF ]
"18
[; ;./main.h: 18:     void (*button_short_function)(void);
[p x BOR4V = BOR40V ]
"19
[; ;./main.h: 19:     void (*button_long_function)(void);
[p x WRT = OFF ]
"25 pcf8583.c
[; ;pcf8583.c: 25: unsigned char DEC_2_STR(unsigned char dec)
[v _DEC_2_STR `(uc ~T0 @X0 1 ef1`uc ]
"26
[; ;pcf8583.c: 26: {
{
[e :U _DEC_2_STR ]
"25
[; ;pcf8583.c: 25: unsigned char DEC_2_STR(unsigned char dec)
[v _dec `uc ~T0 @X0 1 r1 ]
"26
[; ;pcf8583.c: 26: {
[f ]
"27
[; ;pcf8583.c: 27:     return (0x30+dec);
[e ) -> + -> 48 `i -> _dec `i `uc ]
[e $UE 138  ]
"28
[; ;pcf8583.c: 28: }
[e :UE 138 ]
}
"30
[; ;pcf8583.c: 30: unsigned char BCD_2_DEC(unsigned char bcd)
[v _BCD_2_DEC `(uc ~T0 @X0 1 ef1`uc ]
"31
[; ;pcf8583.c: 31: {
{
[e :U _BCD_2_DEC ]
"30
[; ;pcf8583.c: 30: unsigned char BCD_2_DEC(unsigned char bcd)
[v _bcd `uc ~T0 @X0 1 r1 ]
"31
[; ;pcf8583.c: 31: {
[f ]
"32
[; ;pcf8583.c: 32:     return (((bcd>>4)*10) + (bcd&0x0F));
[e ) -> + * >> -> _bcd `i -> 4 `i -> 10 `i & -> _bcd `i -> 15 `i `uc ]
[e $UE 139  ]
"33
[; ;pcf8583.c: 33: }
[e :UE 139 ]
}
"35
[; ;pcf8583.c: 35: unsigned char DEC_2_BCD(unsigned char dec)
[v _DEC_2_BCD `(uc ~T0 @X0 1 ef1`uc ]
"36
[; ;pcf8583.c: 36: {
{
[e :U _DEC_2_BCD ]
"35
[; ;pcf8583.c: 35: unsigned char DEC_2_BCD(unsigned char dec)
[v _dec `uc ~T0 @X0 1 r1 ]
"36
[; ;pcf8583.c: 36: {
[f ]
"37
[; ;pcf8583.c: 37:     return (((dec/10)<<4)+(dec%10));
[e ) -> + << / -> _dec `i -> 10 `i -> 4 `i % -> _dec `i -> 10 `i `uc ]
[e $UE 140  ]
"38
[; ;pcf8583.c: 38: }
[e :UE 140 ]
}
"40
[; ;pcf8583.c: 40: void Time_To_UART(TimeStruct *time_struct_ptr)
[v _Time_To_UART `(v ~T0 @X0 1 ef1`*S135 ]
"41
[; ;pcf8583.c: 41: {
{
[e :U _Time_To_UART ]
"40
[; ;pcf8583.c: 40: void Time_To_UART(TimeStruct *time_struct_ptr)
[v _time_struct_ptr `*S135 ~T0 @X0 1 r1 ]
"41
[; ;pcf8583.c: 41: {
[f ]
"42
[; ;pcf8583.c: 42:     SendUART('s');
[e ( _SendUART (1 -> -> 115 `ui `uc ]
"43
[; ;pcf8583.c: 43:     SendDigitUART(time_struct_ptr->seconds);
[e ( _SendDigitUART (1 -> . *U _time_struct_ptr 0 `ui ]
"44
[; ;pcf8583.c: 44:     SendUART('m');
[e ( _SendUART (1 -> -> 109 `ui `uc ]
"45
[; ;pcf8583.c: 45:     SendDigitUART(time_struct_ptr->minutes);
[e ( _SendDigitUART (1 -> . *U _time_struct_ptr 1 `ui ]
"46
[; ;pcf8583.c: 46:     SendUART('h');
[e ( _SendUART (1 -> -> 104 `ui `uc ]
"47
[; ;pcf8583.c: 47:     SendDigitUART(time_struct_ptr->hours);
[e ( _SendDigitUART (1 -> . *U _time_struct_ptr 2 `ui ]
"48
[; ;pcf8583.c: 48:     SendUART('D');
[e ( _SendUART (1 -> -> 68 `ui `uc ]
"49
[; ;pcf8583.c: 49:     SendDigitUART(time_struct_ptr->day);
[e ( _SendDigitUART (1 -> . *U _time_struct_ptr 3 `ui ]
"50
[; ;pcf8583.c: 50:     SendUART('M');
[e ( _SendUART (1 -> -> 77 `ui `uc ]
"51
[; ;pcf8583.c: 51:     SendDigitUART(time_struct_ptr->month);
[e ( _SendDigitUART (1 -> . *U _time_struct_ptr 4 `ui ]
"52
[; ;pcf8583.c: 52:     SendUART('Y');
[e ( _SendUART (1 -> -> 89 `ui `uc ]
"53
[; ;pcf8583.c: 53:     SendDigitUART(time_struct_ptr->year);
[e ( _SendDigitUART (1 -> . *U _time_struct_ptr 5 `ui ]
"54
[; ;pcf8583.c: 54:     SendUART(0x0d);
[e ( _SendUART (1 -> -> 13 `i `uc ]
"55
[; ;pcf8583.c: 55: }
[e :UE 141 ]
}
"59
[; ;pcf8583.c: 59: void PCF8583_Write_Byte(unsigned char address, unsigned char data)
[v _PCF8583_Write_Byte `(v ~T0 @X0 1 ef2`uc`uc ]
"60
[; ;pcf8583.c: 60: {
{
[e :U _PCF8583_Write_Byte ]
"59
[; ;pcf8583.c: 59: void PCF8583_Write_Byte(unsigned char address, unsigned char data)
[v _address `uc ~T0 @X0 1 r1 ]
[v _data `uc ~T0 @X0 1 r2 ]
"60
[; ;pcf8583.c: 60: {
[f ]
"61
[; ;pcf8583.c: 61:  I2C_Master_Start();
[e ( _I2C_Master_Start ..  ]
"62
[; ;pcf8583.c: 62:  I2C_Master_Write(0xA0);
[e ( _I2C_Master_Write (1 -> -> 160 `i `ui ]
"63
[; ;pcf8583.c: 63:  I2C_Master_Write(address);
[e ( _I2C_Master_Write (1 -> _address `ui ]
"64
[; ;pcf8583.c: 64:  I2C_Master_Write(data);
[e ( _I2C_Master_Write (1 -> _data `ui ]
"65
[; ;pcf8583.c: 65:  I2C_Master_Stop();
[e ( _I2C_Master_Stop ..  ]
"66
[; ;pcf8583.c: 66: }
[e :UE 142 ]
}
"69
[; ;pcf8583.c: 69: unsigned char PCF8583_Read_Byte(unsigned char address)
[v _PCF8583_Read_Byte `(uc ~T0 @X0 1 ef1`uc ]
"70
[; ;pcf8583.c: 70: {
{
[e :U _PCF8583_Read_Byte ]
"69
[; ;pcf8583.c: 69: unsigned char PCF8583_Read_Byte(unsigned char address)
[v _address `uc ~T0 @X0 1 r1 ]
"70
[; ;pcf8583.c: 70: {
[f ]
"71
[; ;pcf8583.c: 71:  unsigned char retval;
[v _retval `uc ~T0 @X0 1 a ]
"72
[; ;pcf8583.c: 72:  I2C_Master_Start();
[e ( _I2C_Master_Start ..  ]
"73
[; ;pcf8583.c: 73:  I2C_Master_Write(0xA0);
[e ( _I2C_Master_Write (1 -> -> 160 `i `ui ]
"74
[; ;pcf8583.c: 74:  I2C_Master_Write(address);
[e ( _I2C_Master_Write (1 -> _address `ui ]
"75
[; ;pcf8583.c: 75:  I2C_Master_Start();
[e ( _I2C_Master_Start ..  ]
"76
[; ;pcf8583.c: 76:  I2C_Master_Write(0xA1);
[e ( _I2C_Master_Write (1 -> -> 161 `i `ui ]
"77
[; ;pcf8583.c: 77:  retval = I2C_Master_Read(0);
[e = _retval ( _I2C_Master_Read (1 -> -> 0 `i `uc ]
"78
[; ;pcf8583.c: 78:  I2C_Master_Stop();
[e ( _I2C_Master_Stop ..  ]
"79
[; ;pcf8583.c: 79:  return(retval);
[e ) _retval ]
[e $UE 143  ]
"80
[; ;pcf8583.c: 80: }
[e :UE 143 ]
}
"83
[; ;pcf8583.c: 83: void PCF8583_Read_Time_Date(TimeStruct *time_struct_ptr)
[v _PCF8583_Read_Time_Date `(v ~T0 @X0 1 ef1`*S135 ]
"84
[; ;pcf8583.c: 84: {
{
[e :U _PCF8583_Read_Time_Date ]
"83
[; ;pcf8583.c: 83: void PCF8583_Read_Time_Date(TimeStruct *time_struct_ptr)
[v _time_struct_ptr `*S135 ~T0 @X0 1 r1 ]
"84
[; ;pcf8583.c: 84: {
[f ]
"85
[; ;pcf8583.c: 85:  unsigned char year_bits;
[v _year_bits `uc ~T0 @X0 1 a ]
"86
[; ;pcf8583.c: 86:  unsigned char year;
[v _year `uc ~T0 @X0 1 a ]
"87
[; ;pcf8583.c: 87:  unsigned char bcd_sec;
[v _bcd_sec `uc ~T0 @X0 1 a ]
"88
[; ;pcf8583.c: 88:  unsigned char bcd_min;
[v _bcd_min `uc ~T0 @X0 1 a ]
"89
[; ;pcf8583.c: 89:  unsigned char bcd_hrs;
[v _bcd_hrs `uc ~T0 @X0 1 a ]
"90
[; ;pcf8583.c: 90:  unsigned char bcd_day;
[v _bcd_day `uc ~T0 @X0 1 a ]
"91
[; ;pcf8583.c: 91:  unsigned char bcd_mon;
[v _bcd_mon `uc ~T0 @X0 1 a ]
"93
[; ;pcf8583.c: 93:  I2C_Master_Start();
[e ( _I2C_Master_Start ..  ]
"94
[; ;pcf8583.c: 94:  I2C_Master_Write(0xA0);
[e ( _I2C_Master_Write (1 -> -> 160 `i `ui ]
"95
[; ;pcf8583.c: 95:  I2C_Master_Write(0x02);
[e ( _I2C_Master_Write (1 -> -> 2 `i `ui ]
"96
[; ;pcf8583.c: 96:  I2C_Master_Start();
[e ( _I2C_Master_Start ..  ]
"97
[; ;pcf8583.c: 97:  I2C_Master_Write(0xA1);
[e ( _I2C_Master_Write (1 -> -> 161 `i `ui ]
"98
[; ;pcf8583.c: 98:  bcd_sec = I2C_Master_Read(1);
[e = _bcd_sec ( _I2C_Master_Read (1 -> -> 1 `i `uc ]
"99
[; ;pcf8583.c: 99:  bcd_min = I2C_Master_Read(1);
[e = _bcd_min ( _I2C_Master_Read (1 -> -> 1 `i `uc ]
"100
[; ;pcf8583.c: 100:  bcd_hrs = I2C_Master_Read(1);
[e = _bcd_hrs ( _I2C_Master_Read (1 -> -> 1 `i `uc ]
"101
[; ;pcf8583.c: 101:  bcd_day = I2C_Master_Read(1);
[e = _bcd_day ( _I2C_Master_Read (1 -> -> 1 `i `uc ]
"102
[; ;pcf8583.c: 102:  bcd_mon = I2C_Master_Read(0);
[e = _bcd_mon ( _I2C_Master_Read (1 -> -> 0 `i `uc ]
"103
[; ;pcf8583.c: 103:     I2C_Master_Stop();
[e ( _I2C_Master_Stop ..  ]
"105
[; ;pcf8583.c: 105:  time_struct_ptr->seconds = BCD_2_DEC(bcd_sec);
[e = . *U _time_struct_ptr 0 ( _BCD_2_DEC (1 _bcd_sec ]
"106
[; ;pcf8583.c: 106:  time_struct_ptr->minutes = BCD_2_DEC(bcd_min);
[e = . *U _time_struct_ptr 1 ( _BCD_2_DEC (1 _bcd_min ]
"107
[; ;pcf8583.c: 107:  time_struct_ptr->hours = BCD_2_DEC(bcd_hrs & 0x3F);
[e = . *U _time_struct_ptr 2 ( _BCD_2_DEC (1 -> & -> _bcd_hrs `i -> 63 `i `uc ]
"108
[; ;pcf8583.c: 108:  time_struct_ptr->day = BCD_2_DEC(bcd_day & 0x3F);
[e = . *U _time_struct_ptr 3 ( _BCD_2_DEC (1 -> & -> _bcd_day `i -> 63 `i `uc ]
"109
[; ;pcf8583.c: 109:  time_struct_ptr->month = BCD_2_DEC(bcd_mon & 0x1F);
[e = . *U _time_struct_ptr 4 ( _BCD_2_DEC (1 -> & -> _bcd_mon `i -> 31 `i `uc ]
"111
[; ;pcf8583.c: 111:  year_bits = bcd_day >> 6;
[e = _year_bits -> >> -> _bcd_day `i -> 6 `i `uc ]
"114
[; ;pcf8583.c: 114:  year = PCF8583_Read_Byte(0x10);
[e = _year ( _PCF8583_Read_Byte (1 -> -> 16 `i `uc ]
"115
[; ;pcf8583.c: 115:  while(year_bits != (year & 3))
[e $U 145  ]
[e :U 146 ]
"116
[; ;pcf8583.c: 116:  {
{
"117
[; ;pcf8583.c: 117:   year++;
[e ++ _year -> -> 1 `i `uc ]
"118
[; ;pcf8583.c: 118:  }
}
[e :U 145 ]
"115
[; ;pcf8583.c: 115:  while(year_bits != (year & 3))
[e $ != -> _year_bits `i & -> _year `i -> 3 `i 146  ]
[e :U 147 ]
"119
[; ;pcf8583.c: 119:  time_struct_ptr->year = year;
[e = . *U _time_struct_ptr 5 _year ]
"120
[; ;pcf8583.c: 120:  PCF8583_Write_Byte(0x10, year);
[e ( _PCF8583_Write_Byte (2 , -> -> 16 `i `uc _year ]
"122
[; ;pcf8583.c: 122: }
[e :UE 144 ]
}
