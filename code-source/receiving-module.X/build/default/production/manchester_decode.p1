Version 4.0 HI-TECH Software Intermediate Code
"11 ./circular_buffer.h
[; ;./circular_buffer.h: 11: unsigned char FrameBuffer(unsigned char *data,unsigned char mode);
[v _FrameBuffer `(uc ~T0 @X0 0 ef2`*uc`uc ]
"22 ./main.h
[; ;./main.h: 22: 
[s S134 `uc -> 4 `i `uc 1 ]
[n S134 . frame RCV_Frame ]
"11 ./crc16.h
[; ;./crc16.h: 11: unsigned int CRC16(unsigned char *data_tab_ptr, unsigned char size);
[v _CRC16 `(ui ~T0 @X0 0 ef2`*uc`uc ]
"12 ./melody.h
[; ;./melody.h: 12: void PlayRing(unsigned char diode);
[v _PlayRing `(v ~T0 @X0 0 ef1`uc ]
"10 ./hw_uart.h
[; ;./hw_uart.h: 10: void SendUART(char data);
[v _SendUART `(v ~T0 @X0 0 ef1`uc ]
"296 /opt/microchip/xc8/v2.10/pic/include/pic16f886.h
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 296:     struct {
[s S10 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S10 . RC0 RC1 RC2 RC3 RC4 RC5 RC6 RC7 ]
"295
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 295: typedef union {
[u S9 `S10 1 ]
[n S9 . . ]
"307
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 307: extern volatile PORTCbits_t PORTCbits __attribute__((address(0x007)));
[v _PORTCbits `VS9 ~T0 @X0 0 e@7 ]
"54 /opt/microchip/xc8/v2.10/pic/include/pic16f886.h
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 54: __asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
"61
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 61: __asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
"68
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 68: __asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
"75
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 75: __asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
"161
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 161: __asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
"168
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 168: __asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
"230
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 230: __asm("PORTB equ 06h");
[; <" PORTB equ 06h ;# ">
"292
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 292: __asm("PORTC equ 07h");
[; <" PORTC equ 07h ;# ">
"354
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 354: __asm("PORTE equ 09h");
[; <" PORTE equ 09h ;# ">
"375
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 375: __asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
"382
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 382: __asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
"460
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 460: __asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
"516
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 516: __asm("PIR2 equ 0Dh");
[; <" PIR2 equ 0Dh ;# ">
"573
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 573: __asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
"580
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 580: __asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
"587
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 587: __asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
"594
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 594: __asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
"688
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 688: __asm("TMR2 equ 011h");
[; <" TMR2 equ 011h ;# ">
"695
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 695: __asm("T2CON equ 012h");
[; <" T2CON equ 012h ;# ">
"766
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 766: __asm("SSPBUF equ 013h");
[; <" SSPBUF equ 013h ;# ">
"773
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 773: __asm("SSPCON equ 014h");
[; <" SSPCON equ 014h ;# ">
"843
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 843: __asm("CCPR1 equ 015h");
[; <" CCPR1 equ 015h ;# ">
"850
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 850: __asm("CCPR1L equ 015h");
[; <" CCPR1L equ 015h ;# ">
"857
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 857: __asm("CCPR1H equ 016h");
[; <" CCPR1H equ 016h ;# ">
"864
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 864: __asm("CCP1CON equ 017h");
[; <" CCP1CON equ 017h ;# ">
"961
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 961: __asm("RCSTA equ 018h");
[; <" RCSTA equ 018h ;# ">
"1056
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 1056: __asm("TXREG equ 019h");
[; <" TXREG equ 019h ;# ">
"1063
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 1063: __asm("RCREG equ 01Ah");
[; <" RCREG equ 01Ah ;# ">
"1070
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 1070: __asm("CCPR2 equ 01Bh");
[; <" CCPR2 equ 01Bh ;# ">
"1077
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 1077: __asm("CCPR2L equ 01Bh");
[; <" CCPR2L equ 01Bh ;# ">
"1084
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 1084: __asm("CCPR2H equ 01Ch");
[; <" CCPR2H equ 01Ch ;# ">
"1091
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 1091: __asm("CCP2CON equ 01Dh");
[; <" CCP2CON equ 01Dh ;# ">
"1161
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 1161: __asm("ADRESH equ 01Eh");
[; <" ADRESH equ 01Eh ;# ">
"1168
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 1168: __asm("ADCON0 equ 01Fh");
[; <" ADCON0 equ 01Fh ;# ">
"1269
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 1269: __asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
"1339
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 1339: __asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
"1401
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 1401: __asm("TRISB equ 086h");
[; <" TRISB equ 086h ;# ">
"1463
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 1463: __asm("TRISC equ 087h");
[; <" TRISC equ 087h ;# ">
"1525
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 1525: __asm("TRISE equ 089h");
[; <" TRISE equ 089h ;# ">
"1546
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 1546: __asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
"1602
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 1602: __asm("PIE2 equ 08Dh");
[; <" PIE2 equ 08Dh ;# ">
"1659
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 1659: __asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
"1706
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 1706: __asm("OSCCON equ 08Fh");
[; <" OSCCON equ 08Fh ;# ">
"1771
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 1771: __asm("OSCTUNE equ 090h");
[; <" OSCTUNE equ 090h ;# ">
"1823
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 1823: __asm("SSPCON2 equ 091h");
[; <" SSPCON2 equ 091h ;# ">
"1885
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 1885: __asm("PR2 equ 092h");
[; <" PR2 equ 092h ;# ">
"1892
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 1892: __asm("SSPADD equ 093h");
[; <" SSPADD equ 093h ;# ">
"1899
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 1899: __asm("SSPMSK equ 093h");
[; <" SSPMSK equ 093h ;# ">
"1904
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 1904: __asm("MSK equ 093h");
[; <" MSK equ 093h ;# ">
"2021
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 2021: __asm("SSPSTAT equ 094h");
[; <" SSPSTAT equ 094h ;# ">
"2190
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 2190: __asm("WPUB equ 095h");
[; <" WPUB equ 095h ;# ">
"2260
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 2260: __asm("IOCB equ 096h");
[; <" IOCB equ 096h ;# ">
"2330
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 2330: __asm("VRCON equ 097h");
[; <" VRCON equ 097h ;# ">
"2400
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 2400: __asm("TXSTA equ 098h");
[; <" TXSTA equ 098h ;# ">
"2486
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 2486: __asm("SPBRG equ 099h");
[; <" SPBRG equ 099h ;# ">
"2548
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 2548: __asm("SPBRGH equ 09Ah");
[; <" SPBRGH equ 09Ah ;# ">
"2618
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 2618: __asm("PWM1CON equ 09Bh");
[; <" PWM1CON equ 09Bh ;# ">
"2688
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 2688: __asm("ECCPAS equ 09Ch");
[; <" ECCPAS equ 09Ch ;# ">
"2770
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 2770: __asm("PSTRCON equ 09Dh");
[; <" PSTRCON equ 09Dh ;# ">
"2814
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 2814: __asm("ADRESL equ 09Eh");
[; <" ADRESL equ 09Eh ;# ">
"2821
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 2821: __asm("ADCON1 equ 09Fh");
[; <" ADCON1 equ 09Fh ;# ">
"2855
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 2855: __asm("WDTCON equ 0105h");
[; <" WDTCON equ 0105h ;# ">
"2908
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 2908: __asm("CM1CON0 equ 0107h");
[; <" CM1CON0 equ 0107h ;# ">
"2973
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 2973: __asm("CM2CON0 equ 0108h");
[; <" CM2CON0 equ 0108h ;# ">
"3038
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 3038: __asm("CM2CON1 equ 0109h");
[; <" CM2CON1 equ 0109h ;# ">
"3089
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 3089: __asm("EEDATA equ 010Ch");
[; <" EEDATA equ 010Ch ;# ">
"3094
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 3094: __asm("EEDAT equ 010Ch");
[; <" EEDAT equ 010Ch ;# ">
"3101
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 3101: __asm("EEADR equ 010Dh");
[; <" EEADR equ 010Dh ;# ">
"3108
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 3108: __asm("EEDATH equ 010Eh");
[; <" EEDATH equ 010Eh ;# ">
"3115
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 3115: __asm("EEADRH equ 010Fh");
[; <" EEADRH equ 010Fh ;# ">
"3122
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 3122: __asm("SRCON equ 0185h");
[; <" SRCON equ 0185h ;# ">
"3179
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 3179: __asm("BAUDCTL equ 0187h");
[; <" BAUDCTL equ 0187h ;# ">
"3231
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 3231: __asm("ANSEL equ 0188h");
[; <" ANSEL equ 0188h ;# ">
"3275
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 3275: __asm("ANSELH equ 0189h");
[; <" ANSELH equ 0189h ;# ">
"3325
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 3325: __asm("EECON1 equ 018Ch");
[; <" EECON1 equ 018Ch ;# ">
"3370
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f886.h: 3370: __asm("EECON2 equ 018Dh");
[; <" EECON2 equ 018Dh ;# ">
"6 ./main.h
[; ;./main.h: 6: 
[p x FOSC = INTRC_NOCLKOUT ]
"7
[; ;./main.h: 7: 
[p x WDTE = OFF ]
"8
[; ;./main.h: 8: typedef struct
[p x PWRTE = OFF ]
"9
[; ;./main.h: 9: {
[p x MCLRE = ON ]
"10
[; ;./main.h: 10:  unsigned char seconds,minutes,hours,day,month,year;
[p x CP = OFF ]
"11
[; ;./main.h: 11: 
[p x CPD = OFF ]
"12
[; ;./main.h: 12: }TimeStruct;
[p x BOREN = OFF ]
"13
[; ;./main.h: 13: 
[p x IESO = OFF ]
"14
[; ;./main.h: 14: typedef struct
[p x FCMEN = OFF ]
"15
[; ;./main.h: 15: {
[p x LVP = OFF ]
"18
[; ;./main.h: 18:     void (*button_short_function)(void);
[p x BOR4V = BOR40V ]
"19
[; ;./main.h: 19:     void (*button_long_function)(void);
[p x WRT = OFF ]
"19 ./interrupts.h
[; ;./interrupts.h: 19: volatile unsigned char ISR_ACK;
[v _ISR_ACK `Vuc ~T0 @X0 1 e ]
"20
[; ;./interrupts.h: 20: volatile unsigned int PWM_Freq, Timer1, g_button_timer, g_generic_timer;
[v _PWM_Freq `Vui ~T0 @X0 1 e ]
[v _Timer1 `Vui ~T0 @X0 1 e ]
[v _g_button_timer `Vui ~T0 @X0 1 e ]
[v _g_generic_timer `Vui ~T0 @X0 1 e ]
"21
[; ;./interrupts.h: 21: unsigned char g_display_text[4];
[v _g_display_text `uc ~T0 @X0 -> 4 `i e ]
"22
[; ;./interrupts.h: 22: unsigned char g_decimal_point;
[v _g_decimal_point `uc ~T0 @X0 1 e ]
"30 manchester_decode.c
[; ;manchester_decode.c: 30: void ManchesterDecode(unsigned char *edge_dir, unsigned int *pulse_time)
[v _ManchesterDecode `(v ~T0 @X0 1 ef2`*uc`*ui ]
"31
[; ;manchester_decode.c: 31: {
{
[e :U _ManchesterDecode ]
"30
[; ;manchester_decode.c: 30: void ManchesterDecode(unsigned char *edge_dir, unsigned int *pulse_time)
[v _edge_dir `*uc ~T0 @X0 1 r1 ]
[v _pulse_time `*ui ~T0 @X0 1 r2 ]
"31
[; ;manchester_decode.c: 31: {
[f ]
"32
[; ;manchester_decode.c: 32:     static unsigned char decoded_byte, bit_pos, data_counter,f_start_data;
[v F1270 `uc ~T0 @X0 1 s decoded_byte ]
[v F1271 `uc ~T0 @X0 1 s bit_pos ]
[v F1272 `uc ~T0 @X0 1 s data_counter ]
[v F1273 `uc ~T0 @X0 1 s f_start_data ]
"33
[; ;manchester_decode.c: 33:     static unsigned char f_slope_t,f_sync;
[v F1274 `uc ~T0 @X0 1 s f_slope_t ]
[v F1275 `uc ~T0 @X0 1 s f_sync ]
"35
[; ;manchester_decode.c: 35:  if(f_sync==0)
[e $ ! == -> F1275 `i -> 0 `i 139  ]
"36
[; ;manchester_decode.c: 36:     {
{
"37
[; ;manchester_decode.c: 37:         if((*pulse_time>(8000000/4)/300*60/100) && (*pulse_time<(8000000/4)/300*140/100))
[e $ ! && > -> *U _pulse_time `l / * / / -> 8000000 `l -> -> 4 `i `l -> -> 300 `i `l -> -> 60 `i `l -> -> 100 `i `l < -> *U _pulse_time `l / * / / -> 8000000 `l -> -> 4 `i `l -> -> 300 `i `l -> -> 140 `i `l -> -> 100 `i `l 140  ]
"38
[; ;manchester_decode.c: 38:         {
{
"39
[; ;manchester_decode.c: 39:             f_slope_t=0;
[e = F1274 -> -> 0 `i `uc ]
"40
[; ;manchester_decode.c: 40:             decoded_byte=0;
[e = F1270 -> -> 0 `i `uc ]
"41
[; ;manchester_decode.c: 41:             bit_pos=0;
[e = F1271 -> -> 0 `i `uc ]
"42
[; ;manchester_decode.c: 42:             f_sync=1;
[e = F1275 -> -> 1 `i `uc ]
"43
[; ;manchester_decode.c: 43:             data_counter=0;
[e = F1272 -> -> 0 `i `uc ]
"45
[; ;manchester_decode.c: 45:             return;
[e $UE 138  ]
"47
[; ;manchester_decode.c: 47:         }else
}
[e $U 141  ]
[e :U 140 ]
"48
[; ;manchester_decode.c: 48:         {
{
"49
[; ;manchester_decode.c: 49:             return;
[e $UE 138  ]
"50
[; ;manchester_decode.c: 50:         }
}
[e :U 141 ]
"51
[; ;manchester_decode.c: 51:     }else if(f_sync)
}
[e $U 142  ]
[e :U 139 ]
[e $ ! != -> F1275 `i -> 0 `i 143  ]
"52
[; ;manchester_decode.c: 52:     {
{
"53
[; ;manchester_decode.c: 53:         if(f_slope_t==0)
[e $ ! == -> F1274 `i -> 0 `i 144  ]
"54
[; ;manchester_decode.c: 54:         {
{
"55
[; ;manchester_decode.c: 55:             if((*pulse_time>((8000000/4)/300/2)*60/100) && (*pulse_time<((8000000/4)/300/2)*140/100))
[e $ ! && > -> *U _pulse_time `l / * / / / -> 8000000 `l -> -> 4 `i `l -> -> 300 `i `l -> -> 2 `i `l -> -> 60 `i `l -> -> 100 `i `l < -> *U _pulse_time `l / * / / / -> 8000000 `l -> -> 4 `i `l -> -> 300 `i `l -> -> 2 `i `l -> -> 140 `i `l -> -> 100 `i `l 145  ]
"56
[; ;manchester_decode.c: 56:             {
{
"57
[; ;manchester_decode.c: 57:                     f_slope_t=1;
[e = F1274 -> -> 1 `i `uc ]
"58
[; ;manchester_decode.c: 58:                     return;
[e $UE 138  ]
"60
[; ;manchester_decode.c: 60:             }else if((*pulse_time>(8000000/4)/300*60/100) && (*pulse_time<(8000000/4)/300*140/100))
}
[e $U 146  ]
[e :U 145 ]
[e $ ! && > -> *U _pulse_time `l / * / / -> 8000000 `l -> -> 4 `i `l -> -> 300 `i `l -> -> 60 `i `l -> -> 100 `i `l < -> *U _pulse_time `l / * / / -> 8000000 `l -> -> 4 `i `l -> -> 300 `i `l -> -> 140 `i `l -> -> 100 `i `l 147  ]
"61
[; ;manchester_decode.c: 61:             {
{
"62
[; ;manchester_decode.c: 62:                 if(*edge_dir==0)
[e $ ! == -> *U _edge_dir `i -> 0 `i 148  ]
"63
[; ;manchester_decode.c: 63:                 {
{
"64
[; ;manchester_decode.c: 64:                     decoded_byte^=(0x80>>bit_pos);
[e =^ F1270 -> >> -> 128 `i -> F1271 `i `uc ]
"65
[; ;manchester_decode.c: 65:                 }else
}
[e $U 149  ]
[e :U 148 ]
"66
[; ;manchester_decode.c: 66:                 {
{
"67
[; ;manchester_decode.c: 67:                     decoded_byte^=(0x00>>bit_pos);
[e =^ F1270 -> >> -> 0 `i -> F1271 `i `uc ]
"68
[; ;manchester_decode.c: 68:                 }
}
[e :U 149 ]
"69
[; ;manchester_decode.c: 69:                 bit_pos++;
[e ++ F1271 -> -> 1 `i `uc ]
"71
[; ;manchester_decode.c: 71:             }else
}
[e $U 150  ]
[e :U 147 ]
"72
[; ;manchester_decode.c: 72:             {
{
"74
[; ;manchester_decode.c: 74:                 f_sync=0;
[e = F1275 -> -> 0 `i `uc ]
"75
[; ;manchester_decode.c: 75:                 return;
[e $UE 138  ]
"76
[; ;manchester_decode.c: 76:             }
}
[e :U 150 ]
[e :U 146 ]
"78
[; ;manchester_decode.c: 78:         }else
}
[e $U 151  ]
[e :U 144 ]
"79
[; ;manchester_decode.c: 79:         {
{
"80
[; ;manchester_decode.c: 80:             if((*pulse_time>((8000000/4)/300/2)*60/100) && (*pulse_time<((8000000/4)/300/2)*140/100))
[e $ ! && > -> *U _pulse_time `l / * / / / -> 8000000 `l -> -> 4 `i `l -> -> 300 `i `l -> -> 2 `i `l -> -> 60 `i `l -> -> 100 `i `l < -> *U _pulse_time `l / * / / / -> 8000000 `l -> -> 4 `i `l -> -> 300 `i `l -> -> 2 `i `l -> -> 140 `i `l -> -> 100 `i `l 152  ]
"81
[; ;manchester_decode.c: 81:             {
{
"82
[; ;manchester_decode.c: 82:                 if(*edge_dir==0)
[e $ ! == -> *U _edge_dir `i -> 0 `i 153  ]
"83
[; ;manchester_decode.c: 83:                 {
{
"84
[; ;manchester_decode.c: 84:                     decoded_byte^=(0x80>>bit_pos);
[e =^ F1270 -> >> -> 128 `i -> F1271 `i `uc ]
"85
[; ;manchester_decode.c: 85:                 }else
}
[e $U 154  ]
[e :U 153 ]
"86
[; ;manchester_decode.c: 86:                 {
{
"87
[; ;manchester_decode.c: 87:                     decoded_byte^=(0x00>>bit_pos);
[e =^ F1270 -> >> -> 0 `i -> F1271 `i `uc ]
"88
[; ;manchester_decode.c: 88:                 }
}
[e :U 154 ]
"89
[; ;manchester_decode.c: 89:                 bit_pos++;
[e ++ F1271 -> -> 1 `i `uc ]
"90
[; ;manchester_decode.c: 90:                 f_slope_t=0;
[e = F1274 -> -> 0 `i `uc ]
"92
[; ;manchester_decode.c: 92:             }else
}
[e $U 155  ]
[e :U 152 ]
"93
[; ;manchester_decode.c: 93:             {
{
"95
[; ;manchester_decode.c: 95:                 f_sync=0;
[e = F1275 -> -> 0 `i `uc ]
"96
[; ;manchester_decode.c: 96:                 return;
[e $UE 138  ]
"97
[; ;manchester_decode.c: 97:             }
}
[e :U 155 ]
"98
[; ;manchester_decode.c: 98:         }
}
[e :U 151 ]
"100
[; ;manchester_decode.c: 100:         if(bit_pos>7)
[e $ ! > -> F1271 `i -> 7 `i 156  ]
"101
[; ;manchester_decode.c: 101:         {
{
"102
[; ;manchester_decode.c: 102:             if(decoded_byte=='$')
[e $ ! == -> F1270 `ui -> 36 `ui 157  ]
"103
[; ;manchester_decode.c: 103:             {
{
"104
[; ;manchester_decode.c: 104:                 f_start_data=1;
[e = F1273 -> -> 1 `i `uc ]
"105
[; ;manchester_decode.c: 105:            }
}
[e :U 157 ]
"106
[; ;manchester_decode.c: 106:             if(f_start_data)
[e $ ! != -> F1273 `i -> 0 `i 158  ]
"107
[; ;manchester_decode.c: 107:             {
{
"108
[; ;manchester_decode.c: 108:                 FrameBuffer(&decoded_byte,1);
[e ( _FrameBuffer (2 , &U F1270 -> -> 1 `i `uc ]
"109
[; ;manchester_decode.c: 109:                 data_counter++;
[e ++ F1272 -> -> 1 `i `uc ]
"110
[; ;manchester_decode.c: 110:             }
}
[e :U 158 ]
"111
[; ;manchester_decode.c: 111:                 decoded_byte=0;
[e = F1270 -> -> 0 `i `uc ]
"112
[; ;manchester_decode.c: 112:                 bit_pos=0;
[e = F1271 -> -> 0 `i `uc ]
"114
[; ;manchester_decode.c: 114:             if(data_counter>=6)
[e $ ! >= -> F1272 `i -> 6 `i 159  ]
"115
[; ;manchester_decode.c: 115:             {
{
"116
[; ;manchester_decode.c: 116:                 f_start_data=0;
[e = F1273 -> -> 0 `i `uc ]
"117
[; ;manchester_decode.c: 117:                 f_sync=0;
[e = F1275 -> -> 0 `i `uc ]
"118
[; ;manchester_decode.c: 118:                 return;
[e $UE 138  ]
"119
[; ;manchester_decode.c: 119:             }
}
[e :U 159 ]
"120
[; ;manchester_decode.c: 120:         }
}
[e :U 156 ]
"121
[; ;manchester_decode.c: 121:  }
}
[e :U 143 ]
[e :U 142 ]
"122
[; ;manchester_decode.c: 122: }
[e :UE 138 ]
}
"133
[; ;manchester_decode.c: 133: unsigned int FrameDecode(DataStruct *DataRCV)
[v _FrameDecode `(ui ~T0 @X0 1 ef1`*S134 ]
"134
[; ;manchester_decode.c: 134: {
{
[e :U _FrameDecode ]
"133
[; ;manchester_decode.c: 133: unsigned int FrameDecode(DataStruct *DataRCV)
[v _DataRCV `*S134 ~T0 @X0 1 r1 ]
"134
[; ;manchester_decode.c: 134: {
[f ]
"135
[; ;manchester_decode.c: 135:     unsigned char data, i, data_counter;
[v _data `uc ~T0 @X0 1 a ]
[v _i `uc ~T0 @X0 1 a ]
[v _data_counter `uc ~T0 @X0 1 a ]
"137
[; ;manchester_decode.c: 137:     while(1)
[e :U 162 ]
"138
[; ;manchester_decode.c: 138:     {
{
"139
[; ;manchester_decode.c: 139:         if(FrameBuffer(&data,0)==0xFF)
[e $ ! == -> ( _FrameBuffer (2 , &U _data -> -> 0 `i `uc `i -> 255 `i 164  ]
"140
[; ;manchester_decode.c: 140:         {
{
"141
[; ;manchester_decode.c: 141:             return 0xFF;
[e ) -> -> 255 `i `ui ]
[e $UE 160  ]
"142
[; ;manchester_decode.c: 142:         }
}
[e :U 164 ]
"144
[; ;manchester_decode.c: 144:         if(data=='$')
[e $ ! == -> _data `ui -> 36 `ui 165  ]
"145
[; ;manchester_decode.c: 145:         {
{
"146
[; ;manchester_decode.c: 146:             for(i=0;i<(6 -2);i++)
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i - -> 6 `i -> 2 `i 166  ]
[e $U 167  ]
[e :U 166 ]
"147
[; ;manchester_decode.c: 147:    {
{
"148
[; ;manchester_decode.c: 148:     DataRCV->frame[i]=0;
[e = *U + &U . *U _DataRCV 0 * -> _i `ux -> -> # *U &U . *U _DataRCV 0 `ui `ux -> -> 0 `i `uc ]
"149
[; ;manchester_decode.c: 149:    }
}
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i - -> 6 `i -> 2 `i 166  ]
[e :U 167 ]
}
"150
[; ;manchester_decode.c: 150:             i=0;
[e = _i -> -> 0 `i `uc ]
"152
[; ;manchester_decode.c: 152:             while(1)
[e :U 170 ]
"153
[; ;manchester_decode.c: 153:             {
{
"154
[; ;manchester_decode.c: 154:                 if(FrameBuffer(&data,0)==0xFF)
[e $ ! == -> ( _FrameBuffer (2 , &U _data -> -> 0 `i `uc `i -> 255 `i 172  ]
"155
[; ;manchester_decode.c: 155:                 {
{
"156
[; ;manchester_decode.c: 156:                     return 0xFF;
[e ) -> -> 255 `i `ui ]
[e $UE 160  ]
"157
[; ;manchester_decode.c: 157:                 }
}
[e :U 172 ]
"158
[; ;manchester_decode.c: 158:                 if(data=='&' && i==(6 -2))
[e $ ! && == -> _data `ui -> 38 `ui == -> _i `i - -> 6 `i -> 2 `i 173  ]
"159
[; ;manchester_decode.c: 159:                 {
{
"160
[; ;manchester_decode.c: 160:                     DataRCV->RCV_Frame=1;
[e = . *U _DataRCV 1 -> -> 1 `i `uc ]
"161
[; ;manchester_decode.c: 161:                     return 10;
[e ) -> -> 10 `i `ui ]
[e $UE 160  ]
"162
[; ;manchester_decode.c: 162:                 }
}
[e :U 173 ]
"163
[; ;manchester_decode.c: 163:                 DataRCV->frame[i]=data;
[e = *U + &U . *U _DataRCV 0 * -> _i `ux -> -> # *U &U . *U _DataRCV 0 `ui `ux _data ]
"164
[; ;manchester_decode.c: 164:                 i++;
[e ++ _i -> -> 1 `i `uc ]
"165
[; ;manchester_decode.c: 165:                 if(i>(6 -2))
[e $ ! > -> _i `i - -> 6 `i -> 2 `i 174  ]
"166
[; ;manchester_decode.c: 166:                 {
{
"167
[; ;manchester_decode.c: 167:                     break;
[e $U 171  ]
"168
[; ;manchester_decode.c: 168:                 }
}
[e :U 174 ]
"169
[; ;manchester_decode.c: 169:             }
}
[e :U 169 ]
[e $U 170  ]
[e :U 171 ]
"170
[; ;manchester_decode.c: 170:         }
}
[e :U 165 ]
"171
[; ;manchester_decode.c: 171:     }
}
[e :U 161 ]
[e $U 162  ]
[e :U 163 ]
"172
[; ;manchester_decode.c: 172: }
[e :UE 160 ]
}
"174
[; ;manchester_decode.c: 174: unsigned char CRC_check(DataStruct *DataRCV)
[v _CRC_check `(uc ~T0 @X0 1 ef1`*S134 ]
"175
[; ;manchester_decode.c: 175: {
{
[e :U _CRC_check ]
"174
[; ;manchester_decode.c: 174: unsigned char CRC_check(DataStruct *DataRCV)
[v _DataRCV `*S134 ~T0 @X0 1 r1 ]
"175
[; ;manchester_decode.c: 175: {
[f ]
"176
[; ;manchester_decode.c: 176:  unsigned int crc_val;
[v _crc_val `ui ~T0 @X0 1 a ]
"177
[; ;manchester_decode.c: 177:  crc_val=CRC16(&DataRCV->frame[0],6 -4);
[e = _crc_val ( _CRC16 (2 , &U *U + &U . *U _DataRCV 0 * -> -> -> 0 `i `ui `ux -> -> # *U &U . *U _DataRCV 0 `ui `ux -> - -> 6 `i -> 4 `i `uc ]
"178
[; ;manchester_decode.c: 178:  if( (DataRCV->frame[6 -4]==crc_val>>8) && (DataRCV->frame[6 -3]==(crc_val&0x00FF)) )
[e $ ! && == -> *U + &U . *U _DataRCV 0 * -> -> - -> 6 `i -> 4 `i `ui `ux -> -> # *U &U . *U _DataRCV 0 `ui `ux `ui >> _crc_val -> 8 `i == -> *U + &U . *U _DataRCV 0 * -> -> - -> 6 `i -> 3 `i `ui `ux -> -> # *U &U . *U _DataRCV 0 `ui `ux `ui & _crc_val -> -> 255 `i `ui 176  ]
"179
[; ;manchester_decode.c: 179:     {
{
"180
[; ;manchester_decode.c: 180:   return 1;
[e ) -> -> 1 `i `uc ]
[e $UE 175  ]
"181
[; ;manchester_decode.c: 181:  }else
}
[e $U 177  ]
[e :U 176 ]
"182
[; ;manchester_decode.c: 182:  {
{
"183
[; ;manchester_decode.c: 183:   return 0;
[e ) -> -> 0 `i `uc ]
[e $UE 175  ]
"184
[; ;manchester_decode.c: 184:  }
}
[e :U 177 ]
"185
[; ;manchester_decode.c: 185: }
[e :UE 175 ]
}
"187
[; ;manchester_decode.c: 187: unsigned char CheckEvent(DataStruct *DataRCV)
[v _CheckEvent `(uc ~T0 @X0 1 ef1`*S134 ]
"188
[; ;manchester_decode.c: 188: {
{
[e :U _CheckEvent ]
"187
[; ;manchester_decode.c: 187: unsigned char CheckEvent(DataStruct *DataRCV)
[v _DataRCV `*S134 ~T0 @X0 1 r1 ]
"188
[; ;manchester_decode.c: 188: {
[f ]
"189
[; ;manchester_decode.c: 189:     static char a;
[v F1286 `uc ~T0 @X0 1 s a ]
"191
[; ;manchester_decode.c: 191:     if(DataRCV->frame[0]=='G' && DataRCV->frame[1]=='0')
[e $ ! && == -> *U + &U . *U _DataRCV 0 * -> -> -> 0 `i `ui `ux -> -> # *U &U . *U _DataRCV 0 `ui `ux `ui -> 71 `ui == -> *U + &U . *U _DataRCV 0 * -> -> -> 1 `i `ui `ux -> -> # *U &U . *U _DataRCV 0 `ui `ux `ui -> 48 `ui 179  ]
"192
[; ;manchester_decode.c: 192:     {
{
"193
[; ;manchester_decode.c: 193:         PlayRing(1);
[e ( _PlayRing (1 -> -> 1 `i `uc ]
"194
[; ;manchester_decode.c: 194:         SendUART('G');
[e ( _SendUART (1 -> -> 71 `ui `uc ]
"195
[; ;manchester_decode.c: 195:         while(FrameDecode(DataRCV)!=0xFF);
[e $U 180  ]
[e :U 181 ]
[e :U 180 ]
[e $ != ( _FrameDecode (1 _DataRCV -> -> 255 `i `ui 181  ]
[e :U 182 ]
"196
[; ;manchester_decode.c: 196:         return 1;
[e ) -> -> 1 `i `uc ]
[e $UE 178  ]
"197
[; ;manchester_decode.c: 197:     }else if(DataRCV->frame[0]=='W' && DataRCV->frame[1]=='0')
}
[e $U 183  ]
[e :U 179 ]
[e $ ! && == -> *U + &U . *U _DataRCV 0 * -> -> -> 0 `i `ui `ux -> -> # *U &U . *U _DataRCV 0 `ui `ux `ui -> 87 `ui == -> *U + &U . *U _DataRCV 0 * -> -> -> 1 `i `ui `ux -> -> # *U &U . *U _DataRCV 0 `ui `ux `ui -> 48 `ui 184  ]
"198
[; ;manchester_decode.c: 198:     {
{
"200
[; ;manchester_decode.c: 200:         SendUART('W');
[e ( _SendUART (1 -> -> 87 `ui `uc ]
"201
[; ;manchester_decode.c: 201:         if(a)
[e $ ! != -> F1286 `i -> 0 `i 185  ]
"202
[; ;manchester_decode.c: 202:         {
{
"203
[; ;manchester_decode.c: 203:             PORTCbits.RC3=1;
[e = . . _PORTCbits 0 3 -> -> 1 `i `uc ]
"204
[; ;manchester_decode.c: 204:             a=0;
[e = F1286 -> -> 0 `i `uc ]
"205
[; ;manchester_decode.c: 205:         }else
}
[e $U 186  ]
[e :U 185 ]
"206
[; ;manchester_decode.c: 206:         {
{
"207
[; ;manchester_decode.c: 207:              PORTCbits.RC3=0;
[e = . . _PORTCbits 0 3 -> -> 0 `i `uc ]
"208
[; ;manchester_decode.c: 208:              a=1;
[e = F1286 -> -> 1 `i `uc ]
"209
[; ;manchester_decode.c: 209:         }
}
[e :U 186 ]
"210
[; ;manchester_decode.c: 210:         while(FrameDecode(DataRCV)!=0xFF);
[e $U 187  ]
[e :U 188 ]
[e :U 187 ]
[e $ != ( _FrameDecode (1 _DataRCV -> -> 255 `i `ui 188  ]
[e :U 189 ]
"211
[; ;manchester_decode.c: 211:         return 1;
[e ) -> -> 1 `i `uc ]
[e $UE 178  ]
"213
[; ;manchester_decode.c: 213:     }else if(DataRCV->frame[0]=='W' && DataRCV->frame[1]=='B')
}
[e $U 190  ]
[e :U 184 ]
[e $ ! && == -> *U + &U . *U _DataRCV 0 * -> -> -> 0 `i `ui `ux -> -> # *U &U . *U _DataRCV 0 `ui `ux `ui -> 87 `ui == -> *U + &U . *U _DataRCV 0 * -> -> -> 1 `i `ui `ux -> -> # *U &U . *U _DataRCV 0 `ui `ux `ui -> 66 `ui 191  ]
"214
[; ;manchester_decode.c: 214:     {
{
"216
[; ;manchester_decode.c: 216:         SendUART('B');
[e ( _SendUART (1 -> -> 66 `ui `uc ]
"217
[; ;manchester_decode.c: 217:         while(FrameDecode(DataRCV)!=0xFF);
[e $U 192  ]
[e :U 193 ]
[e :U 192 ]
[e $ != ( _FrameDecode (1 _DataRCV -> -> 255 `i `ui 193  ]
[e :U 194 ]
"218
[; ;manchester_decode.c: 218:         return 1;
[e ) -> -> 1 `i `uc ]
[e $UE 178  ]
"219
[; ;manchester_decode.c: 219:     }
}
[e :U 191 ]
[e :U 190 ]
[e :U 183 ]
"221
[; ;manchester_decode.c: 221:     return 0;
[e ) -> -> 0 `i `uc ]
[e $UE 178  ]
"222
[; ;manchester_decode.c: 222: }
[e :UE 178 ]
}
"233
[; ;manchester_decode.c: 233: void ProcessRCVData(DataStruct *DataRCV)
[v _ProcessRCVData `(v ~T0 @X0 1 ef1`*S134 ]
"234
[; ;manchester_decode.c: 234: {
{
[e :U _ProcessRCVData ]
"233
[; ;manchester_decode.c: 233: void ProcessRCVData(DataStruct *DataRCV)
[v _DataRCV `*S134 ~T0 @X0 1 r1 ]
"234
[; ;manchester_decode.c: 234: {
[f ]
"235
[; ;manchester_decode.c: 235:     if(ISR_ACK==1)
[e $ ! == -> _ISR_ACK `i -> 1 `i 196  ]
"236
[; ;manchester_decode.c: 236:     {
{
"240
[; ;manchester_decode.c: 240:         if(PORTCbits.RC1 == 0)
[e $ ! == -> . . _PORTCbits 0 1 `i -> 0 `i 197  ]
"241
[; ;manchester_decode.c: 241:         {
{
"242
[; ;manchester_decode.c: 242:             Timer1=80;
[e = _Timer1 -> -> 80 `i `ui ]
"243
[; ;manchester_decode.c: 243:         }
}
[e :U 197 ]
"245
[; ;manchester_decode.c: 245:         if(Timer1==0)
[e $ ! == _Timer1 -> -> 0 `i `ui 198  ]
"246
[; ;manchester_decode.c: 246:         {
{
"247
[; ;manchester_decode.c: 247:             while(FrameDecode(DataRCV)!=0xFF)
[e $U 199  ]
[e :U 200 ]
"248
[; ;manchester_decode.c: 248:             {
{
"249
[; ;manchester_decode.c: 249:                 if(DataRCV->RCV_Frame)
[e $ ! != -> . *U _DataRCV 1 `i -> 0 `i 202  ]
"250
[; ;manchester_decode.c: 250:                 {
{
"251
[; ;manchester_decode.c: 251:                     if(CRC_check(DataRCV))
[e $ ! != -> ( _CRC_check (1 _DataRCV `i -> 0 `i 203  ]
"252
[; ;manchester_decode.c: 252:                     {
{
"254
[; ;manchester_decode.c: 254:                         if(CheckEvent(DataRCV))
[e $ ! != -> ( _CheckEvent (1 _DataRCV `i -> 0 `i 204  ]
"255
[; ;manchester_decode.c: 255:                         {
{
"256
[; ;manchester_decode.c: 256:                             return;
[e $UE 195  ]
"257
[; ;manchester_decode.c: 257:                         }
}
[e :U 204 ]
"258
[; ;manchester_decode.c: 258:                     }else
}
[e $U 205  ]
[e :U 203 ]
"259
[; ;manchester_decode.c: 259:                     {
{
"260
[; ;manchester_decode.c: 260:                         SendUART('C');
[e ( _SendUART (1 -> -> 67 `ui `uc ]
"261
[; ;manchester_decode.c: 261:                     }
}
[e :U 205 ]
"263
[; ;manchester_decode.c: 263:                     DataRCV->RCV_Frame=0;
[e = . *U _DataRCV 1 -> -> 0 `i `uc ]
"264
[; ;manchester_decode.c: 264:                 }
}
[e :U 202 ]
"265
[; ;manchester_decode.c: 265:             }
}
[e :U 199 ]
"247
[; ;manchester_decode.c: 247:             while(FrameDecode(DataRCV)!=0xFF)
[e $ != ( _FrameDecode (1 _DataRCV -> -> 255 `i `ui 200  ]
[e :U 201 ]
"266
[; ;manchester_decode.c: 266:             ISR_ACK=0;
[e = _ISR_ACK -> -> 0 `i `uc ]
"267
[; ;manchester_decode.c: 267:         }
}
[e :U 198 ]
"269
[; ;manchester_decode.c: 269:     }
}
[e :U 196 ]
"271
[; ;manchester_decode.c: 271: }
[e :UE 195 ]
}
