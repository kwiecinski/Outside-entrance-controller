

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Apr 23 09:08:11 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F886
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2
    41                           	psect	text26,local,class=CODE,merge=1,delta=2
    42                           	psect	text27,local,class=CODE,merge=1,delta=2
    43                           	psect	text28,local,class=CODE,merge=1,delta=2
    44                           	psect	text29,local,class=CODE,merge=1,delta=2
    45                           	psect	text30,local,class=CODE,merge=1,delta=2
    46                           	psect	text31,local,class=CODE,merge=1,delta=2
    47                           	psect	text32,local,class=CODE,merge=1,delta=2
    48                           	psect	text33,local,class=CODE,merge=1,delta=2
    49                           	psect	text34,local,class=CODE,merge=1,delta=2
    50                           	psect	text35,local,class=CODE,merge=1,delta=2
    51                           	psect	text36,local,class=CODE,merge=1,delta=2
    52                           	psect	text37,local,class=CODE,merge=1,delta=2
    53                           	psect	text38,local,class=CODE,merge=1,delta=2,group=1
    54                           	psect	text39,local,class=CODE,merge=1,delta=2
    55                           	psect	text40,local,class=CODE,merge=1,delta=2,group=1
    56                           	psect	text41,local,class=CODE,merge=1,delta=2,group=1
    57                           	psect	text42,local,class=CODE,merge=1,delta=2
    58                           	psect	intentry,global,class=CODE,delta=2
    59                           	psect	text43,local,class=CODE,merge=1,delta=2
    60                           	psect	text44,local,class=CODE,merge=1,delta=2
    61                           	psect	text45,local,class=CODE,merge=1,delta=2
    62                           	psect	text46,local,class=CODE,merge=1,delta=2
    63                           	psect	text47,local,class=CODE,merge=1,delta=2
    64                           	psect	text48,local,class=CODE,merge=1,delta=2
    65                           	psect	text49,local,class=CODE,merge=1,delta=2
    66                           	psect	functab,global,class=ENTRY,delta=2
    67                           	dabs	1,0x7E,2
    68  0000                     
    69                           ; Version 2.10
    70                           ; Generated 31/07/2019 GMT
    71                           ; 
    72                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    73                           ; All rights reserved.
    74                           ; 
    75                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    76                           ; 
    77                           ; Redistribution and use in source and binary forms, with or without modification, are
    78                           ; permitted provided that the following conditions are met:
    79                           ; 
    80                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    81                           ;        conditions and the following disclaimer.
    82                           ; 
    83                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    84                           ;        of conditions and the following disclaimer in the documentation and/or other
    85                           ;        materials provided with the distribution.
    86                           ; 
    87                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    88                           ;        software without specific prior written permission.
    89                           ; 
    90                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    91                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    92                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    93                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    94                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    95                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    96                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    97                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    98                           ; 
    99                           ; 
   100                           ; Code-generator required, PIC16F886 Definitions
   101                           ; 
   102                           ; SFR Addresses
   103  0000                     	;# 
   104  0001                     	;# 
   105  0002                     	;# 
   106  0003                     	;# 
   107  0004                     	;# 
   108  0005                     	;# 
   109  0006                     	;# 
   110  0007                     	;# 
   111  0009                     	;# 
   112  000A                     	;# 
   113  000B                     	;# 
   114  000C                     	;# 
   115  000D                     	;# 
   116  000E                     	;# 
   117  000E                     	;# 
   118  000F                     	;# 
   119  0010                     	;# 
   120  0011                     	;# 
   121  0012                     	;# 
   122  0013                     	;# 
   123  0014                     	;# 
   124  0015                     	;# 
   125  0015                     	;# 
   126  0016                     	;# 
   127  0017                     	;# 
   128  0018                     	;# 
   129  0019                     	;# 
   130  001A                     	;# 
   131  001B                     	;# 
   132  001B                     	;# 
   133  001C                     	;# 
   134  001D                     	;# 
   135  001E                     	;# 
   136  001F                     	;# 
   137  0081                     	;# 
   138  0085                     	;# 
   139  0086                     	;# 
   140  0087                     	;# 
   141  0089                     	;# 
   142  008C                     	;# 
   143  008D                     	;# 
   144  008E                     	;# 
   145  008F                     	;# 
   146  0090                     	;# 
   147  0091                     	;# 
   148  0092                     	;# 
   149  0093                     	;# 
   150  0093                     	;# 
   151  0093                     	;# 
   152  0094                     	;# 
   153  0095                     	;# 
   154  0096                     	;# 
   155  0097                     	;# 
   156  0098                     	;# 
   157  0099                     	;# 
   158  009A                     	;# 
   159  009B                     	;# 
   160  009C                     	;# 
   161  009D                     	;# 
   162  009E                     	;# 
   163  009F                     	;# 
   164  0105                     	;# 
   165  0107                     	;# 
   166  0108                     	;# 
   167  0109                     	;# 
   168  010C                     	;# 
   169  010C                     	;# 
   170  010D                     	;# 
   171  010E                     	;# 
   172  010F                     	;# 
   173  0185                     	;# 
   174  0187                     	;# 
   175  0188                     	;# 
   176  0189                     	;# 
   177  018C                     	;# 
   178  018D                     	;# 
   179  0000                     	;# 
   180  0001                     	;# 
   181  0002                     	;# 
   182  0003                     	;# 
   183  0004                     	;# 
   184  0005                     	;# 
   185  0006                     	;# 
   186  0007                     	;# 
   187  0009                     	;# 
   188  000A                     	;# 
   189  000B                     	;# 
   190  000C                     	;# 
   191  000D                     	;# 
   192  000E                     	;# 
   193  000E                     	;# 
   194  000F                     	;# 
   195  0010                     	;# 
   196  0011                     	;# 
   197  0012                     	;# 
   198  0013                     	;# 
   199  0014                     	;# 
   200  0015                     	;# 
   201  0015                     	;# 
   202  0016                     	;# 
   203  0017                     	;# 
   204  0018                     	;# 
   205  0019                     	;# 
   206  001A                     	;# 
   207  001B                     	;# 
   208  001B                     	;# 
   209  001C                     	;# 
   210  001D                     	;# 
   211  001E                     	;# 
   212  001F                     	;# 
   213  0081                     	;# 
   214  0085                     	;# 
   215  0086                     	;# 
   216  0087                     	;# 
   217  0089                     	;# 
   218  008C                     	;# 
   219  008D                     	;# 
   220  008E                     	;# 
   221  008F                     	;# 
   222  0090                     	;# 
   223  0091                     	;# 
   224  0092                     	;# 
   225  0093                     	;# 
   226  0093                     	;# 
   227  0093                     	;# 
   228  0094                     	;# 
   229  0095                     	;# 
   230  0096                     	;# 
   231  0097                     	;# 
   232  0098                     	;# 
   233  0099                     	;# 
   234  009A                     	;# 
   235  009B                     	;# 
   236  009C                     	;# 
   237  009D                     	;# 
   238  009E                     	;# 
   239  009F                     	;# 
   240  0105                     	;# 
   241  0107                     	;# 
   242  0108                     	;# 
   243  0109                     	;# 
   244  010C                     	;# 
   245  010C                     	;# 
   246  010D                     	;# 
   247  010E                     	;# 
   248  010F                     	;# 
   249  0185                     	;# 
   250  0187                     	;# 
   251  0188                     	;# 
   252  0189                     	;# 
   253  018C                     	;# 
   254  018D                     	;# 
   255  0000                     	;# 
   256  0001                     	;# 
   257  0002                     	;# 
   258  0003                     	;# 
   259  0004                     	;# 
   260  0005                     	;# 
   261  0006                     	;# 
   262  0007                     	;# 
   263  0009                     	;# 
   264  000A                     	;# 
   265  000B                     	;# 
   266  000C                     	;# 
   267  000D                     	;# 
   268  000E                     	;# 
   269  000E                     	;# 
   270  000F                     	;# 
   271  0010                     	;# 
   272  0011                     	;# 
   273  0012                     	;# 
   274  0013                     	;# 
   275  0014                     	;# 
   276  0015                     	;# 
   277  0015                     	;# 
   278  0016                     	;# 
   279  0017                     	;# 
   280  0018                     	;# 
   281  0019                     	;# 
   282  001A                     	;# 
   283  001B                     	;# 
   284  001B                     	;# 
   285  001C                     	;# 
   286  001D                     	;# 
   287  001E                     	;# 
   288  001F                     	;# 
   289  0081                     	;# 
   290  0085                     	;# 
   291  0086                     	;# 
   292  0087                     	;# 
   293  0089                     	;# 
   294  008C                     	;# 
   295  008D                     	;# 
   296  008E                     	;# 
   297  008F                     	;# 
   298  0090                     	;# 
   299  0091                     	;# 
   300  0092                     	;# 
   301  0093                     	;# 
   302  0093                     	;# 
   303  0093                     	;# 
   304  0094                     	;# 
   305  0095                     	;# 
   306  0096                     	;# 
   307  0097                     	;# 
   308  0098                     	;# 
   309  0099                     	;# 
   310  009A                     	;# 
   311  009B                     	;# 
   312  009C                     	;# 
   313  009D                     	;# 
   314  009E                     	;# 
   315  009F                     	;# 
   316  0105                     	;# 
   317  0107                     	;# 
   318  0108                     	;# 
   319  0109                     	;# 
   320  010C                     	;# 
   321  010C                     	;# 
   322  010D                     	;# 
   323  010E                     	;# 
   324  010F                     	;# 
   325  0185                     	;# 
   326  0187                     	;# 
   327  0188                     	;# 
   328  0189                     	;# 
   329  018C                     	;# 
   330  018D                     	;# 
   331  0000                     	;# 
   332  0001                     	;# 
   333  0002                     	;# 
   334  0003                     	;# 
   335  0004                     	;# 
   336  0005                     	;# 
   337  0006                     	;# 
   338  0007                     	;# 
   339  0009                     	;# 
   340  000A                     	;# 
   341  000B                     	;# 
   342  000C                     	;# 
   343  000D                     	;# 
   344  000E                     	;# 
   345  000E                     	;# 
   346  000F                     	;# 
   347  0010                     	;# 
   348  0011                     	;# 
   349  0012                     	;# 
   350  0013                     	;# 
   351  0014                     	;# 
   352  0015                     	;# 
   353  0015                     	;# 
   354  0016                     	;# 
   355  0017                     	;# 
   356  0018                     	;# 
   357  0019                     	;# 
   358  001A                     	;# 
   359  001B                     	;# 
   360  001B                     	;# 
   361  001C                     	;# 
   362  001D                     	;# 
   363  001E                     	;# 
   364  001F                     	;# 
   365  0081                     	;# 
   366  0085                     	;# 
   367  0086                     	;# 
   368  0087                     	;# 
   369  0089                     	;# 
   370  008C                     	;# 
   371  008D                     	;# 
   372  008E                     	;# 
   373  008F                     	;# 
   374  0090                     	;# 
   375  0091                     	;# 
   376  0092                     	;# 
   377  0093                     	;# 
   378  0093                     	;# 
   379  0093                     	;# 
   380  0094                     	;# 
   381  0095                     	;# 
   382  0096                     	;# 
   383  0097                     	;# 
   384  0098                     	;# 
   385  0099                     	;# 
   386  009A                     	;# 
   387  009B                     	;# 
   388  009C                     	;# 
   389  009D                     	;# 
   390  009E                     	;# 
   391  009F                     	;# 
   392  0105                     	;# 
   393  0107                     	;# 
   394  0108                     	;# 
   395  0109                     	;# 
   396  010C                     	;# 
   397  010C                     	;# 
   398  010D                     	;# 
   399  010E                     	;# 
   400  010F                     	;# 
   401  0185                     	;# 
   402  0187                     	;# 
   403  0188                     	;# 
   404  0189                     	;# 
   405  018C                     	;# 
   406  018D                     	;# 
   407  0000                     	;# 
   408  0001                     	;# 
   409  0002                     	;# 
   410  0003                     	;# 
   411  0004                     	;# 
   412  0005                     	;# 
   413  0006                     	;# 
   414  0007                     	;# 
   415  0009                     	;# 
   416  000A                     	;# 
   417  000B                     	;# 
   418  000C                     	;# 
   419  000D                     	;# 
   420  000E                     	;# 
   421  000E                     	;# 
   422  000F                     	;# 
   423  0010                     	;# 
   424  0011                     	;# 
   425  0012                     	;# 
   426  0013                     	;# 
   427  0014                     	;# 
   428  0015                     	;# 
   429  0015                     	;# 
   430  0016                     	;# 
   431  0017                     	;# 
   432  0018                     	;# 
   433  0019                     	;# 
   434  001A                     	;# 
   435  001B                     	;# 
   436  001B                     	;# 
   437  001C                     	;# 
   438  001D                     	;# 
   439  001E                     	;# 
   440  001F                     	;# 
   441  0081                     	;# 
   442  0085                     	;# 
   443  0086                     	;# 
   444  0087                     	;# 
   445  0089                     	;# 
   446  008C                     	;# 
   447  008D                     	;# 
   448  008E                     	;# 
   449  008F                     	;# 
   450  0090                     	;# 
   451  0091                     	;# 
   452  0092                     	;# 
   453  0093                     	;# 
   454  0093                     	;# 
   455  0093                     	;# 
   456  0094                     	;# 
   457  0095                     	;# 
   458  0096                     	;# 
   459  0097                     	;# 
   460  0098                     	;# 
   461  0099                     	;# 
   462  009A                     	;# 
   463  009B                     	;# 
   464  009C                     	;# 
   465  009D                     	;# 
   466  009E                     	;# 
   467  009F                     	;# 
   468  0105                     	;# 
   469  0107                     	;# 
   470  0108                     	;# 
   471  0109                     	;# 
   472  010C                     	;# 
   473  010C                     	;# 
   474  010D                     	;# 
   475  010E                     	;# 
   476  010F                     	;# 
   477  0185                     	;# 
   478  0187                     	;# 
   479  0188                     	;# 
   480  0189                     	;# 
   481  018C                     	;# 
   482  018D                     	;# 
   483  0000                     	;# 
   484  0001                     	;# 
   485  0002                     	;# 
   486  0003                     	;# 
   487  0004                     	;# 
   488  0005                     	;# 
   489  0006                     	;# 
   490  0007                     	;# 
   491  0009                     	;# 
   492  000A                     	;# 
   493  000B                     	;# 
   494  000C                     	;# 
   495  000D                     	;# 
   496  000E                     	;# 
   497  000E                     	;# 
   498  000F                     	;# 
   499  0010                     	;# 
   500  0011                     	;# 
   501  0012                     	;# 
   502  0013                     	;# 
   503  0014                     	;# 
   504  0015                     	;# 
   505  0015                     	;# 
   506  0016                     	;# 
   507  0017                     	;# 
   508  0018                     	;# 
   509  0019                     	;# 
   510  001A                     	;# 
   511  001B                     	;# 
   512  001B                     	;# 
   513  001C                     	;# 
   514  001D                     	;# 
   515  001E                     	;# 
   516  001F                     	;# 
   517  0081                     	;# 
   518  0085                     	;# 
   519  0086                     	;# 
   520  0087                     	;# 
   521  0089                     	;# 
   522  008C                     	;# 
   523  008D                     	;# 
   524  008E                     	;# 
   525  008F                     	;# 
   526  0090                     	;# 
   527  0091                     	;# 
   528  0092                     	;# 
   529  0093                     	;# 
   530  0093                     	;# 
   531  0093                     	;# 
   532  0094                     	;# 
   533  0095                     	;# 
   534  0096                     	;# 
   535  0097                     	;# 
   536  0098                     	;# 
   537  0099                     	;# 
   538  009A                     	;# 
   539  009B                     	;# 
   540  009C                     	;# 
   541  009D                     	;# 
   542  009E                     	;# 
   543  009F                     	;# 
   544  0105                     	;# 
   545  0107                     	;# 
   546  0108                     	;# 
   547  0109                     	;# 
   548  010C                     	;# 
   549  010C                     	;# 
   550  010D                     	;# 
   551  010E                     	;# 
   552  010F                     	;# 
   553  0185                     	;# 
   554  0187                     	;# 
   555  0188                     	;# 
   556  0189                     	;# 
   557  018C                     	;# 
   558  018D                     	;# 
   559  0000                     	;# 
   560  0001                     	;# 
   561  0002                     	;# 
   562  0003                     	;# 
   563  0004                     	;# 
   564  0005                     	;# 
   565  0006                     	;# 
   566  0007                     	;# 
   567  0009                     	;# 
   568  000A                     	;# 
   569  000B                     	;# 
   570  000C                     	;# 
   571  000D                     	;# 
   572  000E                     	;# 
   573  000E                     	;# 
   574  000F                     	;# 
   575  0010                     	;# 
   576  0011                     	;# 
   577  0012                     	;# 
   578  0013                     	;# 
   579  0014                     	;# 
   580  0015                     	;# 
   581  0015                     	;# 
   582  0016                     	;# 
   583  0017                     	;# 
   584  0018                     	;# 
   585  0019                     	;# 
   586  001A                     	;# 
   587  001B                     	;# 
   588  001B                     	;# 
   589  001C                     	;# 
   590  001D                     	;# 
   591  001E                     	;# 
   592  001F                     	;# 
   593  0081                     	;# 
   594  0085                     	;# 
   595  0086                     	;# 
   596  0087                     	;# 
   597  0089                     	;# 
   598  008C                     	;# 
   599  008D                     	;# 
   600  008E                     	;# 
   601  008F                     	;# 
   602  0090                     	;# 
   603  0091                     	;# 
   604  0092                     	;# 
   605  0093                     	;# 
   606  0093                     	;# 
   607  0093                     	;# 
   608  0094                     	;# 
   609  0095                     	;# 
   610  0096                     	;# 
   611  0097                     	;# 
   612  0098                     	;# 
   613  0099                     	;# 
   614  009A                     	;# 
   615  009B                     	;# 
   616  009C                     	;# 
   617  009D                     	;# 
   618  009E                     	;# 
   619  009F                     	;# 
   620  0105                     	;# 
   621  0107                     	;# 
   622  0108                     	;# 
   623  0109                     	;# 
   624  010C                     	;# 
   625  010C                     	;# 
   626  010D                     	;# 
   627  010E                     	;# 
   628  010F                     	;# 
   629  0185                     	;# 
   630  0187                     	;# 
   631  0188                     	;# 
   632  0189                     	;# 
   633  018C                     	;# 
   634  018D                     	;# 
   635  0000                     	;# 
   636  0001                     	;# 
   637  0002                     	;# 
   638  0003                     	;# 
   639  0004                     	;# 
   640  0005                     	;# 
   641  0006                     	;# 
   642  0007                     	;# 
   643  0009                     	;# 
   644  000A                     	;# 
   645  000B                     	;# 
   646  000C                     	;# 
   647  000D                     	;# 
   648  000E                     	;# 
   649  000E                     	;# 
   650  000F                     	;# 
   651  0010                     	;# 
   652  0011                     	;# 
   653  0012                     	;# 
   654  0013                     	;# 
   655  0014                     	;# 
   656  0015                     	;# 
   657  0015                     	;# 
   658  0016                     	;# 
   659  0017                     	;# 
   660  0018                     	;# 
   661  0019                     	;# 
   662  001A                     	;# 
   663  001B                     	;# 
   664  001B                     	;# 
   665  001C                     	;# 
   666  001D                     	;# 
   667  001E                     	;# 
   668  001F                     	;# 
   669  0081                     	;# 
   670  0085                     	;# 
   671  0086                     	;# 
   672  0087                     	;# 
   673  0089                     	;# 
   674  008C                     	;# 
   675  008D                     	;# 
   676  008E                     	;# 
   677  008F                     	;# 
   678  0090                     	;# 
   679  0091                     	;# 
   680  0092                     	;# 
   681  0093                     	;# 
   682  0093                     	;# 
   683  0093                     	;# 
   684  0094                     	;# 
   685  0095                     	;# 
   686  0096                     	;# 
   687  0097                     	;# 
   688  0098                     	;# 
   689  0099                     	;# 
   690  009A                     	;# 
   691  009B                     	;# 
   692  009C                     	;# 
   693  009D                     	;# 
   694  009E                     	;# 
   695  009F                     	;# 
   696  0105                     	;# 
   697  0107                     	;# 
   698  0108                     	;# 
   699  0109                     	;# 
   700  010C                     	;# 
   701  010C                     	;# 
   702  010D                     	;# 
   703  010E                     	;# 
   704  010F                     	;# 
   705  0185                     	;# 
   706  0187                     	;# 
   707  0188                     	;# 
   708  0189                     	;# 
   709  018C                     	;# 
   710  018D                     	;# 
   711  0000                     	;# 
   712  0001                     	;# 
   713  0002                     	;# 
   714  0003                     	;# 
   715  0004                     	;# 
   716  0005                     	;# 
   717  0006                     	;# 
   718  0007                     	;# 
   719  0009                     	;# 
   720  000A                     	;# 
   721  000B                     	;# 
   722  000C                     	;# 
   723  000D                     	;# 
   724  000E                     	;# 
   725  000E                     	;# 
   726  000F                     	;# 
   727  0010                     	;# 
   728  0011                     	;# 
   729  0012                     	;# 
   730  0013                     	;# 
   731  0014                     	;# 
   732  0015                     	;# 
   733  0015                     	;# 
   734  0016                     	;# 
   735  0017                     	;# 
   736  0018                     	;# 
   737  0019                     	;# 
   738  001A                     	;# 
   739  001B                     	;# 
   740  001B                     	;# 
   741  001C                     	;# 
   742  001D                     	;# 
   743  001E                     	;# 
   744  001F                     	;# 
   745  0081                     	;# 
   746  0085                     	;# 
   747  0086                     	;# 
   748  0087                     	;# 
   749  0089                     	;# 
   750  008C                     	;# 
   751  008D                     	;# 
   752  008E                     	;# 
   753  008F                     	;# 
   754  0090                     	;# 
   755  0091                     	;# 
   756  0092                     	;# 
   757  0093                     	;# 
   758  0093                     	;# 
   759  0093                     	;# 
   760  0094                     	;# 
   761  0095                     	;# 
   762  0096                     	;# 
   763  0097                     	;# 
   764  0098                     	;# 
   765  0099                     	;# 
   766  009A                     	;# 
   767  009B                     	;# 
   768  009C                     	;# 
   769  009D                     	;# 
   770  009E                     	;# 
   771  009F                     	;# 
   772  0105                     	;# 
   773  0107                     	;# 
   774  0108                     	;# 
   775  0109                     	;# 
   776  010C                     	;# 
   777  010C                     	;# 
   778  010D                     	;# 
   779  010E                     	;# 
   780  010F                     	;# 
   781  0185                     	;# 
   782  0187                     	;# 
   783  0188                     	;# 
   784  0189                     	;# 
   785  018C                     	;# 
   786  018D                     	;# 
   787  0000                     	;# 
   788  0001                     	;# 
   789  0002                     	;# 
   790  0003                     	;# 
   791  0004                     	;# 
   792  0005                     	;# 
   793  0006                     	;# 
   794  0007                     	;# 
   795  0009                     	;# 
   796  000A                     	;# 
   797  000B                     	;# 
   798  000C                     	;# 
   799  000D                     	;# 
   800  000E                     	;# 
   801  000E                     	;# 
   802  000F                     	;# 
   803  0010                     	;# 
   804  0011                     	;# 
   805  0012                     	;# 
   806  0013                     	;# 
   807  0014                     	;# 
   808  0015                     	;# 
   809  0015                     	;# 
   810  0016                     	;# 
   811  0017                     	;# 
   812  0018                     	;# 
   813  0019                     	;# 
   814  001A                     	;# 
   815  001B                     	;# 
   816  001B                     	;# 
   817  001C                     	;# 
   818  001D                     	;# 
   819  001E                     	;# 
   820  001F                     	;# 
   821  0081                     	;# 
   822  0085                     	;# 
   823  0086                     	;# 
   824  0087                     	;# 
   825  0089                     	;# 
   826  008C                     	;# 
   827  008D                     	;# 
   828  008E                     	;# 
   829  008F                     	;# 
   830  0090                     	;# 
   831  0091                     	;# 
   832  0092                     	;# 
   833  0093                     	;# 
   834  0093                     	;# 
   835  0093                     	;# 
   836  0094                     	;# 
   837  0095                     	;# 
   838  0096                     	;# 
   839  0097                     	;# 
   840  0098                     	;# 
   841  0099                     	;# 
   842  009A                     	;# 
   843  009B                     	;# 
   844  009C                     	;# 
   845  009D                     	;# 
   846  009E                     	;# 
   847  009F                     	;# 
   848  0105                     	;# 
   849  0107                     	;# 
   850  0108                     	;# 
   851  0109                     	;# 
   852  010C                     	;# 
   853  010C                     	;# 
   854  010D                     	;# 
   855  010E                     	;# 
   856  010F                     	;# 
   857  0185                     	;# 
   858  0187                     	;# 
   859  0188                     	;# 
   860  0189                     	;# 
   861  018C                     	;# 
   862  018D                     	;# 
   863  0000                     	;# 
   864  0001                     	;# 
   865  0002                     	;# 
   866  0003                     	;# 
   867  0004                     	;# 
   868  0005                     	;# 
   869  0006                     	;# 
   870  0007                     	;# 
   871  0009                     	;# 
   872  000A                     	;# 
   873  000B                     	;# 
   874  000C                     	;# 
   875  000D                     	;# 
   876  000E                     	;# 
   877  000E                     	;# 
   878  000F                     	;# 
   879  0010                     	;# 
   880  0011                     	;# 
   881  0012                     	;# 
   882  0013                     	;# 
   883  0014                     	;# 
   884  0015                     	;# 
   885  0015                     	;# 
   886  0016                     	;# 
   887  0017                     	;# 
   888  0018                     	;# 
   889  0019                     	;# 
   890  001A                     	;# 
   891  001B                     	;# 
   892  001B                     	;# 
   893  001C                     	;# 
   894  001D                     	;# 
   895  001E                     	;# 
   896  001F                     	;# 
   897  0081                     	;# 
   898  0085                     	;# 
   899  0086                     	;# 
   900  0087                     	;# 
   901  0089                     	;# 
   902  008C                     	;# 
   903  008D                     	;# 
   904  008E                     	;# 
   905  008F                     	;# 
   906  0090                     	;# 
   907  0091                     	;# 
   908  0092                     	;# 
   909  0093                     	;# 
   910  0093                     	;# 
   911  0093                     	;# 
   912  0094                     	;# 
   913  0095                     	;# 
   914  0096                     	;# 
   915  0097                     	;# 
   916  0098                     	;# 
   917  0099                     	;# 
   918  009A                     	;# 
   919  009B                     	;# 
   920  009C                     	;# 
   921  009D                     	;# 
   922  009E                     	;# 
   923  009F                     	;# 
   924  0105                     	;# 
   925  0107                     	;# 
   926  0108                     	;# 
   927  0109                     	;# 
   928  010C                     	;# 
   929  010C                     	;# 
   930  010D                     	;# 
   931  010E                     	;# 
   932  010F                     	;# 
   933  0185                     	;# 
   934  0187                     	;# 
   935  0188                     	;# 
   936  0189                     	;# 
   937  018C                     	;# 
   938  018D                     	;# 
   939  0000                     	;# 
   940  0001                     	;# 
   941  0002                     	;# 
   942  0003                     	;# 
   943  0004                     	;# 
   944  0005                     	;# 
   945  0006                     	;# 
   946  0007                     	;# 
   947  0009                     	;# 
   948  000A                     	;# 
   949  000B                     	;# 
   950  000C                     	;# 
   951  000D                     	;# 
   952  000E                     	;# 
   953  000E                     	;# 
   954  000F                     	;# 
   955  0010                     	;# 
   956  0011                     	;# 
   957  0012                     	;# 
   958  0013                     	;# 
   959  0014                     	;# 
   960  0015                     	;# 
   961  0015                     	;# 
   962  0016                     	;# 
   963  0017                     	;# 
   964  0018                     	;# 
   965  0019                     	;# 
   966  001A                     	;# 
   967  001B                     	;# 
   968  001B                     	;# 
   969  001C                     	;# 
   970  001D                     	;# 
   971  001E                     	;# 
   972  001F                     	;# 
   973  0081                     	;# 
   974  0085                     	;# 
   975  0086                     	;# 
   976  0087                     	;# 
   977  0089                     	;# 
   978  008C                     	;# 
   979  008D                     	;# 
   980  008E                     	;# 
   981  008F                     	;# 
   982  0090                     	;# 
   983  0091                     	;# 
   984  0092                     	;# 
   985  0093                     	;# 
   986  0093                     	;# 
   987  0093                     	;# 
   988  0094                     	;# 
   989  0095                     	;# 
   990  0096                     	;# 
   991  0097                     	;# 
   992  0098                     	;# 
   993  0099                     	;# 
   994  009A                     	;# 
   995  009B                     	;# 
   996  009C                     	;# 
   997  009D                     	;# 
   998  009E                     	;# 
   999  009F                     	;# 
  1000  0105                     	;# 
  1001  0107                     	;# 
  1002  0108                     	;# 
  1003  0109                     	;# 
  1004  010C                     	;# 
  1005  010C                     	;# 
  1006  010D                     	;# 
  1007  010E                     	;# 
  1008  010F                     	;# 
  1009  0185                     	;# 
  1010  0187                     	;# 
  1011  0188                     	;# 
  1012  0189                     	;# 
  1013  018C                     	;# 
  1014  018D                     	;# 
  1015  0000                     	;# 
  1016  0001                     	;# 
  1017  0002                     	;# 
  1018  0003                     	;# 
  1019  0004                     	;# 
  1020  0005                     	;# 
  1021  0006                     	;# 
  1022  0007                     	;# 
  1023  0009                     	;# 
  1024  000A                     	;# 
  1025  000B                     	;# 
  1026  000C                     	;# 
  1027  000D                     	;# 
  1028  000E                     	;# 
  1029  000E                     	;# 
  1030  000F                     	;# 
  1031  0010                     	;# 
  1032  0011                     	;# 
  1033  0012                     	;# 
  1034  0013                     	;# 
  1035  0014                     	;# 
  1036  0015                     	;# 
  1037  0015                     	;# 
  1038  0016                     	;# 
  1039  0017                     	;# 
  1040  0018                     	;# 
  1041  0019                     	;# 
  1042  001A                     	;# 
  1043  001B                     	;# 
  1044  001B                     	;# 
  1045  001C                     	;# 
  1046  001D                     	;# 
  1047  001E                     	;# 
  1048  001F                     	;# 
  1049  0081                     	;# 
  1050  0085                     	;# 
  1051  0086                     	;# 
  1052  0087                     	;# 
  1053  0089                     	;# 
  1054  008C                     	;# 
  1055  008D                     	;# 
  1056  008E                     	;# 
  1057  008F                     	;# 
  1058  0090                     	;# 
  1059  0091                     	;# 
  1060  0092                     	;# 
  1061  0093                     	;# 
  1062  0093                     	;# 
  1063  0093                     	;# 
  1064  0094                     	;# 
  1065  0095                     	;# 
  1066  0096                     	;# 
  1067  0097                     	;# 
  1068  0098                     	;# 
  1069  0099                     	;# 
  1070  009A                     	;# 
  1071  009B                     	;# 
  1072  009C                     	;# 
  1073  009D                     	;# 
  1074  009E                     	;# 
  1075  009F                     	;# 
  1076  0105                     	;# 
  1077  0107                     	;# 
  1078  0108                     	;# 
  1079  0109                     	;# 
  1080  010C                     	;# 
  1081  010C                     	;# 
  1082  010D                     	;# 
  1083  010E                     	;# 
  1084  010F                     	;# 
  1085  0185                     	;# 
  1086  0187                     	;# 
  1087  0188                     	;# 
  1088  0189                     	;# 
  1089  018C                     	;# 
  1090  018D                     	;# 
  1091  0000                     	;# 
  1092  0001                     	;# 
  1093  0002                     	;# 
  1094  0003                     	;# 
  1095  0004                     	;# 
  1096  0005                     	;# 
  1097  0006                     	;# 
  1098  0007                     	;# 
  1099  0009                     	;# 
  1100  000A                     	;# 
  1101  000B                     	;# 
  1102  000C                     	;# 
  1103  000D                     	;# 
  1104  000E                     	;# 
  1105  000E                     	;# 
  1106  000F                     	;# 
  1107  0010                     	;# 
  1108  0011                     	;# 
  1109  0012                     	;# 
  1110  0013                     	;# 
  1111  0014                     	;# 
  1112  0015                     	;# 
  1113  0015                     	;# 
  1114  0016                     	;# 
  1115  0017                     	;# 
  1116  0018                     	;# 
  1117  0019                     	;# 
  1118  001A                     	;# 
  1119  001B                     	;# 
  1120  001B                     	;# 
  1121  001C                     	;# 
  1122  001D                     	;# 
  1123  001E                     	;# 
  1124  001F                     	;# 
  1125  0081                     	;# 
  1126  0085                     	;# 
  1127  0086                     	;# 
  1128  0087                     	;# 
  1129  0089                     	;# 
  1130  008C                     	;# 
  1131  008D                     	;# 
  1132  008E                     	;# 
  1133  008F                     	;# 
  1134  0090                     	;# 
  1135  0091                     	;# 
  1136  0092                     	;# 
  1137  0093                     	;# 
  1138  0093                     	;# 
  1139  0093                     	;# 
  1140  0094                     	;# 
  1141  0095                     	;# 
  1142  0096                     	;# 
  1143  0097                     	;# 
  1144  0098                     	;# 
  1145  0099                     	;# 
  1146  009A                     	;# 
  1147  009B                     	;# 
  1148  009C                     	;# 
  1149  009D                     	;# 
  1150  009E                     	;# 
  1151  009F                     	;# 
  1152  0105                     	;# 
  1153  0107                     	;# 
  1154  0108                     	;# 
  1155  0109                     	;# 
  1156  010C                     	;# 
  1157  010C                     	;# 
  1158  010D                     	;# 
  1159  010E                     	;# 
  1160  010F                     	;# 
  1161  0185                     	;# 
  1162  0187                     	;# 
  1163  0188                     	;# 
  1164  0189                     	;# 
  1165  018C                     	;# 
  1166  018D                     	;# 
  1167                           
  1168                           	psect	idataBANK0
  1169  07FF                     __pidataBANK0:	
  1170                           
  1171                           ;initializer for Display7SegmentText@enable_digit
  1172  07FF  3401               	retlw	1
  1173                           
  1174                           	psect	strings
  1175  0800                     __pstrings:	
  1176  0800                     stringtab:	
  1177  0800                     __stringtab:	
  1178  0800                     stringcode:	
  1179                           ;	String table - string pointers are 1 byte each
  1180                           
  1181  0800                     stringdir:	
  1182  0800  3008               	movlw	high stringdir
  1183  0801  008A               	movwf	10
  1184  0802  0804               	movf	4,w
  1185  0803  0A84               	incf	4,f
  1186  0804  0782               	addwf	2,f
  1187  0805                     __stringbase:	
  1188  0805  3400               	retlw	0
  1189  0806                     __end_of__stringtab:	
  1190  0806                     PlayRing@melody:	
  1191  0806  3493               	retlw	147
  1192  0807  3402               	retlw	2
  1193  0808  340B               	retlw	11
  1194  0809  3402               	retlw	2
  1195  080A  344B               	retlw	75
  1196  080B  3402               	retlw	2
  1197  080C  3488               	retlw	136
  1198  080D  3401               	retlw	1
  1199  080E  3401               	retlw	1
  1200  080F  3400               	retlw	0
  1201  0810  3488               	retlw	136
  1202  0811  3401               	retlw	1
  1203  0812  344B               	retlw	75
  1204  0813  3402               	retlw	2
  1205  0814  3493               	retlw	147
  1206  0815  3402               	retlw	2
  1207  0816  340B               	retlw	11
  1208  0817  3402               	retlw	2
  1209  0818                     __end_ofPlayRing@melody:	
  1210  0818                     Init_I2C@k_i2c_clock:	
  1211  0818  34A0               	retlw	160
  1212  0819  3486               	retlw	134
  1213  081A  3401               	retlw	1
  1214  081B  3400               	retlw	0
  1215  081C                     __end_ofInit_I2C@k_i2c_clock:	
  1216  081C                     PlayRing@tempo:	
  1217  081C  34D0               	retlw	208
  1218  081D  3407               	retlw	7
  1219  081E                     __end_ofPlayRing@tempo:	
  1220  081E                     CRC16@generator:	
  1221  081E  3421               	retlw	33
  1222  081F  3410               	retlw	16
  1223  0820                     __end_ofCRC16@generator:	
  1224  0820                     PlayRing@beats:	
  1225  0820  3404               	retlw	4
  1226  0821  3404               	retlw	4
  1227  0822  3404               	retlw	4
  1228  0823  3402               	retlw	2
  1229  0824  3440               	retlw	64
  1230  0825  3404               	retlw	4
  1231  0826  3404               	retlw	4
  1232  0827  3404               	retlw	4
  1233  0828  3402               	retlw	2
  1234  0829                     __end_ofPlayRing@beats:	
  1235                           
  1236                           	psect	nvBANK0
  1237  0063                     __pnvBANK0:	
  1238  0063                     _g_decimal_point:	
  1239  0063                     	ds	1
  1240  000E                     _TMR1	set	14
  1241  0015                     _CCPR1	set	21
  1242  0013                     _SSPBUF	set	19
  1243  0014                     _SSPCONbits	set	20
  1244  0005                     _PORTAbits	set	5
  1245  0006                     _PORTBbits	set	6
  1246  0007                     _PORTCbits	set	7
  1247  0017                     _CCP1CONbits	set	23
  1248  001D                     _CCP2CONbits	set	29
  1249  0010                     _T1CONbits	set	16
  1250  000B                     _INTCONbits	set	11
  1251  0019                     _TXREG	set	25
  1252  0018                     _RCSTAbits	set	24
  1253  0007                     _PORTC	set	7
  1254  0006                     _PORTB	set	6
  1255  0062                     _CCP1IF	set	98
  1256  0068                     _CCP2IF	set	104
  1257  005A                     _TMR0IF	set	90
  1258  005D                     _TMR0IE	set	93
  1259  0094                     _SSPSTATbits	set	148
  1260  0091                     _SSPCON2bits	set	145
  1261  0094                     _SSPSTAT	set	148
  1262  0091                     _SSPCON2	set	145
  1263  0093                     _SSPADD	set	147
  1264  0081                     _OPTION_REGbits	set	129
  1265  008F                     _OSCCONbits	set	143
  1266  0099                     _SPBRG	set	153
  1267  0098                     _TXSTAbits	set	152
  1268  048C                     _ACKEN	set	1164
  1269  048D                     _ACKDT	set	1165
  1270  048B                     _RCEN	set	1163
  1271  0462                     _CCP1IE	set	1122
  1272  0468                     _CCP2IE	set	1128
  1273  0437                     _TRISB7	set	1079
  1274  0436                     _TRISB6	set	1078
  1275  0435                     _TRISB5	set	1077
  1276  0434                     _TRISB4	set	1076
  1277  0433                     _TRISB3	set	1075
  1278  0432                     _TRISB2	set	1074
  1279  0431                     _TRISB1	set	1073
  1280  0430                     _TRISB0	set	1072
  1281  042F                     _TRISA7	set	1071
  1282  042E                     _TRISA6	set	1070
  1283  042D                     _TRISA5	set	1069
  1284  042C                     _TRISA4	set	1068
  1285  042B                     _TRISA3	set	1067
  1286  042A                     _TRISA2	set	1066
  1287  0429                     _TRISA1	set	1065
  1288  0428                     _TRISA0	set	1064
  1289  043F                     _TRISC7	set	1087
  1290  043D                     _TRISC5	set	1085
  1291  043C                     _TRISC4	set	1084
  1292  043B                     _TRISC3	set	1083
  1293  043A                     _TRISC2	set	1082
  1294  0439                     _TRISC1	set	1081
  1295  0438                     _TRISC0	set	1080
  1296  04C1                     _TRMT	set	1217
  1297  043E                     _TRISC6	set	1086
  1298  0189                     _ANSELH	set	393
  1299  0188                     _ANSEL	set	392
  1300                           
  1301                           ; #config settings
  1302  0000                     
  1303                           	psect	cinit
  1304  0013                     start_initialization:	
  1305  0013                     __initialization:	
  1306                           
  1307                           ; Initialize objects allocated to BANK0
  1308  0013  120A  118A  27FF  120A  118A  	fcall	__pidataBANK0	;fetch initializer
  1309  0018  00E4               	movwf	__pdataBANK0& (0+127)
  1310                           
  1311                           ; Clear objects allocated to BANK1
  1312  0019  1383               	bcf	3,7	;select IRP bank0
  1313  001A  30A0               	movlw	low __pbssBANK1
  1314  001B  0084               	movwf	4
  1315  001C  30E8               	movlw	low (__pbssBANK1+72)
  1316  001D  120A  158A  2203  120A  118A  	fcall	clear_ram0
  1317                           
  1318                           ; Clear objects allocated to BANK0
  1319  0022  3049               	movlw	low __pbssBANK0
  1320  0023  0084               	movwf	4
  1321  0024  3063               	movlw	low (__pbssBANK0+26)
  1322  0025  120A  158A  2203  120A  118A  	fcall	clear_ram0
  1323  002A                     end_of_initialization:	
  1324                           ;End of C runtime variable initialization code
  1325                           
  1326  002A                     __end_of__initialization:	
  1327  002A  0183               	clrf	3
  1328  002B  120A  158A  2C2D   	ljmp	_main	;jump to C main() function
  1329                           
  1330                           	psect	bssBANK0
  1331  0049                     __pbssBANK0:	
  1332  0049                     _g_generic_timer:	
  1333  0049                     	ds	2
  1334  004B                     _g_button_timer:	
  1335  004B                     	ds	2
  1336  004D                     _Timer1:	
  1337  004D                     	ds	2
  1338  004F                     _PWM_Freq:	
  1339  004F                     	ds	2
  1340  0051                     CheckEvent@a:	
  1341  0051                     	ds	1
  1342  0052                     ManchesterDecode@f_sync:	
  1343  0052                     	ds	1
  1344  0053                     ManchesterDecode@f_slope_t:	
  1345  0053                     	ds	1
  1346  0054                     ManchesterDecode@f_start_data:	
  1347  0054                     	ds	1
  1348  0055                     ManchesterDecode@data_counter:	
  1349  0055                     	ds	1
  1350  0056                     ManchesterDecode@bit_pos:	
  1351  0056                     	ds	1
  1352  0057                     ISR@display_timer:	
  1353  0057                     	ds	1
  1354  0058                     ISR@set_flag:	
  1355  0058                     	ds	1
  1356  0059                     _ISR_ACK:	
  1357  0059                     	ds	1
  1358  005A                     FrameBuffer@WritePointerMem:	
  1359  005A                     	ds	1
  1360  005B                     FrameBuffer@WritePointer:	
  1361  005B                     	ds	1
  1362  005C                     FrameBuffer@ReadPointer:	
  1363  005C                     	ds	1
  1364  005D                     _g_display_text:	
  1365  005D                     	ds	4
  1366  0061                     ManchesterDecode@decoded_byte:	
  1367  0061                     	ds	1
  1368  0062                     ISR@edge_dir:	
  1369  0062                     	ds	1
  1370                           
  1371                           	psect	dataBANK0
  1372  0064                     __pdataBANK0:	
  1373  0064                     Display7SegmentText@enable_digit:	
  1374  0064                     	ds	1
  1375                           
  1376                           	psect	bssBANK1
  1377  00A0                     __pbssBANK1:	
  1378  00A0                     FrameBuffer@Buffer:	
  1379  00A0                     	ds	30
  1380  00BE                     Button_Init@set_down:	
  1381  00BE                     	ds	7
  1382  00C5                     Button_Init@set_up:	
  1383  00C5                     	ds	7
  1384  00CC                     Button_Init@set_right:	
  1385  00CC                     	ds	7
  1386  00D3                     Button_Init@set_time2:	
  1387  00D3                     	ds	7
  1388  00DA                     Button_Init@set_time1:	
  1389  00DA                     	ds	7
  1390  00E1                     Button_Init@set_rtc:	
  1391  00E1                     	ds	7
  1392                           
  1393                           	psect	clrtext
  1394  0A03                     clear_ram0:	
  1395                           ;	Called with FSR containing the base address, and
  1396                           ;	W with the last address+1
  1397                           
  1398  0A03  0064               	clrwdt	;clear the watchdog before getting into this loop
  1399  0A04                     clrloop0:	
  1400  0A04  0180               	clrf	0	;clear RAM location pointed to by FSR
  1401  0A05  0A84               	incf	4,f	;increment pointer
  1402  0A06  0604               	xorwf	4,w	;XOR with final address
  1403  0A07  1903               	btfsc	3,2	;have we reached the end yet?
  1404  0A08  3400               	retlw	0	;all done for this memory range, return
  1405  0A09  0604               	xorwf	4,w	;XOR again to restore value
  1406  0A0A  2A04               	goto	clrloop0	;do the next byte
  1407                           
  1408                           	psect	cstackBANK3
  1409  0190                     __pcstackBANK3:	
  1410  0190                     main@DataRCV:	
  1411                           
  1412                           ; 5 bytes @ 0x0
  1413  0190                     	ds	5
  1414  0195                     main@keydef:	
  1415                           
  1416                           ; 6 bytes @ 0x5
  1417  0195                     	ds	6
  1418                           
  1419                           	psect	cstackCOMMON
  1420  0070                     __pcstackCOMMON:	
  1421  0070                     ?_Init_I2C:	
  1422  0070                     ?_Button_Init:	
  1423                           ; 1 bytes @ 0x0
  1424                           
  1425  0070                     ?_Button_Handler:	
  1426                           ; 1 bytes @ 0x0
  1427                           
  1428  0070                     ?_ProcessRCVData:	
  1429                           ; 1 bytes @ 0x0
  1430                           
  1431  0070                     ?_PlayRing:	
  1432                           ; 1 bytes @ 0x0
  1433                           
  1434  0070                     ?_I2C_Master_Start:	
  1435                           ; 1 bytes @ 0x0
  1436                           
  1437  0070                     ?_I2C_Master_Stop:	
  1438                           ; 1 bytes @ 0x0
  1439                           
  1440  0070                     ?_I2C_Master_Read:	
  1441                           ; 1 bytes @ 0x0
  1442                           
  1443  0070                     ?_Set_RTC_Button_Short:	
  1444                           ; 1 bytes @ 0x0
  1445                           
  1446  0070                     ?_Set_Time1_Button_Short:	
  1447                           ; 1 bytes @ 0x0
  1448                           
  1449  0070                     ?_Set_Time2_Button_Short:	
  1450                           ; 1 bytes @ 0x0
  1451                           
  1452  0070                     ?_Right_Button_Short:	
  1453                           ; 1 bytes @ 0x0
  1454                           
  1455  0070                     ?_Up_Button_Short:	
  1456                           ; 1 bytes @ 0x0
  1457                           
  1458  0070                     ?_Down_Button_Short:	
  1459                           ; 1 bytes @ 0x0
  1460                           
  1461  0070                     ?_UART_Init:	
  1462                           ; 1 bytes @ 0x0
  1463                           
  1464  0070                     ?_SendUART:	
  1465                           ; 1 bytes @ 0x0
  1466                           
  1467  0070                     ?_Global_Inits:	
  1468                           ; 1 bytes @ 0x0
  1469                           
  1470  0070                     ?_InterruptConfig:	
  1471                           ; 1 bytes @ 0x0
  1472                           
  1473  0070                     ?_ISR:	
  1474                           ; 1 bytes @ 0x0
  1475                           
  1476  0070                     ?_main:	
  1477                           ; 1 bytes @ 0x0
  1478                           
  1479  0070                     ?_CRC_check:	
  1480                           ; 1 bytes @ 0x0
  1481                           
  1482  0070                     ?_CheckEvent:	
  1483                           ; 1 bytes @ 0x0
  1484                           
  1485  0070                     ?_Init_CompareMode:	
  1486                           ; 1 bytes @ 0x0
  1487                           
  1488  0070                     ?_Init_CaptureMode:	
  1489                           ; 1 bytes @ 0x0
  1490                           
  1491  0070                     ?_SignAnodeData:	
  1492                           ; 1 bytes @ 0x0
  1493                           
  1494  0070                     ??_SignAnodeData:	
  1495                           ; 1 bytes @ 0x0
  1496                           
  1497  0070                     ?_DisableAllDigits:	
  1498                           ; 1 bytes @ 0x0
  1499                           
  1500  0070                     ??_DisableAllDigits:	
  1501                           ; 1 bytes @ 0x0
  1502                           
  1503  0070                     ?_BCD_2_DEC:	
  1504                           ; 1 bytes @ 0x0
  1505                           
  1506  0070                     ?_PCF8583_Read_Byte:	
  1507                           ; 1 bytes @ 0x0
  1508                           
  1509  0070                     ?_PCF8583_Read_Time_Date:	
  1510                           ; 1 bytes @ 0x0
  1511                           
  1512  0070                     ?_I2C_Master_Wait:	
  1513                           ; 1 bytes @ 0x0
  1514                           
  1515  0070                     ?_Key_Press:	
  1516                           ; 1 bytes @ 0x0
  1517                           
  1518  0070                     ?_Display_2Dig:	
  1519                           ; 1 bytes @ 0x0
  1520                           
  1521  0070                     ?i1_FrameBuffer:	
  1522                           ; 1 bytes @ 0x0
  1523                           
  1524  0070                     PlayRing@diode:	
  1525                           ; 1 bytes @ 0x0
  1526                           
  1527  0070                     i1FrameBuffer@mode:	
  1528                           ; 1 bytes @ 0x0
  1529                           
  1530                           
  1531                           ; 1 bytes @ 0x0
  1532  0070                     	ds	1
  1533  0071                     ??i1_FrameBuffer:	
  1534                           
  1535                           ; 1 bytes @ 0x1
  1536  0071                     	ds	1
  1537  0072                     SignAnodeData@sign:	
  1538  0072                     i1FrameBuffer@data:	
  1539                           ; 1 bytes @ 0x2
  1540                           
  1541                           
  1542                           ; 1 bytes @ 0x2
  1543  0072                     	ds	1
  1544  0073                     ?_ManchesterDecode:	
  1545  0073                     ?_SetAnodeOutputs:	
  1546                           ; 1 bytes @ 0x3
  1547                           
  1548  0073                     ManchesterDecode@pulse_time:	
  1549                           ; 1 bytes @ 0x3
  1550                           
  1551  0073                     SetAnodeOutputs@decimal_point:	
  1552                           ; 1 bytes @ 0x3
  1553                           
  1554                           
  1555                           ; 1 bytes @ 0x3
  1556  0073                     	ds	1
  1557  0074                     ??_ManchesterDecode:	
  1558  0074                     ??_SetAnodeOutputs:	
  1559                           ; 1 bytes @ 0x4
  1560                           
  1561                           
  1562                           ; 1 bytes @ 0x4
  1563  0074                     	ds	1
  1564  0075                     SetAnodeOutputs@sign:	
  1565                           
  1566                           ; 1 bytes @ 0x5
  1567  0075                     	ds	1
  1568  0076                     ?_OneDigitHandler:	
  1569  0076                     OneDigitHandler@digit_number:	
  1570                           ; 1 bytes @ 0x6
  1571                           
  1572                           
  1573                           ; 1 bytes @ 0x6
  1574  0076                     	ds	1
  1575  0077                     OneDigitHandler@decimal_point:	
  1576                           
  1577                           ; 1 bytes @ 0x7
  1578  0077                     	ds	1
  1579  0078                     ??_OneDigitHandler:	
  1580  0078                     ManchesterDecode@edge_dir:	
  1581                           ; 1 bytes @ 0x8
  1582                           
  1583                           
  1584                           ; 1 bytes @ 0x8
  1585  0078                     	ds	2
  1586  007A                     OneDigitHandler@sign:	
  1587                           
  1588                           ; 1 bytes @ 0xA
  1589  007A                     	ds	1
  1590  007B                     ?_Display7SegmentText:	
  1591  007B                     Display7SegmentText@decimal_point:	
  1592                           ; 1 bytes @ 0xB
  1593                           
  1594                           
  1595                           ; 1 bytes @ 0xB
  1596  007B                     	ds	1
  1597  007C                     ??_Display7SegmentText:	
  1598                           
  1599                           ; 1 bytes @ 0xC
  1600  007C                     	ds	1
  1601  007D                     Display7SegmentText@text:	
  1602                           
  1603                           ; 1 bytes @ 0xD
  1604  007D                     	ds	1
  1605                           
  1606                           	psect	cstackBANK0
  1607  0020                     __pcstackBANK0:	
  1608  0020                     ??_ISR:	
  1609                           
  1610                           ; 1 bytes @ 0x0
  1611  0020                     	ds	4
  1612  0024                     ISR@PulseTime:	
  1613                           
  1614                           ; 2 bytes @ 0x4
  1615  0024                     	ds	2
  1616  0026                     ??_Init_I2C:	
  1617  0026                     ??_Button_Init:	
  1618                           ; 1 bytes @ 0x6
  1619                           
  1620  0026                     ??_I2C_Master_Start:	
  1621                           ; 1 bytes @ 0x6
  1622                           
  1623  0026                     ?_I2C_Master_Write:	
  1624                           ; 1 bytes @ 0x6
  1625                           
  1626  0026                     ??_I2C_Master_Stop:	
  1627                           ; 1 bytes @ 0x6
  1628                           
  1629  0026                     ??_I2C_Master_Read:	
  1630                           ; 1 bytes @ 0x6
  1631                           
  1632  0026                     ??_Set_Time1_Button_Short:	
  1633                           ; 1 bytes @ 0x6
  1634                           
  1635  0026                     ??_Set_Time2_Button_Short:	
  1636                           ; 1 bytes @ 0x6
  1637                           
  1638  0026                     ??_Right_Button_Short:	
  1639                           ; 1 bytes @ 0x6
  1640                           
  1641  0026                     ??_Up_Button_Short:	
  1642                           ; 1 bytes @ 0x6
  1643                           
  1644  0026                     ??_Down_Button_Short:	
  1645                           ; 1 bytes @ 0x6
  1646                           
  1647  0026                     ?_FrameBuffer:	
  1648                           ; 1 bytes @ 0x6
  1649                           
  1650  0026                     ??_UART_Init:	
  1651                           ; 1 bytes @ 0x6
  1652                           
  1653  0026                     ??_SendUART:	
  1654                           ; 1 bytes @ 0x6
  1655                           
  1656  0026                     ??_Global_Inits:	
  1657                           ; 1 bytes @ 0x6
  1658                           
  1659  0026                     ??_InterruptConfig:	
  1660                           ; 1 bytes @ 0x6
  1661                           
  1662  0026                     ??_Init_CompareMode:	
  1663                           ; 1 bytes @ 0x6
  1664                           
  1665  0026                     ??_Init_CaptureMode:	
  1666                           ; 1 bytes @ 0x6
  1667                           
  1668  0026                     ??_I2C_Master_Wait:	
  1669                           ; 1 bytes @ 0x6
  1670                           
  1671  0026                     ?___bmul:	
  1672                           ; 1 bytes @ 0x6
  1673                           
  1674  0026                     ?_CRC16:	
  1675                           ; 1 bytes @ 0x6
  1676                           
  1677  0026                     ?___awdiv:	
  1678                           ; 2 bytes @ 0x6
  1679                           
  1680  0026                     ?___awmod:	
  1681                           ; 2 bytes @ 0x6
  1682                           
  1683  0026                     ?___lwdiv:	
  1684                           ; 2 bytes @ 0x6
  1685                           
  1686  0026                     ?___lmul:	
  1687                           ; 2 bytes @ 0x6
  1688                           
  1689  0026                     ?___lldiv:	
  1690                           ; 4 bytes @ 0x6
  1691                           
  1692  0026                     FrameBuffer@mode:	
  1693                           ; 4 bytes @ 0x6
  1694                           
  1695  0026                     CRC16@size:	
  1696                           ; 1 bytes @ 0x6
  1697                           
  1698  0026                     SendUART@data:	
  1699                           ; 1 bytes @ 0x6
  1700                           
  1701  0026                     ___bmul@multiplicand:	
  1702                           ; 1 bytes @ 0x6
  1703                           
  1704  0026                     I2C_Master_Write@data:	
  1705                           ; 1 bytes @ 0x6
  1706                           
  1707  0026                     ___awdiv@divisor:	
  1708                           ; 2 bytes @ 0x6
  1709                           
  1710  0026                     ___awmod@divisor:	
  1711                           ; 2 bytes @ 0x6
  1712                           
  1713  0026                     ___lwdiv@divisor:	
  1714                           ; 2 bytes @ 0x6
  1715                           
  1716  0026                     ___lmul@multiplier:	
  1717                           ; 2 bytes @ 0x6
  1718                           
  1719  0026                     ___lldiv@divisor:	
  1720                           ; 4 bytes @ 0x6
  1721                           
  1722                           
  1723                           ; 4 bytes @ 0x6
  1724  0026                     	ds	1
  1725  0027                     ??_FrameBuffer:	
  1726  0027                     ??___bmul:	
  1727                           ; 1 bytes @ 0x7
  1728                           
  1729  0027                     Button_Init@keydef:	
  1730                           ; 1 bytes @ 0x7
  1731                           
  1732                           
  1733                           ; 1 bytes @ 0x7
  1734  0027                     	ds	1
  1735  0028                     ??_I2C_Master_Write:	
  1736  0028                     ??_CRC16:	
  1737                           ; 1 bytes @ 0x8
  1738                           
  1739  0028                     ?_PCF8583_Write_Byte:	
  1740                           ; 1 bytes @ 0x8
  1741                           
  1742  0028                     FrameBuffer@data:	
  1743                           ; 1 bytes @ 0x8
  1744                           
  1745  0028                     PCF8583_Write_Byte@data:	
  1746                           ; 1 bytes @ 0x8
  1747                           
  1748  0028                     I2C_Master_Read@ack:	
  1749                           ; 1 bytes @ 0x8
  1750                           
  1751  0028                     ___bmul@product:	
  1752                           ; 1 bytes @ 0x8
  1753                           
  1754  0028                     ___awdiv@dividend:	
  1755                           ; 1 bytes @ 0x8
  1756                           
  1757  0028                     ___awmod@dividend:	
  1758                           ; 2 bytes @ 0x8
  1759                           
  1760  0028                     ___lwdiv@dividend:	
  1761                           ; 2 bytes @ 0x8
  1762                           
  1763                           
  1764                           ; 2 bytes @ 0x8
  1765  0028                     	ds	1
  1766  0029                     ??_PCF8583_Write_Byte:	
  1767  0029                     ?_FrameDecode:	
  1768                           ; 1 bytes @ 0x9
  1769                           
  1770  0029                     ___bmul@multiplier:	
  1771                           ; 2 bytes @ 0x9
  1772                           
  1773  0029                     I2C_Master_Read@data:	
  1774                           ; 1 bytes @ 0x9
  1775                           
  1776                           
  1777                           ; 2 bytes @ 0x9
  1778  0029                     	ds	1
  1779  002A                     ??_BCD_2_DEC:	
  1780  002A                     ??___awdiv:	
  1781                           ; 1 bytes @ 0xA
  1782                           
  1783  002A                     ??___awmod:	
  1784                           ; 1 bytes @ 0xA
  1785                           
  1786  002A                     ??___lwdiv:	
  1787                           ; 1 bytes @ 0xA
  1788                           
  1789  002A                     ___lmul@multiplicand:	
  1790                           ; 1 bytes @ 0xA
  1791                           
  1792  002A                     ___lldiv@dividend:	
  1793                           ; 4 bytes @ 0xA
  1794                           
  1795                           
  1796                           ; 4 bytes @ 0xA
  1797  002A                     	ds	1
  1798  002B                     ??_FrameDecode:	
  1799  002B                     ??_PCF8583_Read_Byte:	
  1800                           ; 1 bytes @ 0xB
  1801                           
  1802  002B                     CRC16@data_tab_ptr:	
  1803                           ; 1 bytes @ 0xB
  1804                           
  1805  002B                     PCF8583_Write_Byte@address:	
  1806                           ; 1 bytes @ 0xB
  1807                           
  1808  002B                     ___awdiv@counter:	
  1809                           ; 1 bytes @ 0xB
  1810                           
  1811  002B                     ___awmod@counter:	
  1812                           ; 1 bytes @ 0xB
  1813                           
  1814  002B                     ___lwdiv@counter:	
  1815                           ; 1 bytes @ 0xB
  1816                           
  1817                           
  1818                           ; 1 bytes @ 0xB
  1819  002B                     	ds	1
  1820  002C                     CRC16@k:	
  1821  002C                     ___awdiv@sign:	
  1822                           ; 1 bytes @ 0xC
  1823                           
  1824  002C                     ___awmod@sign:	
  1825                           ; 1 bytes @ 0xC
  1826                           
  1827  002C                     ___lwdiv@quotient:	
  1828                           ; 1 bytes @ 0xC
  1829                           
  1830                           
  1831                           ; 2 bytes @ 0xC
  1832  002C                     	ds	1
  1833  002D                     CRC16@i:	
  1834  002D                     FrameDecode@DataRCV:	
  1835                           ; 1 bytes @ 0xD
  1836                           
  1837  002D                     BCD_2_DEC@bcd:	
  1838                           ; 1 bytes @ 0xD
  1839                           
  1840  002D                     PCF8583_Read_Byte@address:	
  1841                           ; 1 bytes @ 0xD
  1842                           
  1843  002D                     ___awdiv@quotient:	
  1844                           ; 1 bytes @ 0xD
  1845                           
  1846                           
  1847                           ; 2 bytes @ 0xD
  1848  002D                     	ds	1
  1849  002E                     ??___lmul:	
  1850  002E                     ??___lldiv:	
  1851                           ; 1 bytes @ 0xE
  1852                           
  1853  002E                     FrameDecode@data:	
  1854                           ; 1 bytes @ 0xE
  1855                           
  1856  002E                     PCF8583_Read_Byte@retval:	
  1857                           ; 1 bytes @ 0xE
  1858                           
  1859  002E                     CRC16@crc:	
  1860                           ; 1 bytes @ 0xE
  1861                           
  1862                           
  1863                           ; 2 bytes @ 0xE
  1864  002E                     	ds	1
  1865  002F                     ??_PCF8583_Read_Time_Date:	
  1866  002F                     ??_Display_2Dig:	
  1867                           ; 1 bytes @ 0xF
  1868                           
  1869  002F                     FrameDecode@i:	
  1870                           ; 1 bytes @ 0xF
  1871                           
  1872  002F                     ___lmul@product:	
  1873                           ; 1 bytes @ 0xF
  1874                           
  1875  002F                     ___lldiv@quotient:	
  1876                           ; 4 bytes @ 0xF
  1877                           
  1878                           
  1879                           ; 4 bytes @ 0xF
  1880  002F                     	ds	1
  1881  0030                     ??_CRC_check:	
  1882                           
  1883                           ; 1 bytes @ 0x10
  1884  0030                     	ds	1
  1885  0031                     PCF8583_Read_Time_Date@year_bits:	
  1886                           
  1887                           ; 1 bytes @ 0x11
  1888  0031                     	ds	1
  1889  0032                     PCF8583_Read_Time_Date@bcd_sec:	
  1890  0032                     Display_2Dig@data:	
  1891                           ; 1 bytes @ 0x12
  1892                           
  1893                           
  1894                           ; 1 bytes @ 0x12
  1895  0032                     	ds	1
  1896  0033                     ?_Wait_ms:	
  1897  0033                     PCF8583_Read_Time_Date@bcd_min:	
  1898                           ; 1 bytes @ 0x13
  1899                           
  1900  0033                     ___lldiv@counter:	
  1901                           ; 1 bytes @ 0x13
  1902                           
  1903  0033                     Wait_ms@time:	
  1904                           ; 1 bytes @ 0x13
  1905                           
  1906                           
  1907                           ; 2 bytes @ 0x13
  1908  0033                     	ds	1
  1909  0034                     ?_GeneratePWM:	
  1910  0034                     PCF8583_Read_Time_Date@bcd_hrs:	
  1911                           ; 1 bytes @ 0x14
  1912                           
  1913  0034                     CRC_check@crc_val:	
  1914                           ; 1 bytes @ 0x14
  1915                           
  1916  0034                     GeneratePWM@freq:	
  1917                           ; 2 bytes @ 0x14
  1918                           
  1919                           
  1920                           ; 4 bytes @ 0x14
  1921  0034                     	ds	1
  1922  0035                     ??_Wait_ms:	
  1923  0035                     PCF8583_Read_Time_Date@bcd_mon:	
  1924                           ; 1 bytes @ 0x15
  1925                           
  1926                           
  1927                           ; 1 bytes @ 0x15
  1928  0035                     	ds	1
  1929  0036                     CRC_check@DataRCV:	
  1930  0036                     PCF8583_Read_Time_Date@bcd_day:	
  1931                           ; 1 bytes @ 0x16
  1932                           
  1933                           
  1934                           ; 1 bytes @ 0x16
  1935  0036                     	ds	1
  1936  0037                     PCF8583_Read_Time_Date@year:	
  1937                           
  1938                           ; 1 bytes @ 0x17
  1939  0037                     	ds	1
  1940  0038                     ??_GeneratePWM:	
  1941  0038                     PCF8583_Read_Time_Date@time_struct_ptr:	
  1942                           ; 1 bytes @ 0x18
  1943                           
  1944                           
  1945                           ; 1 bytes @ 0x18
  1946  0038                     	ds	1
  1947  0039                     ??_Set_RTC_Button_Short:	
  1948                           
  1949                           ; 1 bytes @ 0x19
  1950  0039                     	ds	3
  1951  003C                     ??_PlayRing:	
  1952  003C                     Set_RTC_Button_Short@time:	
  1953                           ; 1 bytes @ 0x1C
  1954                           
  1955                           
  1956                           ; 6 bytes @ 0x1C
  1957  003C                     	ds	3
  1958  003F                     PlayRing@MELODY_LENGTH:	
  1959                           
  1960                           ; 1 bytes @ 0x1F
  1961  003F                     	ds	1
  1962  0040                     PlayRing@i:	
  1963                           
  1964                           ; 1 bytes @ 0x20
  1965  0040                     	ds	1
  1966  0041                     ??_CheckEvent:	
  1967  0041                     CheckEvent@DataRCV:	
  1968                           ; 1 bytes @ 0x21
  1969                           
  1970                           
  1971                           ; 1 bytes @ 0x21
  1972  0041                     	ds	1
  1973  0042                     ??_ProcessRCVData:	
  1974  0042                     ??_Key_Press:	
  1975                           ; 1 bytes @ 0x22
  1976                           
  1977  0042                     ProcessRCVData@DataRCV:	
  1978                           ; 1 bytes @ 0x22
  1979                           
  1980                           
  1981                           ; 1 bytes @ 0x22
  1982  0042                     	ds	4
  1983  0046                     Key_Press@button:	
  1984                           
  1985                           ; 1 bytes @ 0x26
  1986  0046                     	ds	1
  1987  0047                     ??_Button_Handler:	
  1988  0047                     Button_Handler@keydef:	
  1989                           ; 1 bytes @ 0x27
  1990                           
  1991                           
  1992                           ; 1 bytes @ 0x27
  1993  0047                     	ds	1
  1994  0048                     ??_main:	
  1995                           
  1996                           ; 1 bytes @ 0x28
  1997  0048                     	ds	1
  1998                           
  1999                           	psect	maintext
  2000  0C2D                     __pmaintext:	
  2001 ;;
  2002 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  2003 ;;
  2004 ;; *************** function _main *****************
  2005 ;; Defined at:
  2006 ;;		line 18 in file "main.c"
  2007 ;; Parameters:    Size  Location     Type
  2008 ;;		None
  2009 ;; Auto vars:     Size  Location     Type
  2010 ;;  keydef          6    5[BANK3 ] struct .
  2011 ;;  time            6    0        struct .
  2012 ;;  DataRCV         5    0[BANK3 ] struct .
  2013 ;; Return value:  Size  Location     Type
  2014 ;;                  1    wreg      void 
  2015 ;; Registers used:
  2016 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2017 ;; Tracked objects:
  2018 ;;		On entry : B00/0
  2019 ;;		On exit  : 0/0
  2020 ;;		Unchanged: 0/0
  2021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2022 ;;      Params:         0       0       0       0       0
  2023 ;;      Locals:         0       0       0      11       0
  2024 ;;      Temps:          0       1       0       0       0
  2025 ;;      Totals:         0       1       0      11       0
  2026 ;;Total ram usage:       12 bytes
  2027 ;; Hardware stack levels required when called:   11
  2028 ;; This function calls:
  2029 ;;		_Button_Handler
  2030 ;;		_Button_Init
  2031 ;;		_Global_Inits
  2032 ;;		_Init_I2C
  2033 ;;		_InterruptConfig
  2034 ;;		_ProcessRCVData
  2035 ;;		_UART_Init
  2036 ;; This function is called by:
  2037 ;;		Startup code after reset
  2038 ;; This function uses a non-reentrant model
  2039 ;;
  2040                           
  2041                           
  2042                           ;psect for function _main
  2043  0C2D                     _main:	
  2044  0C2D                     l4483:	
  2045                           ;incstack = 0
  2046 ;; hardware stack exceeded
  2047                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2048                           
  2049                           
  2050                           ;main.c: 20:     Global_Inits();
  2051  0C2D  120A  158A  22D4  120A  158A  	fcall	_Global_Inits
  2052                           
  2053                           ;main.c: 21:     InterruptConfig();
  2054  0C32  120A  158A  2273  120A  158A  	fcall	_InterruptConfig
  2055                           
  2056                           ;main.c: 22:     Init_I2C();
  2057  0C37  120A  158A  2235  120A  158A  	fcall	_Init_I2C
  2058                           
  2059                           ;main.c: 23:     UART_Init();
  2060  0C3C  120A  158A  2243  120A  158A  	fcall	_UART_Init
  2061  0C41                     l4485:	
  2062                           
  2063                           ;main.c: 25:     DataStruct DataRCV;;main.c: 30:     g_display_text[0]=1;
  2064  0C41  1283               	bcf	3,5	;RP0=0, select bank0
  2065  0C42  1303               	bcf	3,6	;RP1=0, select bank0
  2066  0C43  01DD               	clrf	_g_display_text
  2067  0C44  0ADD               	incf	_g_display_text,f
  2068  0C45                     l4487:	
  2069                           
  2070                           ;main.c: 31:     g_display_text[1]='f';
  2071  0C45  3066               	movlw	102
  2072  0C46  00C8               	movwf	??_main
  2073  0C47  0848               	movf	??_main,w
  2074  0C48  00DE               	movwf	_g_display_text+1
  2075  0C49                     l4489:	
  2076                           
  2077                           ;main.c: 32:     g_display_text[2]='c';
  2078  0C49  3063               	movlw	99
  2079  0C4A  00C8               	movwf	??_main
  2080  0C4B  0848               	movf	??_main,w
  2081  0C4C  00DF               	movwf	_g_display_text+2
  2082  0C4D                     l4491:	
  2083                           
  2084                           ;main.c: 33:     g_display_text[3]=4;
  2085  0C4D  3004               	movlw	4
  2086  0C4E  00C8               	movwf	??_main
  2087  0C4F  0848               	movf	??_main,w
  2088  0C50  00E0               	movwf	_g_display_text+3
  2089  0C51                     l4493:	
  2090                           
  2091                           ;main.c: 34:     g_decimal_point=0b0101;
  2092  0C51  3005               	movlw	5
  2093  0C52  00C8               	movwf	??_main
  2094  0C53  0848               	movf	??_main,w
  2095  0C54  00E3               	movwf	_g_decimal_point
  2096  0C55                     l4495:	
  2097                           
  2098                           ;main.c: 36:     KeyPointerStruct keydef;;main.c: 37:     Button_Init(&keydef);
  2099  0C55  3095               	movlw	(low (main@keydef| (0+256)))& (0+255)
  2100  0C56  120A  118A  23CC  120A  158A  	fcall	_Button_Init
  2101  0C5B                     l4497:	
  2102                           
  2103                           ;main.c: 42:     {;main.c: 43:         Button_Handler(&keydef);
  2104  0C5B  3095               	movlw	(low (main@keydef| (0+256)))& (0+255)
  2105  0C5C  120A  158A  257E  120A  158A  	fcall	_Button_Handler
  2106  0C61                     l4499:	
  2107                           
  2108                           ;main.c: 64:         ProcessRCVData(&DataRCV);
  2109  0C61  3090               	movlw	(low (main@DataRCV| (0+256)))& (0+255)
  2110  0C62  120A  158A  26F0  120A  158A  	fcall	_ProcessRCVData
  2111  0C67  2C5B               	goto	l4497
  2112  0C68  120A  118A  2810   	ljmp	start
  2113  0C6B                     __end_of_main:	
  2114                           
  2115                           	psect	text1
  2116  0A43                     __ptext1:	
  2117 ;; *************** function _UART_Init *****************
  2118 ;; Defined at:
  2119 ;;		line 9 in file "hw_uart.c"
  2120 ;; Parameters:    Size  Location     Type
  2121 ;;		None
  2122 ;; Auto vars:     Size  Location     Type
  2123 ;;		None
  2124 ;; Return value:  Size  Location     Type
  2125 ;;                  1    wreg      void 
  2126 ;; Registers used:
  2127 ;;		wreg
  2128 ;; Tracked objects:
  2129 ;;		On entry : 0/0
  2130 ;;		On exit  : 0/0
  2131 ;;		Unchanged: 0/0
  2132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2133 ;;      Params:         0       0       0       0       0
  2134 ;;      Locals:         0       0       0       0       0
  2135 ;;      Temps:          0       0       0       0       0
  2136 ;;      Totals:         0       0       0       0       0
  2137 ;;Total ram usage:        0 bytes
  2138 ;; Hardware stack levels used:    1
  2139 ;; Hardware stack levels required when called:    4
  2140 ;; This function calls:
  2141 ;;		Nothing
  2142 ;; This function is called by:
  2143 ;;		_main
  2144 ;; This function uses a non-reentrant model
  2145 ;;
  2146                           
  2147                           
  2148                           ;psect for function _UART_Init
  2149  0A43                     _UART_Init:	
  2150  0A43                     l4289:	
  2151                           ;incstack = 0
  2152                           ; Regs used in _UART_Init: [wreg]
  2153                           
  2154                           
  2155                           ;hw_uart.c: 11:     TRISC6=0;
  2156  0A43  1683               	bsf	3,5	;RP0=1, select bank1
  2157  0A44  1303               	bcf	3,6	;RP1=0, select bank1
  2158  0A45  1307               	bcf	7,6	;volatile
  2159                           
  2160                           ;hw_uart.c: 12:     RCSTAbits.SPEN=1;
  2161  0A46  1283               	bcf	3,5	;RP0=0, select bank0
  2162  0A47  1303               	bcf	3,6	;RP1=0, select bank0
  2163  0A48  1798               	bsf	24,7	;volatile
  2164                           
  2165                           ;hw_uart.c: 13:     RCSTAbits.CREN=1;
  2166  0A49  1618               	bsf	24,4	;volatile
  2167                           
  2168                           ;hw_uart.c: 14:     TXSTAbits.SYNC=0;
  2169  0A4A  1683               	bsf	3,5	;RP0=1, select bank1
  2170  0A4B  1303               	bcf	3,6	;RP1=0, select bank1
  2171  0A4C  1218               	bcf	24,4	;volatile
  2172                           
  2173                           ;hw_uart.c: 15:     TXSTAbits.TXEN=1;
  2174  0A4D  1698               	bsf	24,5	;volatile
  2175  0A4E                     l4291:	
  2176                           
  2177                           ;hw_uart.c: 16:     SPBRG=(8000000/9600)/64-1;
  2178  0A4E  300C               	movlw	12
  2179  0A4F  0099               	movwf	25	;volatile
  2180  0A50                     l45:	
  2181  0A50  0008               	return
  2182  0A51                     __end_of_UART_Init:	
  2183                           
  2184                           	psect	text2
  2185  0EF0                     __ptext2:	
  2186 ;; *************** function _ProcessRCVData *****************
  2187 ;; Defined at:
  2188 ;;		line 233 in file "manchester_decode.c"
  2189 ;; Parameters:    Size  Location     Type
  2190 ;;  DataRCV         1    wreg     PTR struct .
  2191 ;;		 -> main@DataRCV(5), 
  2192 ;; Auto vars:     Size  Location     Type
  2193 ;;  DataRCV         1   34[BANK0 ] PTR struct .
  2194 ;;		 -> main@DataRCV(5), 
  2195 ;; Return value:  Size  Location     Type
  2196 ;;                  1    wreg      void 
  2197 ;; Registers used:
  2198 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2199 ;; Tracked objects:
  2200 ;;		On entry : 0/0
  2201 ;;		On exit  : 0/0
  2202 ;;		Unchanged: 0/0
  2203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2204 ;;      Params:         0       0       0       0       0
  2205 ;;      Locals:         0       1       0       0       0
  2206 ;;      Temps:          0       0       0       0       0
  2207 ;;      Totals:         0       1       0       0       0
  2208 ;;Total ram usage:        1 bytes
  2209 ;; Hardware stack levels used:    1
  2210 ;; Hardware stack levels required when called:    8
  2211 ;; This function calls:
  2212 ;;		_CRC_check
  2213 ;;		_CheckEvent
  2214 ;;		_FrameDecode
  2215 ;;		_SendUART
  2216 ;; This function is called by:
  2217 ;;		_main
  2218 ;; This function uses a non-reentrant model
  2219 ;;
  2220                           
  2221                           
  2222                           ;psect for function _ProcessRCVData
  2223  0EF0                     _ProcessRCVData:	
  2224                           
  2225                           ;incstack = 0
  2226 ;; hardware stack exceeded
  2227                           ; Regs used in _ProcessRCVData: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2228                           ;ProcessRCVData@DataRCV stored from wreg
  2229  0EF0  1283               	bcf	3,5	;RP0=0, select bank0
  2230  0EF1  1303               	bcf	3,6	;RP1=0, select bank0
  2231  0EF2  00C2               	movwf	ProcessRCVData@DataRCV
  2232  0EF3                     l4457:	
  2233                           
  2234                           ;manchester_decode.c: 233: void ProcessRCVData(DataStruct *DataRCV);manchester_decode.c:
      +                           234: {;manchester_decode.c: 235:     if(ISR_ACK==1)
  2235  0EF3  0359               	decf	_ISR_ACK,w	;volatile
  2236  0EF4  1D03               	btfss	3,2
  2237  0EF5  2EF7               	goto	u4191
  2238  0EF6  2EF8               	goto	u4190
  2239  0EF7                     u4191:	
  2240  0EF7  2F45               	goto	l341
  2241  0EF8                     u4190:	
  2242  0EF8                     l4459:	
  2243                           
  2244                           ;manchester_decode.c: 236:     {;manchester_decode.c: 240:         if(PORTCbits.RC1 == 0
      +                          )
  2245  0EF8  1887               	btfsc	7,1	;volatile
  2246  0EF9  2EFB               	goto	u4201
  2247  0EFA  2EFC               	goto	u4200
  2248  0EFB                     u4201:	
  2249  0EFB  2F00               	goto	l4463
  2250  0EFC                     u4200:	
  2251  0EFC                     l4461:	
  2252                           
  2253                           ;manchester_decode.c: 241:         {;manchester_decode.c: 242:             Timer1=80;
  2254  0EFC  3050               	movlw	80
  2255  0EFD  00CD               	movwf	_Timer1	;volatile
  2256  0EFE  3000               	movlw	0
  2257  0EFF  00CE               	movwf	_Timer1+1	;volatile
  2258  0F00                     l4463:	
  2259                           
  2260                           ;manchester_decode.c: 245:         if(Timer1==0)
  2261  0F00  084D               	movf	_Timer1,w	;volatile
  2262  0F01  044E               	iorwf	_Timer1+1,w	;volatile
  2263  0F02  1D03               	btfss	3,2
  2264  0F03  2F05               	goto	u4211
  2265  0F04  2F06               	goto	u4210
  2266  0F05                     u4211:	
  2267  0F05  2F45               	goto	l341
  2268  0F06                     u4210:	
  2269  0F06  2F36               	goto	l4479
  2270  0F07                     l4467:	
  2271                           
  2272                           ;manchester_decode.c: 248:             {;manchester_decode.c: 249:                 if(Da
      +                          taRCV->RCV_Frame)
  2273  0F07  0842               	movf	ProcessRCVData@DataRCV,w
  2274  0F08  3E04               	addlw	4
  2275  0F09  0084               	movwf	4
  2276  0F0A  1783               	bsf	3,7	;select IRP bank2
  2277  0F0B  0800               	movf	0,w
  2278  0F0C  1903               	btfsc	3,2
  2279  0F0D  2F0F               	goto	u4221
  2280  0F0E  2F10               	goto	u4220
  2281  0F0F                     u4221:	
  2282  0F0F  2F36               	goto	l4479
  2283  0F10                     u4220:	
  2284  0F10                     l4469:	
  2285                           
  2286                           ;manchester_decode.c: 250:                 {;manchester_decode.c: 251:                  
      +                             if(CRC_check(DataRCV))
  2287  0F10  0842               	movf	ProcessRCVData@DataRCV,w
  2288  0F11  120A  158A  24F3  120A  158A  	fcall	_CRC_check
  2289  0F16  3A00               	xorlw	0
  2290  0F17  1903               	skipnz
  2291  0F18  2F1A               	goto	u4231
  2292  0F19  2F1B               	goto	u4230
  2293  0F1A                     u4231:	
  2294  0F1A  2F29               	goto	l4475
  2295  0F1B                     u4230:	
  2296  0F1B                     l4471:	
  2297                           
  2298                           ;manchester_decode.c: 252:                     {;manchester_decode.c: 254:              
      +                                     if(CheckEvent(DataRCV))
  2299  0F1B  1283               	bcf	3,5	;RP0=0, select bank0
  2300  0F1C  1303               	bcf	3,6	;RP1=0, select bank0
  2301  0F1D  0842               	movf	ProcessRCVData@DataRCV,w
  2302  0F1E  120A  118A  25BD  120A  158A  	fcall	_CheckEvent
  2303  0F23  3A00               	xorlw	0
  2304  0F24  1903               	skipnz
  2305  0F25  2F27               	goto	u4241
  2306  0F26  2F28               	goto	u4240
  2307  0F27                     u4241:	
  2308  0F27  2F2F               	goto	l4477
  2309  0F28                     u4240:	
  2310  0F28  2F45               	goto	l341
  2311  0F29                     l4475:	
  2312                           
  2313                           ;manchester_decode.c: 259:                     {;manchester_decode.c: 260:              
      +                                     SendUART('C');
  2314  0F29  3043               	movlw	67
  2315  0F2A  120A  158A  2227  120A  158A  	fcall	_SendUART
  2316  0F2F                     l4477:	
  2317                           
  2318                           ;manchester_decode.c: 263:                     DataRCV->RCV_Frame=0;
  2319  0F2F  1283               	bcf	3,5	;RP0=0, select bank0
  2320  0F30  1303               	bcf	3,6	;RP1=0, select bank0
  2321  0F31  0842               	movf	ProcessRCVData@DataRCV,w
  2322  0F32  3E04               	addlw	4
  2323  0F33  0084               	movwf	4
  2324  0F34  1783               	bsf	3,7	;select IRP bank2
  2325  0F35  0180               	clrf	0
  2326  0F36                     l4479:	
  2327                           
  2328                           ;manchester_decode.c: 247:             while(FrameDecode(DataRCV)!=0xFF)
  2329  0F36  0842               	movf	ProcessRCVData@DataRCV,w
  2330  0F37  120A  118A  26C1  120A  158A  	fcall	_FrameDecode
  2331  0F3C  1283               	bcf	3,5	;RP0=0, select bank0
  2332  0F3D  1303               	bcf	3,6	;RP1=0, select bank0
  2333  0F3E  0A29               	incf	?_FrameDecode,w
  2334  0F3F  042A               	iorwf	?_FrameDecode+1,w
  2335  0F40  1D03               	btfss	3,2
  2336  0F41  2F43               	goto	u4251
  2337  0F42  2F44               	goto	u4250
  2338  0F43                     u4251:	
  2339  0F43  2F07               	goto	l4467
  2340  0F44                     u4250:	
  2341  0F44                     l4481:	
  2342                           
  2343                           ;manchester_decode.c: 266:             ISR_ACK=0;
  2344  0F44  01D9               	clrf	_ISR_ACK	;volatile
  2345  0F45                     l341:	
  2346  0F45  0008               	return
  2347  0F46                     __end_of_ProcessRCVData:	
  2348                           
  2349                           	psect	text3
  2350  05BD                     __ptext3:	
  2351 ;; *************** function _CheckEvent *****************
  2352 ;; Defined at:
  2353 ;;		line 187 in file "manchester_decode.c"
  2354 ;; Parameters:    Size  Location     Type
  2355 ;;  DataRCV         1    wreg     PTR struct .
  2356 ;;		 -> main@DataRCV(5), 
  2357 ;; Auto vars:     Size  Location     Type
  2358 ;;  DataRCV         1   33[BANK0 ] PTR struct .
  2359 ;;		 -> main@DataRCV(5), 
  2360 ;; Return value:  Size  Location     Type
  2361 ;;                  1    wreg      unsigned char 
  2362 ;; Registers used:
  2363 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2364 ;; Tracked objects:
  2365 ;;		On entry : 0/0
  2366 ;;		On exit  : 0/0
  2367 ;;		Unchanged: 0/0
  2368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2369 ;;      Params:         0       0       0       0       0
  2370 ;;      Locals:         0       1       0       0       0
  2371 ;;      Temps:          0       0       0       0       0
  2372 ;;      Totals:         0       1       0       0       0
  2373 ;;Total ram usage:        1 bytes
  2374 ;; Hardware stack levels used:    1
  2375 ;; Hardware stack levels required when called:    7
  2376 ;; This function calls:
  2377 ;;		_FrameDecode
  2378 ;;		_PlayRing
  2379 ;;		_SendUART
  2380 ;; This function is called by:
  2381 ;;		_ProcessRCVData
  2382 ;; This function uses a non-reentrant model
  2383 ;;
  2384                           
  2385                           
  2386                           ;psect for function _CheckEvent
  2387  05BD                     _CheckEvent:	
  2388                           
  2389                           ;incstack = 0
  2390 ;; hardware stack exceeded
  2391                           ; Regs used in _CheckEvent: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2392                           ;CheckEvent@DataRCV stored from wreg
  2393  05BD  1283               	bcf	3,5	;RP0=0, select bank0
  2394  05BE  1303               	bcf	3,6	;RP1=0, select bank0
  2395  05BF  00C1               	movwf	CheckEvent@DataRCV
  2396  05C0                     l4203:	
  2397                           
  2398                           ;manchester_decode.c: 187: unsigned char CheckEvent(DataStruct *DataRCV);manchester_deco
      +                          de.c: 188: {;manchester_decode.c: 189:     static char a;;manchester_decode.c: 191:     
      +                          if(DataRCV->frame[0]=='G' && DataRCV->frame[1]=='0')
  2399  05C0  0841               	movf	CheckEvent@DataRCV,w
  2400  05C1  0084               	movwf	4
  2401  05C2  3047               	movlw	71
  2402  05C3  1783               	bsf	3,7	;select IRP bank2
  2403  05C4  0600               	xorwf	0,w
  2404  05C5  1D03               	btfss	3,2
  2405  05C6  2DC8               	goto	u3991
  2406  05C7  2DC9               	goto	u3990
  2407  05C8                     u3991:	
  2408  05C8  2DEF               	goto	l4219
  2409  05C9                     u3990:	
  2410  05C9                     l4205:	
  2411  05C9  0A41               	incf	CheckEvent@DataRCV,w
  2412  05CA  0084               	movwf	4
  2413  05CB  3030               	movlw	48
  2414  05CC  0600               	xorwf	0,w
  2415  05CD  1D03               	btfss	3,2
  2416  05CE  2DD0               	goto	u4001
  2417  05CF  2DD1               	goto	u4000
  2418  05D0                     u4001:	
  2419  05D0  2DEF               	goto	l4219
  2420  05D1                     u4000:	
  2421  05D1                     l4207:	
  2422                           
  2423                           ;manchester_decode.c: 192:     {;manchester_decode.c: 193:         PlayRing(1);
  2424  05D1  3001               	movlw	1
  2425  05D2  120A  158A  27A1  120A  118A  	fcall	_PlayRing
  2426  05D7                     l4209:	
  2427                           
  2428                           ;manchester_decode.c: 194:         SendUART('G');
  2429  05D7  3047               	movlw	71
  2430  05D8  120A  158A  2227  120A  118A  	fcall	_SendUART
  2431  05DD                     l4211:	
  2432                           ;manchester_decode.c: 195:         while(FrameDecode(DataRCV)!=0xFF);
  2433                           
  2434  05DD  1283               	bcf	3,5	;RP0=0, select bank0
  2435  05DE  1303               	bcf	3,6	;RP1=0, select bank0
  2436  05DF  0841               	movf	CheckEvent@DataRCV,w
  2437  05E0  120A  118A  26C1  120A  118A  	fcall	_FrameDecode
  2438  05E5  1283               	bcf	3,5	;RP0=0, select bank0
  2439  05E6  1303               	bcf	3,6	;RP1=0, select bank0
  2440  05E7  0A29               	incf	?_FrameDecode,w
  2441  05E8  042A               	iorwf	?_FrameDecode+1,w
  2442  05E9  1D03               	btfss	3,2
  2443  05EA  2DEC               	goto	u4011
  2444  05EB  2DED               	goto	u4010
  2445  05EC                     u4011:	
  2446  05EC  2DDD               	goto	l4211
  2447  05ED                     u4010:	
  2448  05ED                     l4213:	
  2449                           
  2450                           ;manchester_decode.c: 196:         return 1;
  2451  05ED  3001               	movlw	1
  2452  05EE  2E49               	goto	l318
  2453  05EF                     l4219:	
  2454  05EF  0841               	movf	CheckEvent@DataRCV,w
  2455  05F0  0084               	movwf	4
  2456  05F1  3057               	movlw	87
  2457  05F2  0600               	xorwf	0,w
  2458  05F3  1D03               	btfss	3,2
  2459  05F4  2DF6               	goto	u4021
  2460  05F5  2DF7               	goto	u4020
  2461  05F6                     u4021:	
  2462  05F6  2E21               	goto	l4239
  2463  05F7                     u4020:	
  2464  05F7                     l4221:	
  2465  05F7  0A41               	incf	CheckEvent@DataRCV,w
  2466  05F8  0084               	movwf	4
  2467  05F9  3030               	movlw	48
  2468  05FA  0600               	xorwf	0,w
  2469  05FB  1D03               	btfss	3,2
  2470  05FC  2DFE               	goto	u4031
  2471  05FD  2DFF               	goto	u4030
  2472  05FE                     u4031:	
  2473  05FE  2E21               	goto	l4239
  2474  05FF                     u4030:	
  2475  05FF                     l4223:	
  2476                           
  2477                           ;manchester_decode.c: 198:     {;manchester_decode.c: 200:         SendUART('W');
  2478  05FF  3057               	movlw	87
  2479  0600  120A  158A  2227  120A  118A  	fcall	_SendUART
  2480  0605                     l4225:	
  2481                           
  2482                           ;manchester_decode.c: 201:         if(a)
  2483  0605  1283               	bcf	3,5	;RP0=0, select bank0
  2484  0606  1303               	bcf	3,6	;RP1=0, select bank0
  2485  0607  0851               	movf	CheckEvent@a,w
  2486  0608  1903               	btfsc	3,2
  2487  0609  2E0B               	goto	u4041
  2488  060A  2E0C               	goto	u4040
  2489  060B                     u4041:	
  2490  060B  2E0F               	goto	l321
  2491  060C                     u4040:	
  2492  060C                     l4227:	
  2493                           
  2494                           ;manchester_decode.c: 202:         {;manchester_decode.c: 203:             PORTCbits.RC3
      +                          =1;
  2495  060C  1587               	bsf	7,3	;volatile
  2496  060D                     l4229:	
  2497                           
  2498                           ;manchester_decode.c: 204:             a=0;
  2499  060D  01D1               	clrf	CheckEvent@a
  2500                           
  2501                           ;manchester_decode.c: 205:         }else
  2502  060E  2E12               	goto	l4231
  2503  060F                     l321:	
  2504                           
  2505                           ;manchester_decode.c: 206:         {;manchester_decode.c: 207:              PORTCbits.RC
      +                          3=0;
  2506  060F  1187               	bcf	7,3	;volatile
  2507                           
  2508                           ;manchester_decode.c: 208:              a=1;
  2509  0610  01D1               	clrf	CheckEvent@a
  2510  0611  0AD1               	incf	CheckEvent@a,f
  2511  0612                     l4231:	
  2512  0612  0841               	movf	CheckEvent@DataRCV,w
  2513  0613  120A  118A  26C1  120A  118A  	fcall	_FrameDecode
  2514  0618  1283               	bcf	3,5	;RP0=0, select bank0
  2515  0619  1303               	bcf	3,6	;RP1=0, select bank0
  2516  061A  0A29               	incf	?_FrameDecode,w
  2517  061B  042A               	iorwf	?_FrameDecode+1,w
  2518  061C  1D03               	btfss	3,2
  2519  061D  2E1F               	goto	u4051
  2520  061E  2E20               	goto	u4050
  2521  061F                     u4051:	
  2522  061F  2E12               	goto	l4231
  2523  0620                     u4050:	
  2524  0620  2DED               	goto	l4213
  2525  0621                     l4239:	
  2526  0621  0841               	movf	CheckEvent@DataRCV,w
  2527  0622  0084               	movwf	4
  2528  0623  3057               	movlw	87
  2529  0624  0600               	xorwf	0,w
  2530  0625  1D03               	btfss	3,2
  2531  0626  2E28               	goto	u4061
  2532  0627  2E29               	goto	u4060
  2533  0628                     u4061:	
  2534  0628  2E48               	goto	l4251
  2535  0629                     u4060:	
  2536  0629                     l4241:	
  2537  0629  0A41               	incf	CheckEvent@DataRCV,w
  2538  062A  0084               	movwf	4
  2539  062B  3042               	movlw	66
  2540  062C  0600               	xorwf	0,w
  2541  062D  1D03               	btfss	3,2
  2542  062E  2E30               	goto	u4071
  2543  062F  2E31               	goto	u4070
  2544  0630                     u4071:	
  2545  0630  2E48               	goto	l4251
  2546  0631                     u4070:	
  2547  0631                     l4243:	
  2548                           
  2549                           ;manchester_decode.c: 214:     {;manchester_decode.c: 216:         SendUART('B');
  2550  0631  3042               	movlw	66
  2551  0632  120A  158A  2227  120A  118A  	fcall	_SendUART
  2552  0637                     l4245:	
  2553                           ;manchester_decode.c: 217:         while(FrameDecode(DataRCV)!=0xFF);
  2554                           
  2555  0637  1283               	bcf	3,5	;RP0=0, select bank0
  2556  0638  1303               	bcf	3,6	;RP1=0, select bank0
  2557  0639  0841               	movf	CheckEvent@DataRCV,w
  2558  063A  120A  118A  26C1  120A  118A  	fcall	_FrameDecode
  2559  063F  1283               	bcf	3,5	;RP0=0, select bank0
  2560  0640  1303               	bcf	3,6	;RP1=0, select bank0
  2561  0641  0A29               	incf	?_FrameDecode,w
  2562  0642  042A               	iorwf	?_FrameDecode+1,w
  2563  0643  1D03               	btfss	3,2
  2564  0644  2E46               	goto	u4081
  2565  0645  2E47               	goto	u4080
  2566  0646                     u4081:	
  2567  0646  2E37               	goto	l4245
  2568  0647                     u4080:	
  2569  0647  2DED               	goto	l4213
  2570  0648                     l4251:	
  2571                           
  2572                           ;manchester_decode.c: 221:     return 0;
  2573  0648  3000               	movlw	0
  2574  0649                     l318:	
  2575  0649  0008               	return
  2576  064A                     __end_of_CheckEvent:	
  2577                           
  2578                           	psect	text4
  2579  0FA1                     __ptext4:	
  2580 ;; *************** function _PlayRing *****************
  2581 ;; Defined at:
  2582 ;;		line 51 in file "melody.c"
  2583 ;; Parameters:    Size  Location     Type
  2584 ;;  diode           1    wreg     unsigned char 
  2585 ;; Auto vars:     Size  Location     Type
  2586 ;;  diode           1    0[COMMON] unsigned char 
  2587 ;;  i               1   32[BANK0 ] unsigned char 
  2588 ;;  MELODY_LENGT    1   31[BANK0 ] unsigned char 
  2589 ;; Return value:  Size  Location     Type
  2590 ;;                  1    wreg      void 
  2591 ;; Registers used:
  2592 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2593 ;; Tracked objects:
  2594 ;;		On entry : 0/0
  2595 ;;		On exit  : 0/0
  2596 ;;		Unchanged: 0/0
  2597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2598 ;;      Params:         0       0       0       0       0
  2599 ;;      Locals:         0       2       0       0       0
  2600 ;;      Temps:          0       3       0       0       0
  2601 ;;      Totals:         0       5       0       0       0
  2602 ;;Total ram usage:        5 bytes
  2603 ;; Hardware stack levels used:    1
  2604 ;; Hardware stack levels required when called:    6
  2605 ;; This function calls:
  2606 ;;		_GeneratePWM
  2607 ;;		_Init_CaptureMode
  2608 ;;		_Init_CompareMode
  2609 ;;		_Wait_ms
  2610 ;;		___lwdiv
  2611 ;; This function is called by:
  2612 ;;		_CheckEvent
  2613 ;; This function uses a non-reentrant model
  2614 ;;
  2615                           
  2616                           
  2617                           ;psect for function _PlayRing
  2618  0FA1                     _PlayRing:	
  2619  0FA1                     l4151:	
  2620                           ;incstack = 0
  2621 ;; hardware stack exceeded
  2622                           ; Regs used in _PlayRing: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2623                           
  2624                           
  2625                           ;melody.c: 51:  void PlayRing(unsigned char diode);melody.c: 52:  {;melody.c: 54:      I
      +                          nit_CompareMode();
  2626  0FA1  120A  158A  2262  120A  158A  	fcall	_Init_CompareMode
  2627  0FA6                     l4153:	
  2628                           
  2629                           ;melody.c: 56:     unsigned int const melody[] = {659, 523, 587, 392, 1, 392, 587, 659, 
      +                          523};;melody.c: 57:     unsigned char const beats[] = {4, 4, 4, 2, 64, 4, 4, 4, 2};;melo
      +                          dy.c: 58:     const unsigned int tempo=2000;;melody.c: 60:     unsigned char MELODY_LENG
      +                          TH = sizeof(melody) / sizeof(melody[0]);
  2630  0FA6  3009               	movlw	9
  2631  0FA7  1283               	bcf	3,5	;RP0=0, select bank0
  2632  0FA8  1303               	bcf	3,6	;RP1=0, select bank0
  2633  0FA9  00BC               	movwf	??_PlayRing
  2634  0FAA  083C               	movf	??_PlayRing,w
  2635  0FAB  00BF               	movwf	PlayRing@MELODY_LENGTH
  2636  0FAC                     l4155:	
  2637                           
  2638                           ;melody.c: 62:     for (unsigned char i=0; i<MELODY_LENGTH; i++)
  2639  0FAC  01C0               	clrf	PlayRing@i
  2640  0FAD  2FF4               	goto	l4163
  2641  0FAE                     l4157:	
  2642                           
  2643                           ;melody.c: 63:     {;melody.c: 64:         GeneratePWM(melody[i]);
  2644  0FAE  0840               	movf	PlayRing@i,w
  2645  0FAF  00BC               	movwf	??_PlayRing
  2646  0FB0  073C               	addwf	??_PlayRing,w
  2647  0FB1  3E01               	addlw	low ((PlayRing@melody-__stringbase)| (0+32768))
  2648  0FB2  0084               	movwf	4
  2649  0FB3  120A  158A  2000  120A  158A  	fcall	stringdir
  2650  0FB8  00BD               	movwf	??_PlayRing+1
  2651  0FB9  120A  158A  2000  120A  158A  	fcall	stringdir
  2652  0FBE  00BE               	movwf	??_PlayRing+2
  2653  0FBF  083D               	movf	??_PlayRing+1,w
  2654  0FC0  00B4               	movwf	GeneratePWM@freq
  2655  0FC1  083E               	movf	??_PlayRing+2,w
  2656  0FC2  00B5               	movwf	GeneratePWM@freq+1
  2657  0FC3  01B6               	clrf	GeneratePWM@freq+2
  2658  0FC4  01B7               	clrf	GeneratePWM@freq+3
  2659  0FC5  120A  158A  22F9  120A  158A  	fcall	_GeneratePWM
  2660  0FCA                     l4159:	
  2661                           
  2662                           ;melody.c: 65:         Wait_ms(tempo/beats[i]);
  2663  0FCA  1283               	bcf	3,5	;RP0=0, select bank0
  2664  0FCB  1303               	bcf	3,6	;RP1=0, select bank0
  2665  0FCC  0840               	movf	PlayRing@i,w
  2666  0FCD  3E1B               	addlw	low ((PlayRing@beats-__stringbase)| (0+32768))
  2667  0FCE  0084               	movwf	4
  2668  0FCF  120A  158A  2000  120A  158A  	fcall	stringdir
  2669  0FD4  00BC               	movwf	??_PlayRing
  2670  0FD5  01BD               	clrf	??_PlayRing+1
  2671  0FD6  083C               	movf	??_PlayRing,w
  2672  0FD7  00A6               	movwf	___lwdiv@divisor
  2673  0FD8  083D               	movf	??_PlayRing+1,w
  2674  0FD9  00A7               	movwf	___lwdiv@divisor+1
  2675  0FDA  30D0               	movlw	208
  2676  0FDB  00A8               	movwf	___lwdiv@dividend
  2677  0FDC  3007               	movlw	7
  2678  0FDD  00A9               	movwf	___lwdiv@dividend+1
  2679  0FDE  120A  158A  2538  120A  158A  	fcall	___lwdiv
  2680  0FE3  1283               	bcf	3,5	;RP0=0, select bank0
  2681  0FE4  1303               	bcf	3,6	;RP1=0, select bank0
  2682  0FE5  0827               	movf	?___lwdiv+1,w
  2683  0FE6  00B4               	movwf	Wait_ms@time+1
  2684  0FE7  0826               	movf	?___lwdiv,w
  2685  0FE8  00B3               	movwf	Wait_ms@time
  2686  0FE9  120A  158A  2388  120A  158A  	fcall	_Wait_ms
  2687  0FEE                     l4161:	
  2688                           
  2689                           ;melody.c: 66:     }
  2690  0FEE  3001               	movlw	1
  2691  0FEF  1283               	bcf	3,5	;RP0=0, select bank0
  2692  0FF0  1303               	bcf	3,6	;RP1=0, select bank0
  2693  0FF1  00BC               	movwf	??_PlayRing
  2694  0FF2  083C               	movf	??_PlayRing,w
  2695  0FF3  07C0               	addwf	PlayRing@i,f
  2696  0FF4                     l4163:	
  2697  0FF4  083F               	movf	PlayRing@MELODY_LENGTH,w
  2698  0FF5  0240               	subwf	PlayRing@i,w
  2699  0FF6  1C03               	skipc
  2700  0FF7  2FF9               	goto	u3961
  2701  0FF8  2FFA               	goto	u3960
  2702  0FF9                     u3961:	
  2703  0FF9  2FAE               	goto	l4157
  2704  0FFA                     u3960:	
  2705  0FFA                     l4165:	
  2706                           
  2707                           ;melody.c: 68:     Init_CaptureMode();
  2708  0FFA  120A  158A  2251  120A  158A  	fcall	_Init_CaptureMode
  2709  0FFF                     l394:	
  2710  0FFF  0008               	return
  2711  1000                     __end_of_PlayRing:	
  2712                           
  2713                           	psect	text5
  2714  0D38                     __ptext5:	
  2715 ;; *************** function ___lwdiv *****************
  2716 ;; Defined at:
  2717 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/lwdiv.c"
  2718 ;; Parameters:    Size  Location     Type
  2719 ;;  divisor         2    6[BANK0 ] unsigned int 
  2720 ;;  dividend        2    8[BANK0 ] unsigned int 
  2721 ;; Auto vars:     Size  Location     Type
  2722 ;;  quotient        2   12[BANK0 ] unsigned int 
  2723 ;;  counter         1   11[BANK0 ] unsigned char 
  2724 ;; Return value:  Size  Location     Type
  2725 ;;                  2    6[BANK0 ] unsigned int 
  2726 ;; Registers used:
  2727 ;;		wreg, status,2, status,0
  2728 ;; Tracked objects:
  2729 ;;		On entry : 0/0
  2730 ;;		On exit  : 0/0
  2731 ;;		Unchanged: 0/0
  2732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2733 ;;      Params:         0       4       0       0       0
  2734 ;;      Locals:         0       3       0       0       0
  2735 ;;      Temps:          0       1       0       0       0
  2736 ;;      Totals:         0       8       0       0       0
  2737 ;;Total ram usage:        8 bytes
  2738 ;; Hardware stack levels used:    1
  2739 ;; Hardware stack levels required when called:    4
  2740 ;; This function calls:
  2741 ;;		Nothing
  2742 ;; This function is called by:
  2743 ;;		_PlayRing
  2744 ;; This function uses a non-reentrant model
  2745 ;;
  2746                           
  2747                           
  2748                           ;psect for function ___lwdiv
  2749  0D38                     ___lwdiv:	
  2750  0D38                     l4053:	
  2751                           ;incstack = 0
  2752                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2753                           
  2754  0D38  1283               	bcf	3,5	;RP0=0, select bank0
  2755  0D39  1303               	bcf	3,6	;RP1=0, select bank0
  2756  0D3A  01AC               	clrf	___lwdiv@quotient
  2757  0D3B  01AD               	clrf	___lwdiv@quotient+1
  2758  0D3C                     l4055:	
  2759  0D3C  0826               	movf	___lwdiv@divisor,w
  2760  0D3D  0427               	iorwf	___lwdiv@divisor+1,w
  2761  0D3E  1903               	btfsc	3,2
  2762  0D3F  2D41               	goto	u3781
  2763  0D40  2D42               	goto	u3780
  2764  0D41                     u3781:	
  2765  0D41  2D79               	goto	l4075
  2766  0D42                     u3780:	
  2767  0D42                     l4057:	
  2768  0D42  01AB               	clrf	___lwdiv@counter
  2769  0D43  0AAB               	incf	___lwdiv@counter,f
  2770  0D44  2D50               	goto	l4063
  2771  0D45                     l4059:	
  2772  0D45  3001               	movlw	1
  2773  0D46                     u3795:	
  2774  0D46  1003               	clrc
  2775  0D47  0DA6               	rlf	___lwdiv@divisor,f
  2776  0D48  0DA7               	rlf	___lwdiv@divisor+1,f
  2777  0D49  3EFF               	addlw	-1
  2778  0D4A  1D03               	skipz
  2779  0D4B  2D46               	goto	u3795
  2780  0D4C                     l4061:	
  2781  0D4C  3001               	movlw	1
  2782  0D4D  00AA               	movwf	??___lwdiv
  2783  0D4E  082A               	movf	??___lwdiv,w
  2784  0D4F  07AB               	addwf	___lwdiv@counter,f
  2785  0D50                     l4063:	
  2786  0D50  1FA7               	btfss	___lwdiv@divisor+1,7
  2787  0D51  2D53               	goto	u3801
  2788  0D52  2D54               	goto	u3800
  2789  0D53                     u3801:	
  2790  0D53  2D45               	goto	l4059
  2791  0D54                     u3800:	
  2792  0D54                     l4065:	
  2793  0D54  3001               	movlw	1
  2794  0D55                     u3815:	
  2795  0D55  1003               	clrc
  2796  0D56  0DAC               	rlf	___lwdiv@quotient,f
  2797  0D57  0DAD               	rlf	___lwdiv@quotient+1,f
  2798  0D58  3EFF               	addlw	-1
  2799  0D59  1D03               	skipz
  2800  0D5A  2D55               	goto	u3815
  2801  0D5B  0827               	movf	___lwdiv@divisor+1,w
  2802  0D5C  0229               	subwf	___lwdiv@dividend+1,w
  2803  0D5D  1D03               	skipz
  2804  0D5E  2D61               	goto	u3825
  2805  0D5F  0826               	movf	___lwdiv@divisor,w
  2806  0D60  0228               	subwf	___lwdiv@dividend,w
  2807  0D61                     u3825:	
  2808  0D61  1C03               	skipc
  2809  0D62  2D64               	goto	u3821
  2810  0D63  2D65               	goto	u3820
  2811  0D64                     u3821:	
  2812  0D64  2D6C               	goto	l4071
  2813  0D65                     u3820:	
  2814  0D65                     l4067:	
  2815  0D65  0826               	movf	___lwdiv@divisor,w
  2816  0D66  02A8               	subwf	___lwdiv@dividend,f
  2817  0D67  0827               	movf	___lwdiv@divisor+1,w
  2818  0D68  1C03               	skipc
  2819  0D69  03A9               	decf	___lwdiv@dividend+1,f
  2820  0D6A  02A9               	subwf	___lwdiv@dividend+1,f
  2821  0D6B                     l4069:	
  2822  0D6B  142C               	bsf	___lwdiv@quotient,0
  2823  0D6C                     l4071:	
  2824  0D6C  3001               	movlw	1
  2825  0D6D                     u3835:	
  2826  0D6D  1003               	clrc
  2827  0D6E  0CA7               	rrf	___lwdiv@divisor+1,f
  2828  0D6F  0CA6               	rrf	___lwdiv@divisor,f
  2829  0D70  3EFF               	addlw	-1
  2830  0D71  1D03               	skipz
  2831  0D72  2D6D               	goto	u3835
  2832  0D73                     l4073:	
  2833  0D73  3001               	movlw	1
  2834  0D74  02AB               	subwf	___lwdiv@counter,f
  2835  0D75  1D03               	btfss	3,2
  2836  0D76  2D78               	goto	u3841
  2837  0D77  2D79               	goto	u3840
  2838  0D78                     u3841:	
  2839  0D78  2D54               	goto	l4065
  2840  0D79                     u3840:	
  2841  0D79                     l4075:	
  2842  0D79  082D               	movf	___lwdiv@quotient+1,w
  2843  0D7A  00A7               	movwf	?___lwdiv+1
  2844  0D7B  082C               	movf	___lwdiv@quotient,w
  2845  0D7C  00A6               	movwf	?___lwdiv
  2846  0D7D                     l1035:	
  2847  0D7D  0008               	return
  2848  0D7E                     __end_of___lwdiv:	
  2849                           
  2850                           	psect	text6
  2851  0B88                     __ptext6:	
  2852 ;; *************** function _Wait_ms *****************
  2853 ;; Defined at:
  2854 ;;		line 22 in file "melody.c"
  2855 ;; Parameters:    Size  Location     Type
  2856 ;;  time            2   19[BANK0 ] unsigned int 
  2857 ;; Auto vars:     Size  Location     Type
  2858 ;;		None
  2859 ;; Return value:  Size  Location     Type
  2860 ;;                  1    wreg      void 
  2861 ;; Registers used:
  2862 ;;		wreg, status,2, status,0, pclath, cstack
  2863 ;; Tracked objects:
  2864 ;;		On entry : 0/0
  2865 ;;		On exit  : 0/0
  2866 ;;		Unchanged: 0/0
  2867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2868 ;;      Params:         0       2       0       0       0
  2869 ;;      Locals:         0       0       0       0       0
  2870 ;;      Temps:          0       4       0       0       0
  2871 ;;      Totals:         0       6       0       0       0
  2872 ;;Total ram usage:        6 bytes
  2873 ;; Hardware stack levels used:    1
  2874 ;; Hardware stack levels required when called:    5
  2875 ;; This function calls:
  2876 ;;		___lmul
  2877 ;; This function is called by:
  2878 ;;		_PlayRing
  2879 ;; This function uses a non-reentrant model
  2880 ;;
  2881                           
  2882                           
  2883                           ;psect for function _Wait_ms
  2884  0B88                     _Wait_ms:	
  2885  0B88                     l3993:	
  2886                           ;incstack = 0
  2887 ;; hardware stack exceeded
  2888                           ; Regs used in _Wait_ms: [wreg+status,2+status,0+pclath+cstack]
  2889                           
  2890                           
  2891                           ;melody.c: 22: void Wait_ms(unsigned int time);melody.c: 23: {;melody.c: 24:     Timer1=
      +                          (125*(unsigned long int)time)/32;
  2892  0B88  1283               	bcf	3,5	;RP0=0, select bank0
  2893  0B89  1303               	bcf	3,6	;RP1=0, select bank0
  2894  0B8A  0833               	movf	Wait_ms@time,w
  2895  0B8B  00A6               	movwf	___lmul@multiplier
  2896  0B8C  0834               	movf	Wait_ms@time+1,w
  2897  0B8D  00A7               	movwf	___lmul@multiplier+1
  2898  0B8E  01A8               	clrf	___lmul@multiplier+2
  2899  0B8F  01A9               	clrf	___lmul@multiplier+3
  2900  0B90  3000               	movlw	0
  2901  0B91  00AD               	movwf	___lmul@multiplicand+3
  2902  0B92  3000               	movlw	0
  2903  0B93  00AC               	movwf	___lmul@multiplicand+2
  2904  0B94  3000               	movlw	0
  2905  0B95  00AB               	movwf	___lmul@multiplicand+1
  2906  0B96  307D               	movlw	125
  2907  0B97  00AA               	movwf	___lmul@multiplicand
  2908  0B98  120A  158A  25C6  120A  158A  	fcall	___lmul
  2909  0B9D  1283               	bcf	3,5	;RP0=0, select bank0
  2910  0B9E  1303               	bcf	3,6	;RP1=0, select bank0
  2911  0B9F  0826               	movf	?___lmul,w
  2912  0BA0  00B5               	movwf	??_Wait_ms
  2913  0BA1  0827               	movf	?___lmul+1,w
  2914  0BA2  00B6               	movwf	??_Wait_ms+1
  2915  0BA3  0828               	movf	?___lmul+2,w
  2916  0BA4  00B7               	movwf	??_Wait_ms+2
  2917  0BA5  0829               	movf	?___lmul+3,w
  2918  0BA6  00B8               	movwf	??_Wait_ms+3
  2919  0BA7  3005               	movlw	5
  2920  0BA8                     u3735:	
  2921  0BA8  1003               	clrc
  2922  0BA9  0CB8               	rrf	??_Wait_ms+3,f
  2923  0BAA  0CB7               	rrf	??_Wait_ms+2,f
  2924  0BAB  0CB6               	rrf	??_Wait_ms+1,f
  2925  0BAC  0CB5               	rrf	??_Wait_ms,f
  2926  0BAD                     u3730:	
  2927  0BAD  3EFF               	addlw	-1
  2928  0BAE  1D03               	skipz
  2929  0BAF  2BA8               	goto	u3735
  2930  0BB0  0836               	movf	??_Wait_ms+1,w
  2931  0BB1  00CE               	movwf	_Timer1+1	;volatile
  2932  0BB2  0835               	movf	??_Wait_ms,w
  2933  0BB3  00CD               	movwf	_Timer1	;volatile
  2934  0BB4                     l3995:	
  2935                           ;melody.c: 25:     while(Timer1);
  2936                           
  2937  0BB4  084D               	movf	_Timer1,w	;volatile
  2938  0BB5  044E               	iorwf	_Timer1+1,w	;volatile
  2939  0BB6  1D03               	btfss	3,2
  2940  0BB7  2BB9               	goto	u3741
  2941  0BB8  2BBA               	goto	u3740
  2942  0BB9                     u3741:	
  2943  0BB9  2BB4               	goto	l3995
  2944  0BBA                     u3740:	
  2945  0BBA                     l373:	
  2946  0BBA  0008               	return
  2947  0BBB                     __end_of_Wait_ms:	
  2948                           
  2949                           	psect	text7
  2950  0DC6                     __ptext7:	
  2951 ;; *************** function ___lmul *****************
  2952 ;; Defined at:
  2953 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/Umul32.c"
  2954 ;; Parameters:    Size  Location     Type
  2955 ;;  multiplier      4    6[BANK0 ] unsigned long 
  2956 ;;  multiplicand    4   10[BANK0 ] unsigned long 
  2957 ;; Auto vars:     Size  Location     Type
  2958 ;;  product         4   15[BANK0 ] unsigned long 
  2959 ;; Return value:  Size  Location     Type
  2960 ;;                  4    6[BANK0 ] unsigned long 
  2961 ;; Registers used:
  2962 ;;		wreg, status,2, status,0
  2963 ;; Tracked objects:
  2964 ;;		On entry : 0/0
  2965 ;;		On exit  : 0/0
  2966 ;;		Unchanged: 0/0
  2967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2968 ;;      Params:         0       8       0       0       0
  2969 ;;      Locals:         0       4       0       0       0
  2970 ;;      Temps:          0       1       0       0       0
  2971 ;;      Totals:         0      13       0       0       0
  2972 ;;Total ram usage:       13 bytes
  2973 ;; Hardware stack levels used:    1
  2974 ;; Hardware stack levels required when called:    4
  2975 ;; This function calls:
  2976 ;;		Nothing
  2977 ;; This function is called by:
  2978 ;;		_Wait_ms
  2979 ;; This function uses a non-reentrant model
  2980 ;;
  2981                           
  2982                           
  2983                           ;psect for function ___lmul
  2984  0DC6                     ___lmul:	
  2985  0DC6                     l3827:	
  2986                           ;incstack = 0
  2987 ;; hardware stack exceeded
  2988                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  2989                           
  2990  0DC6  3000               	movlw	0
  2991  0DC7  1283               	bcf	3,5	;RP0=0, select bank0
  2992  0DC8  1303               	bcf	3,6	;RP1=0, select bank0
  2993  0DC9  00B2               	movwf	___lmul@product+3
  2994  0DCA  3000               	movlw	0
  2995  0DCB  00B1               	movwf	___lmul@product+2
  2996  0DCC  3000               	movlw	0
  2997  0DCD  00B0               	movwf	___lmul@product+1
  2998  0DCE  3000               	movlw	0
  2999  0DCF  00AF               	movwf	___lmul@product
  3000  0DD0                     l3829:	
  3001  0DD0  1C26               	btfss	___lmul@multiplier,0
  3002  0DD1  2DD3               	goto	u3361
  3003  0DD2  2DD4               	goto	u3360
  3004  0DD3                     u3361:	
  3005  0DD3  2DEB               	goto	l3833
  3006  0DD4                     u3360:	
  3007  0DD4                     l3831:	
  3008  0DD4  082A               	movf	___lmul@multiplicand,w
  3009  0DD5  07AF               	addwf	___lmul@product,f
  3010  0DD6  082B               	movf	___lmul@multiplicand+1,w
  3011  0DD7  1103               	clrz
  3012  0DD8  1803               	skipnc
  3013  0DD9  3E01               	addlw	1
  3014  0DDA  1903               	skipnz
  3015  0DDB  2DDD               	goto	u3371
  3016  0DDC  07B0               	addwf	___lmul@product+1,f
  3017  0DDD                     u3371:	
  3018  0DDD  082C               	movf	___lmul@multiplicand+2,w
  3019  0DDE  1103               	clrz
  3020  0DDF  1803               	skipnc
  3021  0DE0  3E01               	addlw	1
  3022  0DE1  1903               	skipnz
  3023  0DE2  2DE4               	goto	u3372
  3024  0DE3  07B1               	addwf	___lmul@product+2,f
  3025  0DE4                     u3372:	
  3026  0DE4  082D               	movf	___lmul@multiplicand+3,w
  3027  0DE5  1103               	clrz
  3028  0DE6  1803               	skipnc
  3029  0DE7  3E01               	addlw	1
  3030  0DE8  1903               	skipnz
  3031  0DE9  2DEB               	goto	u3373
  3032  0DEA  07B2               	addwf	___lmul@product+3,f
  3033  0DEB                     u3373:	
  3034  0DEB                     l3833:	
  3035  0DEB  3001               	movlw	1
  3036  0DEC  00AE               	movwf	??___lmul
  3037  0DED                     u3385:	
  3038  0DED  1003               	clrc
  3039  0DEE  0DAA               	rlf	___lmul@multiplicand,f
  3040  0DEF  0DAB               	rlf	___lmul@multiplicand+1,f
  3041  0DF0  0DAC               	rlf	___lmul@multiplicand+2,f
  3042  0DF1  0DAD               	rlf	___lmul@multiplicand+3,f
  3043  0DF2  0BAE               	decfsz	??___lmul,f
  3044  0DF3  2DED               	goto	u3385
  3045  0DF4                     l3835:	
  3046  0DF4  3001               	movlw	1
  3047  0DF5                     u3395:	
  3048  0DF5  1003               	clrc
  3049  0DF6  0CA9               	rrf	___lmul@multiplier+3,f
  3050  0DF7  0CA8               	rrf	___lmul@multiplier+2,f
  3051  0DF8  0CA7               	rrf	___lmul@multiplier+1,f
  3052  0DF9  0CA6               	rrf	___lmul@multiplier,f
  3053  0DFA  3EFF               	addlw	-1
  3054  0DFB  1D03               	skipz
  3055  0DFC  2DF5               	goto	u3395
  3056  0DFD  0829               	movf	___lmul@multiplier+3,w
  3057  0DFE  0428               	iorwf	___lmul@multiplier+2,w
  3058  0DFF  0427               	iorwf	___lmul@multiplier+1,w
  3059  0E00  0426               	iorwf	___lmul@multiplier,w
  3060  0E01  1D03               	skipz
  3061  0E02  2E04               	goto	u3401
  3062  0E03  2E05               	goto	u3400
  3063  0E04                     u3401:	
  3064  0E04  2DD0               	goto	l3829
  3065  0E05                     u3400:	
  3066  0E05                     l3837:	
  3067  0E05  0832               	movf	___lmul@product+3,w
  3068  0E06  00A9               	movwf	?___lmul+3
  3069  0E07  0831               	movf	___lmul@product+2,w
  3070  0E08  00A8               	movwf	?___lmul+2
  3071  0E09  0830               	movf	___lmul@product+1,w
  3072  0E0A  00A7               	movwf	?___lmul+1
  3073  0E0B  082F               	movf	___lmul@product,w
  3074  0E0C  00A6               	movwf	?___lmul
  3075  0E0D                     l777:	
  3076  0E0D  0008               	return
  3077  0E0E                     __end_of___lmul:	
  3078                           
  3079                           	psect	text8
  3080  0A62                     __ptext8:	
  3081 ;; *************** function _Init_CompareMode *****************
  3082 ;; Defined at:
  3083 ;;		line 34 in file "melody.c"
  3084 ;; Parameters:    Size  Location     Type
  3085 ;;		None
  3086 ;; Auto vars:     Size  Location     Type
  3087 ;;		None
  3088 ;; Return value:  Size  Location     Type
  3089 ;;                  1    wreg      void 
  3090 ;; Registers used:
  3091 ;;		wreg, status,2, status,0
  3092 ;; Tracked objects:
  3093 ;;		On entry : 0/0
  3094 ;;		On exit  : 0/0
  3095 ;;		Unchanged: 0/0
  3096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3097 ;;      Params:         0       0       0       0       0
  3098 ;;      Locals:         0       0       0       0       0
  3099 ;;      Temps:          0       0       0       0       0
  3100 ;;      Totals:         0       0       0       0       0
  3101 ;;Total ram usage:        0 bytes
  3102 ;; Hardware stack levels used:    1
  3103 ;; Hardware stack levels required when called:    4
  3104 ;; This function calls:
  3105 ;;		Nothing
  3106 ;; This function is called by:
  3107 ;;		_PlayRing
  3108 ;; This function uses a non-reentrant model
  3109 ;;
  3110                           
  3111                           
  3112                           ;psect for function _Init_CompareMode
  3113  0A62                     _Init_CompareMode:	
  3114  0A62                     l3999:	
  3115                           ;incstack = 0
  3116                           ; Regs used in _Init_CompareMode: [wreg+status,2+status,0]
  3117                           
  3118                           
  3119                           ;melody.c: 36:     CCP2IE=0;
  3120  0A62  1683               	bsf	3,5	;RP0=1, select bank1
  3121  0A63  1303               	bcf	3,6	;RP1=0, select bank1
  3122  0A64  100D               	bcf	13,0	;volatile
  3123  0A65                     l4001:	
  3124                           
  3125                           ;melody.c: 37:     T1CONbits.T1CKPS=0b11;
  3126  0A65  3030               	movlw	48
  3127  0A66  1283               	bcf	3,5	;RP0=0, select bank0
  3128  0A67  1303               	bcf	3,6	;RP1=0, select bank0
  3129  0A68  0490               	iorwf	16,f	;volatile
  3130  0A69                     l4003:	
  3131                           
  3132                           ;melody.c: 38:     CCP1IE=1;
  3133  0A69  1683               	bsf	3,5	;RP0=1, select bank1
  3134  0A6A  1303               	bcf	3,6	;RP1=0, select bank1
  3135  0A6B  150C               	bsf	12,2	;volatile
  3136                           
  3137                           ;melody.c: 39:     CCP1CONbits.CCP1M=0b1000;
  3138  0A6C  1283               	bcf	3,5	;RP0=0, select bank0
  3139  0A6D  1303               	bcf	3,6	;RP1=0, select bank0
  3140  0A6E  0817               	movf	23,w	;volatile
  3141  0A6F  39F0               	andlw	-16
  3142  0A70  3808               	iorlw	8
  3143  0A71  0097               	movwf	23	;volatile
  3144  0A72                     l379:	
  3145  0A72  0008               	return
  3146  0A73                     __end_of_Init_CompareMode:	
  3147                           
  3148                           	psect	text9
  3149  0A51                     __ptext9:	
  3150 ;; *************** function _Init_CaptureMode *****************
  3151 ;; Defined at:
  3152 ;;		line 43 in file "melody.c"
  3153 ;; Parameters:    Size  Location     Type
  3154 ;;		None
  3155 ;; Auto vars:     Size  Location     Type
  3156 ;;		None
  3157 ;; Return value:  Size  Location     Type
  3158 ;;                  1    wreg      void 
  3159 ;; Registers used:
  3160 ;;		wreg, status,2, status,0
  3161 ;; Tracked objects:
  3162 ;;		On entry : 0/0
  3163 ;;		On exit  : 0/0
  3164 ;;		Unchanged: 0/0
  3165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3166 ;;      Params:         0       0       0       0       0
  3167 ;;      Locals:         0       0       0       0       0
  3168 ;;      Temps:          0       0       0       0       0
  3169 ;;      Totals:         0       0       0       0       0
  3170 ;;Total ram usage:        0 bytes
  3171 ;; Hardware stack levels used:    1
  3172 ;; Hardware stack levels required when called:    4
  3173 ;; This function calls:
  3174 ;;		Nothing
  3175 ;; This function is called by:
  3176 ;;		_PlayRing
  3177 ;; This function uses a non-reentrant model
  3178 ;;
  3179                           
  3180                           
  3181                           ;psect for function _Init_CaptureMode
  3182  0A51                     _Init_CaptureMode:	
  3183  0A51                     l4005:	
  3184                           ;incstack = 0
  3185                           ; Regs used in _Init_CaptureMode: [wreg+status,2+status,0]
  3186                           
  3187                           
  3188                           ;melody.c: 45:     CCP1IE=0;
  3189  0A51  1683               	bsf	3,5	;RP0=1, select bank1
  3190  0A52  1303               	bcf	3,6	;RP1=0, select bank1
  3191  0A53  110C               	bcf	12,2	;volatile
  3192  0A54                     l4007:	
  3193                           
  3194                           ;melody.c: 46:     T1CONbits.T1CKPS=0b00;
  3195  0A54  30CF               	movlw	-49
  3196  0A55  1283               	bcf	3,5	;RP0=0, select bank0
  3197  0A56  1303               	bcf	3,6	;RP1=0, select bank0
  3198  0A57  0590               	andwf	16,f	;volatile
  3199  0A58                     l4009:	
  3200                           
  3201                           ;melody.c: 47:     CCP2IE=1;
  3202  0A58  1683               	bsf	3,5	;RP0=1, select bank1
  3203  0A59  1303               	bcf	3,6	;RP1=0, select bank1
  3204  0A5A  140D               	bsf	13,0	;volatile
  3205                           
  3206                           ;melody.c: 48:     CCP2CONbits.CCP2M=0b0100;
  3207  0A5B  1283               	bcf	3,5	;RP0=0, select bank0
  3208  0A5C  1303               	bcf	3,6	;RP1=0, select bank0
  3209  0A5D  081D               	movf	29,w	;volatile
  3210  0A5E  39F0               	andlw	-16
  3211  0A5F  3804               	iorlw	4
  3212  0A60  009D               	movwf	29	;volatile
  3213  0A61                     l382:	
  3214  0A61  0008               	return
  3215  0A62                     __end_of_Init_CaptureMode:	
  3216                           
  3217                           	psect	text10
  3218  0AF9                     __ptext10:	
  3219 ;; *************** function _GeneratePWM *****************
  3220 ;; Defined at:
  3221 ;;		line 28 in file "melody.c"
  3222 ;; Parameters:    Size  Location     Type
  3223 ;;  freq            4   20[BANK0 ] unsigned long 
  3224 ;; Auto vars:     Size  Location     Type
  3225 ;;		None
  3226 ;; Return value:  Size  Location     Type
  3227 ;;                  1    wreg      void 
  3228 ;; Registers used:
  3229 ;;		wreg, status,2, status,0, pclath, cstack
  3230 ;; Tracked objects:
  3231 ;;		On entry : 0/0
  3232 ;;		On exit  : 0/0
  3233 ;;		Unchanged: 0/0
  3234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3235 ;;      Params:         0       4       0       0       0
  3236 ;;      Locals:         0       0       0       0       0
  3237 ;;      Temps:          0       4       0       0       0
  3238 ;;      Totals:         0       8       0       0       0
  3239 ;;Total ram usage:        8 bytes
  3240 ;; Hardware stack levels used:    1
  3241 ;; Hardware stack levels required when called:    5
  3242 ;; This function calls:
  3243 ;;		___lldiv
  3244 ;; This function is called by:
  3245 ;;		_PlayRing
  3246 ;; This function uses a non-reentrant model
  3247 ;;
  3248                           
  3249                           
  3250                           ;psect for function _GeneratePWM
  3251  0AF9                     _GeneratePWM:	
  3252  0AF9                     l3997:	
  3253                           ;incstack = 0
  3254 ;; hardware stack exceeded
  3255                           ; Regs used in _GeneratePWM: [wreg+status,2+status,0+pclath+cstack]
  3256                           
  3257                           
  3258                           ;melody.c: 28: void GeneratePWM(unsigned long int freq);melody.c: 29: {;melody.c: 30:   
      +                            PWM_Freq=8000000/(4*8*2*freq);
  3259  0AF9  1283               	bcf	3,5	;RP0=0, select bank0
  3260  0AFA  1303               	bcf	3,6	;RP1=0, select bank0
  3261  0AFB  0834               	movf	GeneratePWM@freq,w
  3262  0AFC  00B8               	movwf	??_GeneratePWM
  3263  0AFD  0835               	movf	GeneratePWM@freq+1,w
  3264  0AFE  00B9               	movwf	??_GeneratePWM+1
  3265  0AFF  0836               	movf	GeneratePWM@freq+2,w
  3266  0B00  00BA               	movwf	??_GeneratePWM+2
  3267  0B01  0837               	movf	GeneratePWM@freq+3,w
  3268  0B02  00BB               	movwf	??_GeneratePWM+3
  3269  0B03  3006               	movlw	6
  3270  0B04                     u3755:	
  3271  0B04  1003               	clrc
  3272  0B05  0DB8               	rlf	??_GeneratePWM,f
  3273  0B06  0DB9               	rlf	??_GeneratePWM+1,f
  3274  0B07  0DBA               	rlf	??_GeneratePWM+2,f
  3275  0B08  0DBB               	rlf	??_GeneratePWM+3,f
  3276  0B09                     u3750:	
  3277  0B09  3EFF               	addlw	-1
  3278  0B0A  1D03               	skipz
  3279  0B0B  2B04               	goto	u3755
  3280  0B0C  083B               	movf	??_GeneratePWM+3,w
  3281  0B0D  00A9               	movwf	___lldiv@divisor+3
  3282  0B0E  083A               	movf	??_GeneratePWM+2,w
  3283  0B0F  00A8               	movwf	___lldiv@divisor+2
  3284  0B10  0839               	movf	??_GeneratePWM+1,w
  3285  0B11  00A7               	movwf	___lldiv@divisor+1
  3286  0B12  0838               	movf	??_GeneratePWM,w
  3287  0B13  00A6               	movwf	___lldiv@divisor
  3288  0B14  3000               	movlw	0
  3289  0B15  00AD               	movwf	___lldiv@dividend+3
  3290  0B16  307A               	movlw	122
  3291  0B17  00AC               	movwf	___lldiv@dividend+2
  3292  0B18  3012               	movlw	18
  3293  0B19  00AB               	movwf	___lldiv@dividend+1
  3294  0B1A  3000               	movlw	0
  3295  0B1B  00AA               	movwf	___lldiv@dividend
  3296  0B1C  120A  118A  2797  120A  158A  	fcall	___lldiv
  3297  0B21  1283               	bcf	3,5	;RP0=0, select bank0
  3298  0B22  1303               	bcf	3,6	;RP1=0, select bank0
  3299  0B23  0827               	movf	?___lldiv+1,w
  3300  0B24  00D0               	movwf	_PWM_Freq+1	;volatile
  3301  0B25  0826               	movf	?___lldiv,w
  3302  0B26  00CF               	movwf	_PWM_Freq	;volatile
  3303  0B27                     l376:	
  3304  0B27  0008               	return
  3305  0B28                     __end_of_GeneratePWM:	
  3306                           
  3307                           	psect	text11
  3308  0797                     __ptext11:	
  3309 ;; *************** function ___lldiv *****************
  3310 ;; Defined at:
  3311 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/__lldiv.c"
  3312 ;; Parameters:    Size  Location     Type
  3313 ;;  divisor         4    6[BANK0 ] unsigned long 
  3314 ;;  dividend        4   10[BANK0 ] unsigned long 
  3315 ;; Auto vars:     Size  Location     Type
  3316 ;;  quotient        4   15[BANK0 ] unsigned long 
  3317 ;;  counter         1   19[BANK0 ] unsigned char 
  3318 ;; Return value:  Size  Location     Type
  3319 ;;                  4    6[BANK0 ] unsigned long 
  3320 ;; Registers used:
  3321 ;;		wreg, status,2, status,0
  3322 ;; Tracked objects:
  3323 ;;		On entry : 0/0
  3324 ;;		On exit  : 0/0
  3325 ;;		Unchanged: 0/0
  3326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3327 ;;      Params:         0       8       0       0       0
  3328 ;;      Locals:         0       5       0       0       0
  3329 ;;      Temps:          0       1       0       0       0
  3330 ;;      Totals:         0      14       0       0       0
  3331 ;;Total ram usage:       14 bytes
  3332 ;; Hardware stack levels used:    1
  3333 ;; Hardware stack levels required when called:    4
  3334 ;; This function calls:
  3335 ;;		Nothing
  3336 ;; This function is called by:
  3337 ;;		_GeneratePWM
  3338 ;; This function uses a non-reentrant model
  3339 ;;
  3340                           
  3341                           
  3342                           ;psect for function ___lldiv
  3343  0797                     ___lldiv:	
  3344  0797                     l3841:	
  3345                           ;incstack = 0
  3346 ;; hardware stack exceeded
  3347                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3348                           
  3349  0797  3000               	movlw	0
  3350  0798  1283               	bcf	3,5	;RP0=0, select bank0
  3351  0799  1303               	bcf	3,6	;RP1=0, select bank0
  3352  079A  00B2               	movwf	___lldiv@quotient+3
  3353  079B  3000               	movlw	0
  3354  079C  00B1               	movwf	___lldiv@quotient+2
  3355  079D  3000               	movlw	0
  3356  079E  00B0               	movwf	___lldiv@quotient+1
  3357  079F  3000               	movlw	0
  3358  07A0  00AF               	movwf	___lldiv@quotient
  3359  07A1  0829               	movf	___lldiv@divisor+3,w
  3360  07A2  0428               	iorwf	___lldiv@divisor+2,w
  3361  07A3  0427               	iorwf	___lldiv@divisor+1,w
  3362  07A4  0426               	iorwf	___lldiv@divisor,w
  3363  07A5  1903               	skipnz
  3364  07A6  2FA8               	goto	u3411
  3365  07A7  2FA9               	goto	u3410
  3366  07A8                     u3411:	
  3367  07A8  2FF6               	goto	l3861
  3368  07A9                     u3410:	
  3369  07A9                     l3843:	
  3370  07A9  01B3               	clrf	___lldiv@counter
  3371  07AA  0AB3               	incf	___lldiv@counter,f
  3372  07AB  2FB9               	goto	l3847
  3373  07AC                     l3845:	
  3374  07AC  3001               	movlw	1
  3375  07AD  00AE               	movwf	??___lldiv
  3376  07AE                     u3425:	
  3377  07AE  1003               	clrc
  3378  07AF  0DA6               	rlf	___lldiv@divisor,f
  3379  07B0  0DA7               	rlf	___lldiv@divisor+1,f
  3380  07B1  0DA8               	rlf	___lldiv@divisor+2,f
  3381  07B2  0DA9               	rlf	___lldiv@divisor+3,f
  3382  07B3  0BAE               	decfsz	??___lldiv,f
  3383  07B4  2FAE               	goto	u3425
  3384  07B5  3001               	movlw	1
  3385  07B6  00AE               	movwf	??___lldiv
  3386  07B7  082E               	movf	??___lldiv,w
  3387  07B8  07B3               	addwf	___lldiv@counter,f
  3388  07B9                     l3847:	
  3389  07B9  1FA9               	btfss	___lldiv@divisor+3,7
  3390  07BA  2FBC               	goto	u3431
  3391  07BB  2FBD               	goto	u3430
  3392  07BC                     u3431:	
  3393  07BC  2FAC               	goto	l3845
  3394  07BD                     u3430:	
  3395  07BD                     l3849:	
  3396  07BD  3001               	movlw	1
  3397  07BE  00AE               	movwf	??___lldiv
  3398  07BF                     u3445:	
  3399  07BF  1003               	clrc
  3400  07C0  0DAF               	rlf	___lldiv@quotient,f
  3401  07C1  0DB0               	rlf	___lldiv@quotient+1,f
  3402  07C2  0DB1               	rlf	___lldiv@quotient+2,f
  3403  07C3  0DB2               	rlf	___lldiv@quotient+3,f
  3404  07C4  0BAE               	decfsz	??___lldiv,f
  3405  07C5  2FBF               	goto	u3445
  3406  07C6                     l3851:	
  3407  07C6  0829               	movf	___lldiv@divisor+3,w
  3408  07C7  022D               	subwf	___lldiv@dividend+3,w
  3409  07C8  1D03               	skipz
  3410  07C9  2FD4               	goto	u3455
  3411  07CA  0828               	movf	___lldiv@divisor+2,w
  3412  07CB  022C               	subwf	___lldiv@dividend+2,w
  3413  07CC  1D03               	skipz
  3414  07CD  2FD4               	goto	u3455
  3415  07CE  0827               	movf	___lldiv@divisor+1,w
  3416  07CF  022B               	subwf	___lldiv@dividend+1,w
  3417  07D0  1D03               	skipz
  3418  07D1  2FD4               	goto	u3455
  3419  07D2  0826               	movf	___lldiv@divisor,w
  3420  07D3  022A               	subwf	___lldiv@dividend,w
  3421  07D4                     u3455:	
  3422  07D4  1C03               	skipc
  3423  07D5  2FD7               	goto	u3451
  3424  07D6  2FD8               	goto	u3450
  3425  07D7                     u3451:	
  3426  07D7  2FE7               	goto	l3857
  3427  07D8                     u3450:	
  3428  07D8                     l3853:	
  3429  07D8  0826               	movf	___lldiv@divisor,w
  3430  07D9  02AA               	subwf	___lldiv@dividend,f
  3431  07DA  0827               	movf	___lldiv@divisor+1,w
  3432  07DB  1C03               	skipc
  3433  07DC  0F27               	incfsz	___lldiv@divisor+1,w
  3434  07DD  02AB               	subwf	___lldiv@dividend+1,f
  3435  07DE  0828               	movf	___lldiv@divisor+2,w
  3436  07DF  1C03               	skipc
  3437  07E0  0F28               	incfsz	___lldiv@divisor+2,w
  3438  07E1  02AC               	subwf	___lldiv@dividend+2,f
  3439  07E2  0829               	movf	___lldiv@divisor+3,w
  3440  07E3  1C03               	skipc
  3441  07E4  0F29               	incfsz	___lldiv@divisor+3,w
  3442  07E5  02AD               	subwf	___lldiv@dividend+3,f
  3443  07E6                     l3855:	
  3444  07E6  142F               	bsf	___lldiv@quotient,0
  3445  07E7                     l3857:	
  3446  07E7  3001               	movlw	1
  3447  07E8                     u3465:	
  3448  07E8  1003               	clrc
  3449  07E9  0CA9               	rrf	___lldiv@divisor+3,f
  3450  07EA  0CA8               	rrf	___lldiv@divisor+2,f
  3451  07EB  0CA7               	rrf	___lldiv@divisor+1,f
  3452  07EC  0CA6               	rrf	___lldiv@divisor,f
  3453  07ED  3EFF               	addlw	-1
  3454  07EE  1D03               	skipz
  3455  07EF  2FE8               	goto	u3465
  3456  07F0                     l3859:	
  3457  07F0  3001               	movlw	1
  3458  07F1  02B3               	subwf	___lldiv@counter,f
  3459  07F2  1D03               	btfss	3,2
  3460  07F3  2FF5               	goto	u3471
  3461  07F4  2FF6               	goto	u3470
  3462  07F5                     u3471:	
  3463  07F5  2FBD               	goto	l3849
  3464  07F6                     u3470:	
  3465  07F6                     l3861:	
  3466  07F6  0832               	movf	___lldiv@quotient+3,w
  3467  07F7  00A9               	movwf	?___lldiv+3
  3468  07F8  0831               	movf	___lldiv@quotient+2,w
  3469  07F9  00A8               	movwf	?___lldiv+2
  3470  07FA  0830               	movf	___lldiv@quotient+1,w
  3471  07FB  00A7               	movwf	?___lldiv+1
  3472  07FC  082F               	movf	___lldiv@quotient,w
  3473  07FD  00A6               	movwf	?___lldiv
  3474  07FE                     l799:	
  3475  07FE  0008               	return
  3476  07FF                     __end_of___lldiv:	
  3477                           
  3478                           	psect	text12
  3479  06C1                     __ptext12:	
  3480 ;; *************** function _FrameDecode *****************
  3481 ;; Defined at:
  3482 ;;		line 133 in file "manchester_decode.c"
  3483 ;; Parameters:    Size  Location     Type
  3484 ;;  DataRCV         1    wreg     PTR struct .
  3485 ;;		 -> main@DataRCV(5), 
  3486 ;; Auto vars:     Size  Location     Type
  3487 ;;  DataRCV         1   13[BANK0 ] PTR struct .
  3488 ;;		 -> main@DataRCV(5), 
  3489 ;;  i               1   15[BANK0 ] unsigned char 
  3490 ;;  data            1   14[BANK0 ] unsigned char 
  3491 ;;  data_counter    1    0        unsigned char 
  3492 ;; Return value:  Size  Location     Type
  3493 ;;                  2    9[BANK0 ] unsigned int 
  3494 ;; Registers used:
  3495 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3496 ;; Tracked objects:
  3497 ;;		On entry : 0/0
  3498 ;;		On exit  : 0/0
  3499 ;;		Unchanged: 0/0
  3500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3501 ;;      Params:         0       2       0       0       0
  3502 ;;      Locals:         0       3       0       0       0
  3503 ;;      Temps:          0       2       0       0       0
  3504 ;;      Totals:         0       7       0       0       0
  3505 ;;Total ram usage:        7 bytes
  3506 ;; Hardware stack levels used:    1
  3507 ;; Hardware stack levels required when called:    5
  3508 ;; This function calls:
  3509 ;;		_FrameBuffer
  3510 ;; This function is called by:
  3511 ;;		_CheckEvent
  3512 ;;		_ProcessRCVData
  3513 ;; This function uses a non-reentrant model
  3514 ;;
  3515                           
  3516                           
  3517                           ;psect for function _FrameDecode
  3518  06C1                     _FrameDecode:	
  3519                           
  3520                           ;incstack = 0
  3521                           ; Regs used in _FrameDecode: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3522                           ;FrameDecode@DataRCV stored from wreg
  3523  06C1  1283               	bcf	3,5	;RP0=0, select bank0
  3524  06C2  1303               	bcf	3,6	;RP1=0, select bank0
  3525  06C3  00AD               	movwf	FrameDecode@DataRCV
  3526  06C4                     l291:	
  3527                           ;manchester_decode.c: 133: unsigned int FrameDecode(DataStruct *DataRCV);manchester_deco
      +                          de.c: 134: {;manchester_decode.c: 135:     unsigned char data, i, data_counter;;manchest
      +                          er_decode.c: 137:     while(1)
  3528                           
  3529  06C4                     l4105:	
  3530                           
  3531                           ;manchester_decode.c: 138:     {;manchester_decode.c: 139:         if(FrameBuffer(&data,
      +                          0)==0xFF)
  3532  06C4  01A6               	clrf	FrameBuffer@mode
  3533  06C5  302E               	movlw	(low (FrameDecode@data| 0))& (0+255)
  3534  06C6  120A  158A  26A3  120A  118A  	fcall	_FrameBuffer
  3535  06CB  3AFF               	xorlw	255
  3536  06CC  1D03               	skipz
  3537  06CD  2ECF               	goto	u3891
  3538  06CE  2ED0               	goto	u3890
  3539  06CF                     u3891:	
  3540  06CF  2ED7               	goto	l4111
  3541  06D0                     u3890:	
  3542  06D0                     l4107:	
  3543                           
  3544                           ;manchester_decode.c: 140:         {;manchester_decode.c: 141:             return 0xFF;
  3545  06D0  30FF               	movlw	255
  3546  06D1  1283               	bcf	3,5	;RP0=0, select bank0
  3547  06D2  1303               	bcf	3,6	;RP1=0, select bank0
  3548  06D3  00A9               	movwf	?_FrameDecode
  3549  06D4  3000               	movlw	0
  3550  06D5  00AA               	movwf	?_FrameDecode+1
  3551  06D6  2F2D               	goto	l293
  3552  06D7                     l4111:	
  3553                           
  3554                           ;manchester_decode.c: 144:         if(data=='$')
  3555  06D7  3024               	movlw	36
  3556  06D8  1283               	bcf	3,5	;RP0=0, select bank0
  3557  06D9  1303               	bcf	3,6	;RP1=0, select bank0
  3558  06DA  062E               	xorwf	FrameDecode@data,w
  3559  06DB  1D03               	btfss	3,2
  3560  06DC  2EDE               	goto	u3901
  3561  06DD  2EDF               	goto	u3900
  3562  06DE                     u3901:	
  3563  06DE  2EC4               	goto	l291
  3564  06DF                     u3900:	
  3565  06DF                     l4113:	
  3566                           
  3567                           ;manchester_decode.c: 145:         {;manchester_decode.c: 146:             for(i=0;i<(6 
      +                          -2);i++)
  3568  06DF  01AF               	clrf	FrameDecode@i
  3569  06E0                     l4119:	
  3570                           
  3571                           ;manchester_decode.c: 147:    {;manchester_decode.c: 148:     DataRCV->frame[i]=0;
  3572  06E0  082F               	movf	FrameDecode@i,w
  3573  06E1  072D               	addwf	FrameDecode@DataRCV,w
  3574  06E2  00AB               	movwf	??_FrameDecode
  3575  06E3  082B               	movf	??_FrameDecode,w
  3576  06E4  0084               	movwf	4
  3577  06E5  1783               	bsf	3,7	;select IRP bank2
  3578  06E6  0180               	clrf	0
  3579  06E7                     l4121:	
  3580                           
  3581                           ;manchester_decode.c: 149:    }
  3582  06E7  3001               	movlw	1
  3583  06E8  00AB               	movwf	??_FrameDecode
  3584  06E9  082B               	movf	??_FrameDecode,w
  3585  06EA  07AF               	addwf	FrameDecode@i,f
  3586  06EB                     l4123:	
  3587  06EB  3004               	movlw	4
  3588  06EC  022F               	subwf	FrameDecode@i,w
  3589  06ED  1C03               	skipc
  3590  06EE  2EF0               	goto	u3911
  3591  06EF  2EF1               	goto	u3910
  3592  06F0                     u3911:	
  3593  06F0  2EE0               	goto	l4119
  3594  06F1                     u3910:	
  3595  06F1                     l4125:	
  3596                           
  3597                           ;manchester_decode.c: 150:             i=0;
  3598  06F1  01AF               	clrf	FrameDecode@i
  3599  06F2                     l4127:	
  3600                           
  3601                           ;manchester_decode.c: 153:             {;manchester_decode.c: 154:                 if(Fr
      +                          ameBuffer(&data,0)==0xFF)
  3602  06F2  01A6               	clrf	FrameBuffer@mode
  3603  06F3  302E               	movlw	(low (FrameDecode@data| 0))& (0+255)
  3604  06F4  120A  158A  26A3  120A  118A  	fcall	_FrameBuffer
  3605  06F9  3AFF               	xorlw	255
  3606  06FA  1D03               	skipz
  3607  06FB  2EFD               	goto	u3921
  3608  06FC  2EFE               	goto	u3920
  3609  06FD                     u3921:	
  3610  06FD  2EFF               	goto	l4133
  3611  06FE                     u3920:	
  3612  06FE  2ED0               	goto	l4107
  3613  06FF                     l4133:	
  3614                           
  3615                           ;manchester_decode.c: 158:                 if(data=='&' && i==(6 -2))
  3616  06FF  3026               	movlw	38
  3617  0700  1283               	bcf	3,5	;RP0=0, select bank0
  3618  0701  1303               	bcf	3,6	;RP1=0, select bank0
  3619  0702  062E               	xorwf	FrameDecode@data,w
  3620  0703  1D03               	btfss	3,2
  3621  0704  2F06               	goto	u3931
  3622  0705  2F07               	goto	u3930
  3623  0706                     u3931:	
  3624  0706  2F18               	goto	l4143
  3625  0707                     u3930:	
  3626  0707                     l4135:	
  3627  0707  3004               	movlw	4
  3628  0708  062F               	xorwf	FrameDecode@i,w
  3629  0709  1D03               	btfss	3,2
  3630  070A  2F0C               	goto	u3941
  3631  070B  2F0D               	goto	u3940
  3632  070C                     u3941:	
  3633  070C  2F18               	goto	l4143
  3634  070D                     u3940:	
  3635  070D                     l4137:	
  3636                           
  3637                           ;manchester_decode.c: 159:                 {;manchester_decode.c: 160:                  
      +                             DataRCV->RCV_Frame=1;
  3638  070D  082D               	movf	FrameDecode@DataRCV,w
  3639  070E  3E04               	addlw	4
  3640  070F  0084               	movwf	4
  3641  0710  1783               	bsf	3,7	;select IRP bank2
  3642  0711  0180               	clrf	0
  3643  0712  0A80               	incf	0,f
  3644  0713                     l4139:	
  3645                           
  3646                           ;manchester_decode.c: 161:                     return 10;
  3647  0713  300A               	movlw	10
  3648  0714  00A9               	movwf	?_FrameDecode
  3649  0715  3000               	movlw	0
  3650  0716  00AA               	movwf	?_FrameDecode+1
  3651  0717  2F2D               	goto	l293
  3652  0718                     l4143:	
  3653                           
  3654                           ;manchester_decode.c: 163:                 DataRCV->frame[i]=data;
  3655  0718  082E               	movf	FrameDecode@data,w
  3656  0719  00AB               	movwf	??_FrameDecode
  3657  071A  082F               	movf	FrameDecode@i,w
  3658  071B  072D               	addwf	FrameDecode@DataRCV,w
  3659  071C  00AC               	movwf	??_FrameDecode+1
  3660  071D  082C               	movf	??_FrameDecode+1,w
  3661  071E  0084               	movwf	4
  3662  071F  082B               	movf	??_FrameDecode,w
  3663  0720  1783               	bsf	3,7	;select IRP bank2
  3664  0721  0080               	movwf	0
  3665  0722                     l4145:	
  3666                           
  3667                           ;manchester_decode.c: 164:                 i++;
  3668  0722  3001               	movlw	1
  3669  0723  00AB               	movwf	??_FrameDecode
  3670  0724  082B               	movf	??_FrameDecode,w
  3671  0725  07AF               	addwf	FrameDecode@i,f
  3672  0726                     l4147:	
  3673                           
  3674                           ;manchester_decode.c: 165:                 if(i>(6 -2))
  3675  0726  3005               	movlw	5
  3676  0727  022F               	subwf	FrameDecode@i,w
  3677  0728  1C03               	skipc
  3678  0729  2F2B               	goto	u3951
  3679  072A  2F2C               	goto	u3950
  3680  072B                     u3951:	
  3681  072B  2EF2               	goto	l4127
  3682  072C                     u3950:	
  3683  072C  2EC4               	goto	l291
  3684  072D                     l293:	
  3685  072D  0008               	return
  3686  072E                     __end_of_FrameDecode:	
  3687                           
  3688                           	psect	text13
  3689  0EA3                     __ptext13:	
  3690 ;; *************** function _FrameBuffer *****************
  3691 ;; Defined at:
  3692 ;;		line 6 in file "circular_buffer.c"
  3693 ;; Parameters:    Size  Location     Type
  3694 ;;  data            1    wreg     PTR unsigned char 
  3695 ;;		 -> FrameDecode@data(1), ManchesterDecode@decoded_byte(1), 
  3696 ;;  mode            1    6[BANK0 ] unsigned char 
  3697 ;; Auto vars:     Size  Location     Type
  3698 ;;  data            1    8[BANK0 ] PTR unsigned char 
  3699 ;;		 -> FrameDecode@data(1), ManchesterDecode@decoded_byte(1), 
  3700 ;; Return value:  Size  Location     Type
  3701 ;;                  1    wreg      unsigned char 
  3702 ;; Registers used:
  3703 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3704 ;; Tracked objects:
  3705 ;;		On entry : 0/0
  3706 ;;		On exit  : 0/0
  3707 ;;		Unchanged: 0/0
  3708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3709 ;;      Params:         0       1       0       0       0
  3710 ;;      Locals:         0       1       0       0       0
  3711 ;;      Temps:          0       1       0       0       0
  3712 ;;      Totals:         0       3       0       0       0
  3713 ;;Total ram usage:        3 bytes
  3714 ;; Hardware stack levels used:    1
  3715 ;; Hardware stack levels required when called:    4
  3716 ;; This function calls:
  3717 ;;		Nothing
  3718 ;; This function is called by:
  3719 ;;		_FrameDecode
  3720 ;; This function uses a non-reentrant model
  3721 ;;
  3722                           
  3723                           
  3724                           ;psect for function _FrameBuffer
  3725  0EA3                     _FrameBuffer:	
  3726                           
  3727                           ;incstack = 0
  3728                           ; Regs used in _FrameBuffer: [wreg-fsr0h+status,2+status,0]
  3729                           ;FrameBuffer@data stored from wreg
  3730  0EA3  1283               	bcf	3,5	;RP0=0, select bank0
  3731  0EA4  1303               	bcf	3,6	;RP1=0, select bank0
  3732  0EA5  00A8               	movwf	FrameBuffer@data
  3733  0EA6                     l3947:	
  3734                           
  3735                           ;circular_buffer.c: 6: unsigned char FrameBuffer(unsigned char *data,unsigned char mode)
      +                          ;circular_buffer.c: 7: {;circular_buffer.c: 8:  static unsigned char Buffer[30];;circula
      +                          r_buffer.c: 9:  static unsigned char ReadPointer,WritePointer,;circular_buffer.c: 10:   
      +                             WritePointerMem;;circular_buffer.c: 12:  if(mode==1)
  3736  0EA6  0326               	decf	FrameBuffer@mode,w
  3737  0EA7  1D03               	btfss	3,2
  3738  0EA8  2EAA               	goto	u3671
  3739  0EA9  2EAB               	goto	u3670
  3740  0EAA                     u3671:	
  3741  0EAA  2ED2               	goto	l3971
  3742  0EAB                     u3670:	
  3743  0EAB                     l3949:	
  3744                           
  3745                           ;circular_buffer.c: 13:  {;circular_buffer.c: 14:   WritePointerMem=WritePointer;
  3746  0EAB  085B               	movf	FrameBuffer@WritePointer,w
  3747  0EAC  00A7               	movwf	??_FrameBuffer
  3748  0EAD  0827               	movf	??_FrameBuffer,w
  3749  0EAE  00DA               	movwf	FrameBuffer@WritePointerMem
  3750  0EAF                     l3951:	
  3751                           
  3752                           ;circular_buffer.c: 15:   WritePointer++;
  3753  0EAF  3001               	movlw	1
  3754  0EB0  00A7               	movwf	??_FrameBuffer
  3755  0EB1  0827               	movf	??_FrameBuffer,w
  3756  0EB2  07DB               	addwf	FrameBuffer@WritePointer,f
  3757  0EB3                     l3953:	
  3758                           
  3759                           ;circular_buffer.c: 16:   if(WritePointer==30)
  3760  0EB3  301E               	movlw	30
  3761  0EB4  065B               	xorwf	FrameBuffer@WritePointer,w
  3762  0EB5  1D03               	btfss	3,2
  3763  0EB6  2EB8               	goto	u3681
  3764  0EB7  2EB9               	goto	u3680
  3765  0EB8                     u3681:	
  3766  0EB8  2EBA               	goto	l3957
  3767  0EB9                     u3680:	
  3768  0EB9                     l3955:	
  3769                           
  3770                           ;circular_buffer.c: 17:   {;circular_buffer.c: 18:    WritePointer=0;
  3771  0EB9  01DB               	clrf	FrameBuffer@WritePointer
  3772  0EBA                     l3957:	
  3773                           
  3774                           ;circular_buffer.c: 20:   if(WritePointer==ReadPointer)
  3775  0EBA  085B               	movf	FrameBuffer@WritePointer,w
  3776  0EBB  065C               	xorwf	FrameBuffer@ReadPointer,w
  3777  0EBC  1D03               	skipz
  3778  0EBD  2EBF               	goto	u3691
  3779  0EBE  2EC0               	goto	u3690
  3780  0EBF                     u3691:	
  3781  0EBF  2EC6               	goto	l3963
  3782  0EC0                     u3690:	
  3783  0EC0                     l3959:	
  3784                           
  3785                           ;circular_buffer.c: 21:   {;circular_buffer.c: 22:    WritePointer=WritePointerMem;
  3786  0EC0  085A               	movf	FrameBuffer@WritePointerMem,w
  3787  0EC1  00A7               	movwf	??_FrameBuffer
  3788  0EC2  0827               	movf	??_FrameBuffer,w
  3789  0EC3  00DB               	movwf	FrameBuffer@WritePointer
  3790                           
  3791                           ;circular_buffer.c: 23:    return 0xFE;
  3792  0EC4  30FE               	movlw	254
  3793  0EC5  2EEF               	goto	l14
  3794  0EC6                     l3963:	
  3795                           
  3796                           ;circular_buffer.c: 26:   Buffer[WritePointer]=*data;
  3797  0EC6  0828               	movf	FrameBuffer@data,w
  3798  0EC7  0084               	movwf	4
  3799  0EC8  1383               	bcf	3,7	;select IRP bank0
  3800  0EC9  0800               	movf	0,w
  3801  0ECA  00A7               	movwf	??_FrameBuffer
  3802  0ECB  085B               	movf	FrameBuffer@WritePointer,w
  3803  0ECC  3EA0               	addlw	(low (FrameBuffer@Buffer| 0))& (0+255)
  3804  0ECD  0084               	movwf	4
  3805  0ECE  0827               	movf	??_FrameBuffer,w
  3806  0ECF  0080               	movwf	0
  3807  0ED0                     l3965:	
  3808                           
  3809                           ;circular_buffer.c: 28:   return 1;
  3810  0ED0  3001               	movlw	1
  3811  0ED1  2EEF               	goto	l14
  3812  0ED2                     l3971:	
  3813                           
  3814                           ;circular_buffer.c: 31:  {;circular_buffer.c: 32:   if(WritePointer!=ReadPointer)
  3815  0ED2  085B               	movf	FrameBuffer@WritePointer,w
  3816  0ED3  065C               	xorwf	FrameBuffer@ReadPointer,w
  3817  0ED4  1903               	skipnz
  3818  0ED5  2ED7               	goto	u3701
  3819  0ED6  2ED8               	goto	u3700
  3820  0ED7                     u3701:	
  3821  0ED7  2EEE               	goto	l3985
  3822  0ED8                     u3700:	
  3823  0ED8                     l3973:	
  3824                           
  3825                           ;circular_buffer.c: 33:   {;circular_buffer.c: 34:    ReadPointer++;
  3826  0ED8  3001               	movlw	1
  3827  0ED9  00A7               	movwf	??_FrameBuffer
  3828  0EDA  0827               	movf	??_FrameBuffer,w
  3829  0EDB  07DC               	addwf	FrameBuffer@ReadPointer,f
  3830                           
  3831                           ;circular_buffer.c: 35:    if(ReadPointer==30)
  3832  0EDC  301E               	movlw	30
  3833  0EDD  065C               	xorwf	FrameBuffer@ReadPointer,w
  3834  0EDE  1D03               	btfss	3,2
  3835  0EDF  2EE1               	goto	u3711
  3836  0EE0  2EE2               	goto	u3710
  3837  0EE1                     u3711:	
  3838  0EE1  2EE3               	goto	l3977
  3839  0EE2                     u3710:	
  3840  0EE2                     l3975:	
  3841                           
  3842                           ;circular_buffer.c: 36:    {;circular_buffer.c: 37:     ReadPointer=0;
  3843  0EE2  01DC               	clrf	FrameBuffer@ReadPointer
  3844  0EE3                     l3977:	
  3845                           
  3846                           ;circular_buffer.c: 39:    *data=Buffer[ReadPointer];
  3847  0EE3  085C               	movf	FrameBuffer@ReadPointer,w
  3848  0EE4  3EA0               	addlw	(low (FrameBuffer@Buffer| 0))& (0+255)
  3849  0EE5  0084               	movwf	4
  3850  0EE6  1383               	bcf	3,7	;select IRP bank1
  3851  0EE7  0800               	movf	0,w
  3852  0EE8  00A7               	movwf	??_FrameBuffer
  3853  0EE9  0828               	movf	FrameBuffer@data,w
  3854  0EEA  0084               	movwf	4
  3855  0EEB  0827               	movf	??_FrameBuffer,w
  3856  0EEC  0080               	movwf	0
  3857  0EED  2ED0               	goto	l3965
  3858  0EEE                     l3985:	
  3859                           
  3860                           ;circular_buffer.c: 43:   {;circular_buffer.c: 44:    return 0xFF;
  3861  0EEE  30FF               	movlw	255
  3862  0EEF                     l14:	
  3863  0EEF  0008               	return
  3864  0EF0                     __end_of_FrameBuffer:	
  3865                           
  3866                           	psect	text14
  3867  0CF3                     __ptext14:	
  3868 ;; *************** function _CRC_check *****************
  3869 ;; Defined at:
  3870 ;;		line 174 in file "manchester_decode.c"
  3871 ;; Parameters:    Size  Location     Type
  3872 ;;  DataRCV         1    wreg     PTR struct .
  3873 ;;		 -> main@DataRCV(5), 
  3874 ;; Auto vars:     Size  Location     Type
  3875 ;;  DataRCV         1   22[BANK0 ] PTR struct .
  3876 ;;		 -> main@DataRCV(5), 
  3877 ;;  crc_val         2   20[BANK0 ] unsigned int 
  3878 ;; Return value:  Size  Location     Type
  3879 ;;                  1    wreg      unsigned char 
  3880 ;; Registers used:
  3881 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3882 ;; Tracked objects:
  3883 ;;		On entry : 0/0
  3884 ;;		On exit  : 0/0
  3885 ;;		Unchanged: 0/0
  3886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3887 ;;      Params:         0       0       0       0       0
  3888 ;;      Locals:         0       3       0       0       0
  3889 ;;      Temps:          0       4       0       0       0
  3890 ;;      Totals:         0       7       0       0       0
  3891 ;;Total ram usage:        7 bytes
  3892 ;; Hardware stack levels used:    1
  3893 ;; Hardware stack levels required when called:    5
  3894 ;; This function calls:
  3895 ;;		_CRC16
  3896 ;; This function is called by:
  3897 ;;		_ProcessRCVData
  3898 ;; This function uses a non-reentrant model
  3899 ;;
  3900                           
  3901                           
  3902                           ;psect for function _CRC_check
  3903  0CF3                     _CRC_check:	
  3904                           
  3905                           ;incstack = 0
  3906                           ; Regs used in _CRC_check: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3907                           ;CRC_check@DataRCV stored from wreg
  3908  0CF3  1283               	bcf	3,5	;RP0=0, select bank0
  3909  0CF4  1303               	bcf	3,6	;RP1=0, select bank0
  3910  0CF5  00B6               	movwf	CRC_check@DataRCV
  3911  0CF6                     l4187:	
  3912                           
  3913                           ;manchester_decode.c: 174: unsigned char CRC_check(DataStruct *DataRCV);manchester_decod
      +                          e.c: 175: {;manchester_decode.c: 176:  unsigned int crc_val;;manchester_decode.c: 177:  
      +                          crc_val=CRC16(&DataRCV->frame[0],6 -4);
  3914  0CF6  3002               	movlw	2
  3915  0CF7  00B0               	movwf	??_CRC_check
  3916  0CF8  0830               	movf	??_CRC_check,w
  3917  0CF9  00A6               	movwf	CRC16@size
  3918  0CFA  0836               	movf	CRC_check@DataRCV,w
  3919  0CFB  120A  158A  260E  120A  158A  	fcall	_CRC16
  3920  0D00  1283               	bcf	3,5	;RP0=0, select bank0
  3921  0D01  1303               	bcf	3,6	;RP1=0, select bank0
  3922  0D02  0827               	movf	?_CRC16+1,w
  3923  0D03  00B5               	movwf	CRC_check@crc_val+1
  3924  0D04  0826               	movf	?_CRC16,w
  3925  0D05  00B4               	movwf	CRC_check@crc_val
  3926  0D06                     l4189:	
  3927                           
  3928                           ;manchester_decode.c: 178:  if( (DataRCV->frame[6 -4]==crc_val>>8) && (DataRCV->frame[6 
      +                          -3]==(crc_val&0x00FF)) )
  3929  0D06  0835               	movf	CRC_check@crc_val+1,w
  3930  0D07  00B1               	movwf	??_CRC_check+1
  3931  0D08  0834               	movf	CRC_check@crc_val,w
  3932  0D09  00B0               	movwf	??_CRC_check
  3933  0D0A  0831               	movf	??_CRC_check+1,w
  3934  0D0B  00B0               	movwf	??_CRC_check
  3935  0D0C  01B1               	clrf	??_CRC_check+1
  3936  0D0D  0836               	movf	CRC_check@DataRCV,w
  3937  0D0E  3E02               	addlw	2
  3938  0D0F  0084               	movwf	4
  3939  0D10  1783               	bsf	3,7	;select IRP bank2
  3940  0D11  0800               	movf	0,w
  3941  0D12  00B2               	movwf	??_CRC_check+2
  3942  0D13  01B3               	clrf	??_CRC_check+3
  3943  0D14  0831               	movf	??_CRC_check+1,w
  3944  0D15  0633               	xorwf	??_CRC_check+3,w
  3945  0D16  1D03               	skipz
  3946  0D17  2D1A               	goto	u3975
  3947  0D18  0830               	movf	??_CRC_check,w
  3948  0D19  0632               	xorwf	??_CRC_check+2,w
  3949  0D1A                     u3975:	
  3950  0D1A  1D03               	skipz
  3951  0D1B  2D1D               	goto	u3971
  3952  0D1C  2D1E               	goto	u3970
  3953  0D1D                     u3971:	
  3954  0D1D  2D36               	goto	l4199
  3955  0D1E                     u3970:	
  3956  0D1E                     l4191:	
  3957  0D1E  30FF               	movlw	255
  3958  0D1F  0534               	andwf	CRC_check@crc_val,w
  3959  0D20  00B0               	movwf	??_CRC_check
  3960  0D21  3000               	movlw	0
  3961  0D22  0535               	andwf	CRC_check@crc_val+1,w
  3962  0D23  00B1               	movwf	??_CRC_check+1
  3963  0D24  0836               	movf	CRC_check@DataRCV,w
  3964  0D25  3E03               	addlw	3
  3965  0D26  0084               	movwf	4
  3966  0D27  0800               	movf	0,w
  3967  0D28  00B2               	movwf	??_CRC_check+2
  3968  0D29  01B3               	clrf	??_CRC_check+3
  3969  0D2A  0831               	movf	??_CRC_check+1,w
  3970  0D2B  0633               	xorwf	??_CRC_check+3,w
  3971  0D2C  1D03               	skipz
  3972  0D2D  2D30               	goto	u3985
  3973  0D2E  0830               	movf	??_CRC_check,w
  3974  0D2F  0632               	xorwf	??_CRC_check+2,w
  3975  0D30                     u3985:	
  3976  0D30  1D03               	skipz
  3977  0D31  2D33               	goto	u3981
  3978  0D32  2D34               	goto	u3980
  3979  0D33                     u3981:	
  3980  0D33  2D36               	goto	l4199
  3981  0D34                     u3980:	
  3982  0D34                     l4193:	
  3983                           
  3984                           ;manchester_decode.c: 179:     {;manchester_decode.c: 180:   return 1;
  3985  0D34  3001               	movlw	1
  3986  0D35  2D37               	goto	l308
  3987  0D36                     l4199:	
  3988                           
  3989                           ;manchester_decode.c: 182:  {;manchester_decode.c: 183:   return 0;
  3990  0D36  3000               	movlw	0
  3991  0D37                     l308:	
  3992  0D37  0008               	return
  3993  0D38                     __end_of_CRC_check:	
  3994                           
  3995                           	psect	text15
  3996  0E0E                     __ptext15:	
  3997 ;; *************** function _CRC16 *****************
  3998 ;; Defined at:
  3999 ;;		line 8 in file "crc16.c"
  4000 ;; Parameters:    Size  Location     Type
  4001 ;;  data_tab_ptr    1    wreg     PTR unsigned char 
  4002 ;;		 -> main@DataRCV(5), 
  4003 ;;  size            1    6[BANK0 ] unsigned char 
  4004 ;; Auto vars:     Size  Location     Type
  4005 ;;  data_tab_ptr    1   11[BANK0 ] PTR unsigned char 
  4006 ;;		 -> main@DataRCV(5), 
  4007 ;;  crc             2   14[BANK0 ] unsigned int 
  4008 ;;  i               1   13[BANK0 ] unsigned char 
  4009 ;;  k               1   12[BANK0 ] unsigned char 
  4010 ;; Return value:  Size  Location     Type
  4011 ;;                  2    6[BANK0 ] unsigned int 
  4012 ;; Registers used:
  4013 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  4014 ;; Tracked objects:
  4015 ;;		On entry : 0/0
  4016 ;;		On exit  : 0/0
  4017 ;;		Unchanged: 0/0
  4018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4019 ;;      Params:         0       2       0       0       0
  4020 ;;      Locals:         0       5       0       0       0
  4021 ;;      Temps:          0       3       0       0       0
  4022 ;;      Totals:         0      10       0       0       0
  4023 ;;Total ram usage:       10 bytes
  4024 ;; Hardware stack levels used:    1
  4025 ;; Hardware stack levels required when called:    4
  4026 ;; This function calls:
  4027 ;;		Nothing
  4028 ;; This function is called by:
  4029 ;;		_CRC_check
  4030 ;; This function uses a non-reentrant model
  4031 ;;
  4032                           
  4033                           
  4034                           ;psect for function _CRC16
  4035  0E0E                     _CRC16:	
  4036                           
  4037                           ;incstack = 0
  4038                           ; Regs used in _CRC16: [wreg-fsr0h+status,2+status,0+btemp+1]
  4039                           ;CRC16@data_tab_ptr stored from wreg
  4040  0E0E  1283               	bcf	3,5	;RP0=0, select bank0
  4041  0E0F  1303               	bcf	3,6	;RP1=0, select bank0
  4042  0E10  00AB               	movwf	CRC16@data_tab_ptr
  4043  0E11                     l4079:	
  4044                           
  4045                           ;crc16.c: 8: unsigned int CRC16(unsigned char *data_tab_ptr, unsigned char size);crc16.c
      +                          : 9: {;crc16.c: 10:     const unsigned int generator = 0x1021;;crc16.c: 11:     unsigned
      +                           int crc = 0;
  4046  0E11  01AE               	clrf	CRC16@crc
  4047  0E12  01AF               	clrf	CRC16@crc+1
  4048                           
  4049                           ;crc16.c: 12:     unsigned char k,i;;crc16.c: 14:     for(k=0;k<size;k++)
  4050  0E13  01AC               	clrf	CRC16@k
  4051  0E14  2E4D               	goto	l4099
  4052  0E15                     l4081:	
  4053                           
  4054                           ;crc16.c: 15:     {;crc16.c: 16:         crc ^= (*(data_tab_ptr+k) << 8);
  4055  0E15  082C               	movf	CRC16@k,w
  4056  0E16  072B               	addwf	CRC16@data_tab_ptr,w
  4057  0E17  00A8               	movwf	??_CRC16
  4058  0E18  0828               	movf	??_CRC16,w
  4059  0E19  0084               	movwf	4
  4060  0E1A  1783               	bsf	3,7	;select IRP bank2
  4061  0E1B  0800               	movf	0,w
  4062  0E1C  00A9               	movwf	??_CRC16+1
  4063  0E1D  01AA               	clrf	??_CRC16+2
  4064  0E1E  0829               	movf	??_CRC16+1,w
  4065  0E1F  00AA               	movwf	??_CRC16+2
  4066  0E20  01A9               	clrf	??_CRC16+1
  4067  0E21  0829               	movf	??_CRC16+1,w
  4068  0E22  06AE               	xorwf	CRC16@crc,f
  4069  0E23  082A               	movf	??_CRC16+2,w
  4070  0E24  06AF               	xorwf	CRC16@crc+1,f
  4071  0E25                     l4083:	
  4072                           
  4073                           ;crc16.c: 18:         for (i=0;i<8;i++)
  4074  0E25  01AD               	clrf	CRC16@i
  4075  0E26                     l25:	
  4076                           
  4077                           ;crc16.c: 19:         {;crc16.c: 20:             if ((crc&0x8000)!=0)
  4078  0E26  1FAF               	btfss	CRC16@crc+1,7
  4079  0E27  2E29               	goto	u3851
  4080  0E28  2E2A               	goto	u3850
  4081  0E29                     u3851:	
  4082  0E29  2E38               	goto	l4091
  4083  0E2A                     u3850:	
  4084  0E2A                     l4089:	
  4085                           
  4086                           ;crc16.c: 21:             {;crc16.c: 22:                  crc=(crc<<1)^generator;
  4087  0E2A  082F               	movf	CRC16@crc+1,w
  4088  0E2B  00A9               	movwf	??_CRC16+1
  4089  0E2C  082E               	movf	CRC16@crc,w
  4090  0E2D  00A8               	movwf	??_CRC16
  4091  0E2E  1003               	clrc
  4092  0E2F  0DA8               	rlf	??_CRC16,f
  4093  0E30  0DA9               	rlf	??_CRC16+1,f
  4094  0E31  3021               	movlw	33
  4095  0E32  0628               	xorwf	??_CRC16,w
  4096  0E33  00AE               	movwf	CRC16@crc
  4097  0E34  3010               	movlw	16
  4098  0E35  0629               	xorwf	??_CRC16+1,w
  4099  0E36  00AF               	movwf	CRC16@crc+1
  4100                           
  4101                           ;crc16.c: 23:             }else
  4102  0E37  2E3F               	goto	l4093
  4103  0E38                     l4091:	
  4104                           
  4105                           ;crc16.c: 24:             {;crc16.c: 25:                 crc<<=1;
  4106  0E38  3001               	movlw	1
  4107  0E39                     u3865:	
  4108  0E39  1003               	clrc
  4109  0E3A  0DAE               	rlf	CRC16@crc,f
  4110  0E3B  0DAF               	rlf	CRC16@crc+1,f
  4111  0E3C  3EFF               	addlw	-1
  4112  0E3D  1D03               	skipz
  4113  0E3E  2E39               	goto	u3865
  4114  0E3F                     l4093:	
  4115                           
  4116                           ;crc16.c: 27:         }
  4117  0E3F  3001               	movlw	1
  4118  0E40  00A8               	movwf	??_CRC16
  4119  0E41  0828               	movf	??_CRC16,w
  4120  0E42  07AD               	addwf	CRC16@i,f
  4121  0E43                     l4095:	
  4122  0E43  3008               	movlw	8
  4123  0E44  022D               	subwf	CRC16@i,w
  4124  0E45  1C03               	skipc
  4125  0E46  2E48               	goto	u3871
  4126  0E47  2E49               	goto	u3870
  4127  0E48                     u3871:	
  4128  0E48  2E26               	goto	l25
  4129  0E49                     u3870:	
  4130  0E49                     l4097:	
  4131                           
  4132                           ;crc16.c: 28:     }
  4133  0E49  3001               	movlw	1
  4134  0E4A  00A8               	movwf	??_CRC16
  4135  0E4B  0828               	movf	??_CRC16,w
  4136  0E4C  07AC               	addwf	CRC16@k,f
  4137  0E4D                     l4099:	
  4138  0E4D  0826               	movf	CRC16@size,w
  4139  0E4E  022C               	subwf	CRC16@k,w
  4140  0E4F  1C03               	skipc
  4141  0E50  2E52               	goto	u3881
  4142  0E51  2E53               	goto	u3880
  4143  0E52                     u3881:	
  4144  0E52  2E15               	goto	l4081
  4145  0E53                     u3880:	
  4146  0E53                     l4101:	
  4147                           
  4148                           ;crc16.c: 30:     return crc;
  4149  0E53  082F               	movf	CRC16@crc+1,w
  4150  0E54  00A7               	movwf	?_CRC16+1
  4151  0E55  082E               	movf	CRC16@crc,w
  4152  0E56  00A6               	movwf	?_CRC16
  4153  0E57                     l30:	
  4154  0E57  0008               	return
  4155  0E58                     __end_of_CRC16:	
  4156                           
  4157                           	psect	text16
  4158  0A73                     __ptext16:	
  4159 ;; *************** function _InterruptConfig *****************
  4160 ;; Defined at:
  4161 ;;		line 9 in file "interrupts.c"
  4162 ;; Parameters:    Size  Location     Type
  4163 ;;		None
  4164 ;; Auto vars:     Size  Location     Type
  4165 ;;		None
  4166 ;; Return value:  Size  Location     Type
  4167 ;;                  1    wreg      void 
  4168 ;; Registers used:
  4169 ;;		wreg, status,2, status,0
  4170 ;; Tracked objects:
  4171 ;;		On entry : 0/0
  4172 ;;		On exit  : 0/0
  4173 ;;		Unchanged: 0/0
  4174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4175 ;;      Params:         0       0       0       0       0
  4176 ;;      Locals:         0       0       0       0       0
  4177 ;;      Temps:          0       0       0       0       0
  4178 ;;      Totals:         0       0       0       0       0
  4179 ;;Total ram usage:        0 bytes
  4180 ;; Hardware stack levels used:    1
  4181 ;; Hardware stack levels required when called:    4
  4182 ;; This function calls:
  4183 ;;		Nothing
  4184 ;; This function is called by:
  4185 ;;		_main
  4186 ;; This function uses a non-reentrant model
  4187 ;;
  4188                           
  4189                           
  4190                           ;psect for function _InterruptConfig
  4191  0A73                     _InterruptConfig:	
  4192  0A73                     l4351:	
  4193                           ;incstack = 0
  4194                           ; Regs used in _InterruptConfig: [wreg+status,2+status,0]
  4195                           
  4196                           
  4197                           ;interrupts.c: 12:     OPTION_REGbits.T0CS=0;
  4198  0A73  1683               	bsf	3,5	;RP0=1, select bank1
  4199  0A74  1303               	bcf	3,6	;RP1=0, select bank1
  4200  0A75  1281               	bcf	1,5	;volatile
  4201                           
  4202                           ;interrupts.c: 13:     OPTION_REGbits.PSA=0;
  4203  0A76  1181               	bcf	1,3	;volatile
  4204  0A77                     l4353:	
  4205                           
  4206                           ;interrupts.c: 14:     OPTION_REGbits.PS=0b000;
  4207  0A77  30F8               	movlw	-8
  4208  0A78  0581               	andwf	1,f	;volatile
  4209  0A79                     l4355:	
  4210                           
  4211                           ;interrupts.c: 15:     INTCONbits.T0IE=1;
  4212  0A79  168B               	bsf	11,5	;volatile
  4213  0A7A                     l4357:	
  4214                           
  4215                           ;interrupts.c: 19:     T1CONbits.TMR1CS=0;
  4216  0A7A  1283               	bcf	3,5	;RP0=0, select bank0
  4217  0A7B  1303               	bcf	3,6	;RP1=0, select bank0
  4218  0A7C  1090               	bcf	16,1	;volatile
  4219                           
  4220                           ;interrupts.c: 20:     T1CONbits.T1CKPS=0b00;
  4221  0A7D  30CF               	movlw	-49
  4222  0A7E  0590               	andwf	16,f	;volatile
  4223  0A7F                     l4359:	
  4224                           
  4225                           ;interrupts.c: 23:     INTCONbits.GIE=1;
  4226  0A7F  178B               	bsf	11,7	;volatile
  4227  0A80                     l4361:	
  4228                           
  4229                           ;interrupts.c: 24:     INTCONbits.PEIE=1;
  4230  0A80  170B               	bsf	11,6	;volatile
  4231                           
  4232                           ;interrupts.c: 27:     CCP2CONbits.CCP2M=0b0100;
  4233  0A81  081D               	movf	29,w	;volatile
  4234  0A82  39F0               	andlw	-16
  4235  0A83  3804               	iorlw	4
  4236  0A84  009D               	movwf	29	;volatile
  4237  0A85                     l155:	
  4238  0A85  0008               	return
  4239  0A86                     __end_of_InterruptConfig:	
  4240                           
  4241                           	psect	text17
  4242  0A35                     __ptext17:	
  4243 ;; *************** function _Init_I2C *****************
  4244 ;; Defined at:
  4245 ;;		line 4 in file "hw_i2c.c"
  4246 ;; Parameters:    Size  Location     Type
  4247 ;;		None
  4248 ;; Auto vars:     Size  Location     Type
  4249 ;;		None
  4250 ;; Return value:  Size  Location     Type
  4251 ;;                  1    wreg      void 
  4252 ;; Registers used:
  4253 ;;		wreg, status,2, status,0
  4254 ;; Tracked objects:
  4255 ;;		On entry : 0/0
  4256 ;;		On exit  : 0/0
  4257 ;;		Unchanged: 0/0
  4258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4259 ;;      Params:         0       0       0       0       0
  4260 ;;      Locals:         0       0       0       0       0
  4261 ;;      Temps:          0       0       0       0       0
  4262 ;;      Totals:         0       0       0       0       0
  4263 ;;Total ram usage:        0 bytes
  4264 ;; Hardware stack levels used:    1
  4265 ;; Hardware stack levels required when called:    4
  4266 ;; This function calls:
  4267 ;;		Nothing
  4268 ;; This function is called by:
  4269 ;;		_main
  4270 ;; This function uses a non-reentrant model
  4271 ;;
  4272                           
  4273                           
  4274                           ;psect for function _Init_I2C
  4275  0A35                     _Init_I2C:	
  4276  0A35                     l4363:	
  4277                           ;incstack = 0
  4278                           ; Regs used in _Init_I2C: [wreg+status,2+status,0]
  4279                           
  4280                           
  4281                           ;hw_i2c.c: 6:     const unsigned long int k_i2c_clock=100000;;hw_i2c.c: 9:     SSPCONbit
      +                          s.SSPEN=1;
  4282  0A35  1283               	bcf	3,5	;RP0=0, select bank0
  4283  0A36  1303               	bcf	3,6	;RP1=0, select bank0
  4284  0A37  1694               	bsf	20,5	;volatile
  4285  0A38                     l4365:	
  4286                           
  4287                           ;hw_i2c.c: 11:     SSPCONbits.SSPM=0b1000;
  4288  0A38  0814               	movf	20,w	;volatile
  4289  0A39  39F0               	andlw	-16
  4290  0A3A  3808               	iorlw	8
  4291  0A3B  0094               	movwf	20	;volatile
  4292  0A3C                     l4367:	
  4293                           
  4294                           ;hw_i2c.c: 14:     SSPADD=19;
  4295  0A3C  3013               	movlw	19
  4296  0A3D  1683               	bsf	3,5	;RP0=1, select bank1
  4297  0A3E  1303               	bcf	3,6	;RP1=0, select bank1
  4298  0A3F  0093               	movwf	19	;volatile
  4299  0A40                     l4369:	
  4300                           
  4301                           ;hw_i2c.c: 15:     SSPCON2=0;
  4302  0A40  0191               	clrf	17	;volatile
  4303  0A41                     l4371:	
  4304                           
  4305                           ;hw_i2c.c: 16:     SSPSTAT=0;
  4306  0A41  0194               	clrf	20	;volatile
  4307  0A42                     l555:	
  4308  0A42  0008               	return
  4309  0A43                     __end_of_Init_I2C:	
  4310                           
  4311                           	psect	text18
  4312  0AD4                     __ptext18:	
  4313 ;; *************** function _Global_Inits *****************
  4314 ;; Defined at:
  4315 ;;		line 4 in file "inits.c"
  4316 ;; Parameters:    Size  Location     Type
  4317 ;;		None
  4318 ;; Auto vars:     Size  Location     Type
  4319 ;;		None
  4320 ;; Return value:  Size  Location     Type
  4321 ;;                  1    wreg      void 
  4322 ;; Registers used:
  4323 ;;		wreg, status,2, status,0
  4324 ;; Tracked objects:
  4325 ;;		On entry : 0/0
  4326 ;;		On exit  : 0/0
  4327 ;;		Unchanged: 0/0
  4328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4329 ;;      Params:         0       0       0       0       0
  4330 ;;      Locals:         0       0       0       0       0
  4331 ;;      Temps:          0       0       0       0       0
  4332 ;;      Totals:         0       0       0       0       0
  4333 ;;Total ram usage:        0 bytes
  4334 ;; Hardware stack levels used:    1
  4335 ;; Hardware stack levels required when called:    4
  4336 ;; This function calls:
  4337 ;;		Nothing
  4338 ;; This function is called by:
  4339 ;;		_main
  4340 ;; This function uses a non-reentrant model
  4341 ;;
  4342                           
  4343                           
  4344                           ;psect for function _Global_Inits
  4345  0AD4                     _Global_Inits:	
  4346  0AD4                     l4293:	
  4347                           ;incstack = 0
  4348                           ; Regs used in _Global_Inits: [wreg+status,2+status,0]
  4349                           
  4350                           
  4351                           ;inits.c: 8:     OSCCONbits.IRCF=0b111;
  4352  0AD4  3070               	movlw	112
  4353  0AD5  1683               	bsf	3,5	;RP0=1, select bank1
  4354  0AD6  1303               	bcf	3,6	;RP1=0, select bank1
  4355  0AD7  048F               	iorwf	15,f	;volatile
  4356  0AD8                     l4295:	
  4357                           
  4358                           ;inits.c: 9:     OSCCONbits.OSTS=0;
  4359  0AD8  118F               	bcf	15,3	;volatile
  4360  0AD9                     l4297:	
  4361                           
  4362                           ;inits.c: 10:     OSCCONbits.SCS=1;
  4363  0AD9  140F               	bsf	15,0	;volatile
  4364  0ADA                     l4299:	
  4365                           
  4366                           ;inits.c: 11:     ANSEL=0x00;
  4367  0ADA  1683               	bsf	3,5	;RP0=1, select bank3
  4368  0ADB  1703               	bsf	3,6	;RP1=1, select bank3
  4369  0ADC  0188               	clrf	8	;volatile
  4370  0ADD                     l4301:	
  4371                           
  4372                           ;inits.c: 12:     ANSELH=0x00;
  4373  0ADD  0189               	clrf	9	;volatile
  4374  0ADE                     l4303:	
  4375                           
  4376                           ;inits.c: 16:     TRISC0=0;
  4377  0ADE  1683               	bsf	3,5	;RP0=1, select bank1
  4378  0ADF  1303               	bcf	3,6	;RP1=0, select bank1
  4379  0AE0  1007               	bcf	7,0	;volatile
  4380  0AE1                     l4305:	
  4381                           
  4382                           ;inits.c: 17:     TRISC1=1;
  4383  0AE1  1487               	bsf	7,1	;volatile
  4384  0AE2                     l4307:	
  4385                           
  4386                           ;inits.c: 18:     TRISC2=0;
  4387  0AE2  1107               	bcf	7,2	;volatile
  4388  0AE3                     l4309:	
  4389                           
  4390                           ;inits.c: 19:     TRISC3=1;
  4391  0AE3  1587               	bsf	7,3	;volatile
  4392  0AE4                     l4311:	
  4393                           
  4394                           ;inits.c: 20:     TRISC4=1;
  4395  0AE4  1607               	bsf	7,4	;volatile
  4396  0AE5                     l4313:	
  4397                           
  4398                           ;inits.c: 21:     TRISC5=1;
  4399  0AE5  1687               	bsf	7,5	;volatile
  4400  0AE6                     l4315:	
  4401                           
  4402                           ;inits.c: 22:     TRISC6=0;
  4403  0AE6  1307               	bcf	7,6	;volatile
  4404  0AE7                     l4317:	
  4405                           
  4406                           ;inits.c: 23:     TRISC7=1;
  4407  0AE7  1787               	bsf	7,7	;volatile
  4408  0AE8                     l4319:	
  4409                           
  4410                           ;inits.c: 26:     TRISA0=0;
  4411  0AE8  1005               	bcf	5,0	;volatile
  4412  0AE9                     l4321:	
  4413                           
  4414                           ;inits.c: 27:     TRISA1=0;
  4415  0AE9  1085               	bcf	5,1	;volatile
  4416  0AEA                     l4323:	
  4417                           
  4418                           ;inits.c: 28:     TRISA2=0;
  4419  0AEA  1105               	bcf	5,2	;volatile
  4420  0AEB                     l4325:	
  4421                           
  4422                           ;inits.c: 29:     TRISA3=0;
  4423  0AEB  1185               	bcf	5,3	;volatile
  4424  0AEC                     l4327:	
  4425                           
  4426                           ;inits.c: 30:     TRISA4=0;
  4427  0AEC  1205               	bcf	5,4	;volatile
  4428  0AED                     l4329:	
  4429                           
  4430                           ;inits.c: 31:     TRISA5=0;
  4431  0AED  1285               	bcf	5,5	;volatile
  4432  0AEE                     l4331:	
  4433                           
  4434                           ;inits.c: 32:     TRISA6=0;
  4435  0AEE  1305               	bcf	5,6	;volatile
  4436  0AEF                     l4333:	
  4437                           
  4438                           ;inits.c: 33:     TRISA7=0;
  4439  0AEF  1385               	bcf	5,7	;volatile
  4440  0AF0                     l4335:	
  4441                           
  4442                           ;inits.c: 35:     TRISB0=1;
  4443  0AF0  1406               	bsf	6,0	;volatile
  4444  0AF1                     l4337:	
  4445                           
  4446                           ;inits.c: 36:     TRISB1=1;
  4447  0AF1  1486               	bsf	6,1	;volatile
  4448  0AF2                     l4339:	
  4449                           
  4450                           ;inits.c: 37:     TRISB2=1;
  4451  0AF2  1506               	bsf	6,2	;volatile
  4452  0AF3                     l4341:	
  4453                           
  4454                           ;inits.c: 38:     TRISB3=1;
  4455  0AF3  1586               	bsf	6,3	;volatile
  4456  0AF4                     l4343:	
  4457                           
  4458                           ;inits.c: 39:     TRISB4=0;
  4459  0AF4  1206               	bcf	6,4	;volatile
  4460  0AF5                     l4345:	
  4461                           
  4462                           ;inits.c: 40:     TRISB5=0;
  4463  0AF5  1286               	bcf	6,5	;volatile
  4464  0AF6                     l4347:	
  4465                           
  4466                           ;inits.c: 41:     TRISB6=0;
  4467  0AF6  1306               	bcf	6,6	;volatile
  4468  0AF7                     l4349:	
  4469                           
  4470                           ;inits.c: 42:     TRISB7=0;
  4471  0AF7  1386               	bcf	6,7	;volatile
  4472  0AF8                     l108:	
  4473  0AF8  0008               	return
  4474  0AF9                     __end_of_Global_Inits:	
  4475                           
  4476                           	psect	text19
  4477  03CC                     __ptext19:	
  4478 ;; *************** function _Button_Init *****************
  4479 ;; Defined at:
  4480 ;;		line 44 in file "key-handler.c"
  4481 ;; Parameters:    Size  Location     Type
  4482 ;;  keydef          1    wreg     PTR struct .
  4483 ;;		 -> main@keydef(6), 
  4484 ;; Auto vars:     Size  Location     Type
  4485 ;;  keydef          1    7[BANK0 ] PTR struct .
  4486 ;;		 -> main@keydef(6), 
  4487 ;; Return value:  Size  Location     Type
  4488 ;;                  1    wreg      void 
  4489 ;; Registers used:
  4490 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4491 ;; Tracked objects:
  4492 ;;		On entry : 0/0
  4493 ;;		On exit  : 0/0
  4494 ;;		Unchanged: 0/0
  4495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4496 ;;      Params:         0       0       0       0       0
  4497 ;;      Locals:         0       1       0       0       0
  4498 ;;      Temps:          0       1       0       0       0
  4499 ;;      Totals:         0       2       0       0       0
  4500 ;;Total ram usage:        2 bytes
  4501 ;; Hardware stack levels used:    1
  4502 ;; Hardware stack levels required when called:    4
  4503 ;; This function calls:
  4504 ;;		Nothing
  4505 ;; This function is called by:
  4506 ;;		_main
  4507 ;; This function uses a non-reentrant model
  4508 ;;
  4509                           
  4510                           
  4511                           ;psect for function _Button_Init
  4512  03CC                     _Button_Init:	
  4513                           
  4514                           ;incstack = 0
  4515                           ; Regs used in _Button_Init: [wreg-fsr0h+status,2+status,0]
  4516                           ;Button_Init@keydef stored from wreg
  4517  03CC  1283               	bcf	3,5	;RP0=0, select bank0
  4518  03CD  1303               	bcf	3,6	;RP1=0, select bank0
  4519  03CE  00A7               	movwf	Button_Init@keydef
  4520  03CF                     l4373:	
  4521                           
  4522                           ;key-handler.c: 44: void Button_Init (KeyPointerStruct *keydef);key-handler.c: 45: {;key
      +                          -handler.c: 46:     static KeyStruct set_rtc;;key-handler.c: 47:     static KeyStruct se
      +                          t_time1;;key-handler.c: 48:     static KeyStruct set_time2;;key-handler.c: 49:     stati
      +                          c KeyStruct set_right;;key-handler.c: 50:     static KeyStruct set_up;;key-handler.c: 51
      +                          :     static KeyStruct set_down;;key-handler.c: 53:     keydef->set_rtc=&set_rtc;
  4523  03CF  30E1               	movlw	(low (Button_Init@set_rtc| 0))& (0+255)
  4524  03D0  00A6               	movwf	??_Button_Init
  4525  03D1  0827               	movf	Button_Init@keydef,w
  4526  03D2  0084               	movwf	4
  4527  03D3  0826               	movf	??_Button_Init,w
  4528  03D4  1783               	bsf	3,7	;select IRP bank2
  4529  03D5  0080               	movwf	0
  4530                           
  4531                           ;key-handler.c: 54:     keydef->set_time1=&set_time1;
  4532  03D6  30DA               	movlw	(low (Button_Init@set_time1| 0))& (0+255)
  4533  03D7  00A6               	movwf	??_Button_Init
  4534  03D8  0A27               	incf	Button_Init@keydef,w
  4535  03D9  0084               	movwf	4
  4536  03DA  0826               	movf	??_Button_Init,w
  4537  03DB  0080               	movwf	0
  4538  03DC                     l4375:	
  4539                           
  4540                           ;key-handler.c: 55:     keydef->set_time2=&set_time2;
  4541  03DC  30D3               	movlw	(low (Button_Init@set_time2| 0))& (0+255)
  4542  03DD  00A6               	movwf	??_Button_Init
  4543  03DE  0827               	movf	Button_Init@keydef,w
  4544  03DF  3E02               	addlw	2
  4545  03E0  0084               	movwf	4
  4546  03E1  0826               	movf	??_Button_Init,w
  4547  03E2  0080               	movwf	0
  4548  03E3                     l4377:	
  4549                           
  4550                           ;key-handler.c: 56:     keydef->set_right=&set_right;
  4551  03E3  30CC               	movlw	(low (Button_Init@set_right| 0))& (0+255)
  4552  03E4  00A6               	movwf	??_Button_Init
  4553  03E5  0827               	movf	Button_Init@keydef,w
  4554  03E6  3E03               	addlw	3
  4555  03E7  0084               	movwf	4
  4556  03E8  0826               	movf	??_Button_Init,w
  4557  03E9  0080               	movwf	0
  4558  03EA                     l4379:	
  4559                           
  4560                           ;key-handler.c: 57:     keydef->set_up=&set_up;
  4561  03EA  30C5               	movlw	(low (Button_Init@set_up| 0))& (0+255)
  4562  03EB  00A6               	movwf	??_Button_Init
  4563  03EC  0827               	movf	Button_Init@keydef,w
  4564  03ED  3E04               	addlw	4
  4565  03EE  0084               	movwf	4
  4566  03EF  0826               	movf	??_Button_Init,w
  4567  03F0  0080               	movwf	0
  4568  03F1                     l4381:	
  4569                           
  4570                           ;key-handler.c: 58:     keydef->set_down=&set_down;
  4571  03F1  30BE               	movlw	(low (Button_Init@set_down| 0))& (0+255)
  4572  03F2  00A6               	movwf	??_Button_Init
  4573  03F3  0827               	movf	Button_Init@keydef,w
  4574  03F4  3E05               	addlw	5
  4575  03F5  0084               	movwf	4
  4576  03F6  0826               	movf	??_Button_Init,w
  4577  03F7  0080               	movwf	0
  4578  03F8                     l4383:	
  4579                           
  4580                           ;key-handler.c: 60:     set_rtc.pin=0;
  4581  03F8  1683               	bsf	3,5	;RP0=1, select bank1
  4582  03F9  1303               	bcf	3,6	;RP1=0, select bank1
  4583  03FA  01E2               	clrf	(Button_Init@set_rtc^(0+128)+1)
  4584  03FB                     l4385:	
  4585                           
  4586                           ;key-handler.c: 61:     set_rtc.port=&PORTB;
  4587  03FB  3000               	movlw	0
  4588  03FC  00E5               	movwf	((low ((Button_Init@set_rtc| 0+3))+1))^(0+128)
  4589  03FD  3006               	movlw	6
  4590  03FE  00E4               	movwf	(low ((Button_Init@set_rtc| 0+3)))^(0+128)
  4591  03FF                     l4387:	
  4592                           
  4593                           ;key-handler.c: 62:     set_rtc.button_short_function=Set_RTC_Button_Short;
  4594  03FF  3004               	movlw	(low (fp__Set_RTC_Button_Short-fpbase))& (0+255)
  4595  0400  1283               	bcf	3,5	;RP0=0, select bank0
  4596  0401  1303               	bcf	3,6	;RP1=0, select bank0
  4597  0402  00A6               	movwf	??_Button_Init
  4598  0403  0826               	movf	??_Button_Init,w
  4599  0404  1683               	bsf	3,5	;RP0=1, select bank1
  4600  0405  1303               	bcf	3,6	;RP1=0, select bank1
  4601  0406  00E6               	movwf	(low ((Button_Init@set_rtc| 0+5)))^(0+128)
  4602  0407                     l4389:	
  4603                           
  4604                           ;key-handler.c: 63:     set_rtc.button_long_function=0;
  4605  0407  01E7               	clrf	(low ((Button_Init@set_rtc| 0+6)))^(0+128)
  4606  0408                     l4391:	
  4607                           
  4608                           ;key-handler.c: 64:     set_rtc.klock=0;
  4609  0408  01E1               	clrf	Button_Init@set_rtc^(0+128)
  4610  0409                     l4393:	
  4611                           
  4612                           ;key-handler.c: 65:     set_rtc.lock_long_press=0;
  4613  0409  01E3               	clrf	(Button_Init@set_rtc^(0+128)+2)
  4614  040A                     l4395:	
  4615                           
  4616                           ;key-handler.c: 67:     set_time1.pin=7;
  4617  040A  3007               	movlw	7
  4618  040B  1283               	bcf	3,5	;RP0=0, select bank0
  4619  040C  1303               	bcf	3,6	;RP1=0, select bank0
  4620  040D  00A6               	movwf	??_Button_Init
  4621  040E  0826               	movf	??_Button_Init,w
  4622  040F  1683               	bsf	3,5	;RP0=1, select bank1
  4623  0410  1303               	bcf	3,6	;RP1=0, select bank1
  4624  0411  00DB               	movwf	(Button_Init@set_time1^(0+128)+1)
  4625  0412                     l4397:	
  4626                           
  4627                           ;key-handler.c: 68:     set_time1.port=&PORTC;
  4628  0412  3000               	movlw	0
  4629  0413  00DE               	movwf	((low ((Button_Init@set_time1| 0+3))+1))^(0+128)
  4630  0414  3007               	movlw	7
  4631  0415  00DD               	movwf	(low ((Button_Init@set_time1| 0+3)))^(0+128)
  4632  0416                     l4399:	
  4633                           
  4634                           ;key-handler.c: 69:     set_time1.button_short_function=Set_Time1_Button_Short;
  4635  0416  3007               	movlw	(low (fp__Set_Time1_Button_Short-fpbase))& (0+255)
  4636  0417  1283               	bcf	3,5	;RP0=0, select bank0
  4637  0418  1303               	bcf	3,6	;RP1=0, select bank0
  4638  0419  00A6               	movwf	??_Button_Init
  4639  041A  0826               	movf	??_Button_Init,w
  4640  041B  1683               	bsf	3,5	;RP0=1, select bank1
  4641  041C  1303               	bcf	3,6	;RP1=0, select bank1
  4642  041D  00DF               	movwf	(low ((Button_Init@set_time1| 0+5)))^(0+128)
  4643  041E                     l4401:	
  4644                           
  4645                           ;key-handler.c: 70:     set_time1.button_long_function=0;
  4646  041E  01E0               	clrf	(low ((Button_Init@set_time1| 0+6)))^(0+128)
  4647  041F                     l4403:	
  4648                           
  4649                           ;key-handler.c: 71:     set_time1.klock=0;
  4650  041F  01DA               	clrf	Button_Init@set_time1^(0+128)
  4651  0420                     l4405:	
  4652                           
  4653                           ;key-handler.c: 72:     set_time1.lock_long_press=0;
  4654  0420  01DC               	clrf	(Button_Init@set_time1^(0+128)+2)
  4655  0421                     l4407:	
  4656                           
  4657                           ;key-handler.c: 74:     set_time2.pin=5;
  4658  0421  3005               	movlw	5
  4659  0422  1283               	bcf	3,5	;RP0=0, select bank0
  4660  0423  1303               	bcf	3,6	;RP1=0, select bank0
  4661  0424  00A6               	movwf	??_Button_Init
  4662  0425  0826               	movf	??_Button_Init,w
  4663  0426  1683               	bsf	3,5	;RP0=1, select bank1
  4664  0427  1303               	bcf	3,6	;RP1=0, select bank1
  4665  0428  00D4               	movwf	(Button_Init@set_time2^(0+128)+1)
  4666  0429                     l4409:	
  4667                           
  4668                           ;key-handler.c: 75:     set_time2.port=&PORTC;
  4669  0429  3000               	movlw	0
  4670  042A  00D7               	movwf	((low ((Button_Init@set_time2| 0+3))+1))^(0+128)
  4671  042B  3007               	movlw	7
  4672  042C  00D6               	movwf	(low ((Button_Init@set_time2| 0+3)))^(0+128)
  4673  042D                     l4411:	
  4674                           
  4675                           ;key-handler.c: 76:     set_time2.button_short_function=Set_Time2_Button_Short;
  4676  042D  300A               	movlw	(low (fp__Set_Time2_Button_Short-fpbase))& (0+255)
  4677  042E  1283               	bcf	3,5	;RP0=0, select bank0
  4678  042F  1303               	bcf	3,6	;RP1=0, select bank0
  4679  0430  00A6               	movwf	??_Button_Init
  4680  0431  0826               	movf	??_Button_Init,w
  4681  0432  1683               	bsf	3,5	;RP0=1, select bank1
  4682  0433  1303               	bcf	3,6	;RP1=0, select bank1
  4683  0434  00D8               	movwf	(low ((Button_Init@set_time2| 0+5)))^(0+128)
  4684  0435                     l4413:	
  4685                           
  4686                           ;key-handler.c: 77:     set_time2.button_long_function=0;
  4687  0435  01D9               	clrf	(low ((Button_Init@set_time2| 0+6)))^(0+128)
  4688  0436                     l4415:	
  4689                           
  4690                           ;key-handler.c: 78:     set_time2.klock=0;
  4691  0436  01D3               	clrf	Button_Init@set_time2^(0+128)
  4692  0437                     l4417:	
  4693                           
  4694                           ;key-handler.c: 79:     set_time2.lock_long_press=0;
  4695  0437  01D5               	clrf	(Button_Init@set_time2^(0+128)+2)
  4696  0438                     l4419:	
  4697                           
  4698                           ;key-handler.c: 81:     set_right.pin=1;
  4699  0438  01CD               	clrf	(Button_Init@set_right^(0+128)+1)
  4700  0439  0ACD               	incf	(Button_Init@set_right^(0+128)+1),f
  4701  043A                     l4421:	
  4702                           
  4703                           ;key-handler.c: 82:     set_right.port=&PORTB;
  4704  043A  3000               	movlw	0
  4705  043B  00D0               	movwf	((low ((Button_Init@set_right| 0+3))+1))^(0+128)
  4706  043C  3006               	movlw	6
  4707  043D  00CF               	movwf	(low ((Button_Init@set_right| 0+3)))^(0+128)
  4708  043E                     l4423:	
  4709                           
  4710                           ;key-handler.c: 83:     set_right.button_short_function=Right_Button_Short;
  4711  043E  300D               	movlw	(low (fp__Right_Button_Short-fpbase))& (0+255)
  4712  043F  1283               	bcf	3,5	;RP0=0, select bank0
  4713  0440  1303               	bcf	3,6	;RP1=0, select bank0
  4714  0441  00A6               	movwf	??_Button_Init
  4715  0442  0826               	movf	??_Button_Init,w
  4716  0443  1683               	bsf	3,5	;RP0=1, select bank1
  4717  0444  1303               	bcf	3,6	;RP1=0, select bank1
  4718  0445  00D1               	movwf	(low ((Button_Init@set_right| 0+5)))^(0+128)
  4719  0446                     l4425:	
  4720                           
  4721                           ;key-handler.c: 84:     set_right.button_long_function=0;
  4722  0446  01D2               	clrf	(low ((Button_Init@set_right| 0+6)))^(0+128)
  4723  0447                     l4427:	
  4724                           
  4725                           ;key-handler.c: 85:     set_right.klock=0;
  4726  0447  01CC               	clrf	Button_Init@set_right^(0+128)
  4727  0448                     l4429:	
  4728                           
  4729                           ;key-handler.c: 86:     set_right.lock_long_press=0;
  4730  0448  01CE               	clrf	(Button_Init@set_right^(0+128)+2)
  4731  0449                     l4431:	
  4732                           
  4733                           ;key-handler.c: 88:     set_up.pin=3;
  4734  0449  3003               	movlw	3
  4735  044A  1283               	bcf	3,5	;RP0=0, select bank0
  4736  044B  1303               	bcf	3,6	;RP1=0, select bank0
  4737  044C  00A6               	movwf	??_Button_Init
  4738  044D  0826               	movf	??_Button_Init,w
  4739  044E  1683               	bsf	3,5	;RP0=1, select bank1
  4740  044F  1303               	bcf	3,6	;RP1=0, select bank1
  4741  0450  00C6               	movwf	(Button_Init@set_up^(0+128)+1)
  4742  0451                     l4433:	
  4743                           
  4744                           ;key-handler.c: 89:     set_up.port=&PORTB;
  4745  0451  3000               	movlw	0
  4746  0452  00C9               	movwf	((low ((Button_Init@set_up| 0+3))+1))^(0+128)
  4747  0453  3006               	movlw	6
  4748  0454  00C8               	movwf	(low ((Button_Init@set_up| 0+3)))^(0+128)
  4749  0455                     l4435:	
  4750                           
  4751                           ;key-handler.c: 90:     set_up.button_short_function=Up_Button_Short;
  4752  0455  3001               	movlw	(low (fp__Up_Button_Short-fpbase))& (0+255)
  4753  0456  1283               	bcf	3,5	;RP0=0, select bank0
  4754  0457  1303               	bcf	3,6	;RP1=0, select bank0
  4755  0458  00A6               	movwf	??_Button_Init
  4756  0459  0826               	movf	??_Button_Init,w
  4757  045A  1683               	bsf	3,5	;RP0=1, select bank1
  4758  045B  1303               	bcf	3,6	;RP1=0, select bank1
  4759  045C  00CA               	movwf	(low ((Button_Init@set_up| 0+5)))^(0+128)
  4760  045D                     l4437:	
  4761                           
  4762                           ;key-handler.c: 91:     set_up.button_long_function=0;
  4763  045D  01CB               	clrf	(low ((Button_Init@set_up| 0+6)))^(0+128)
  4764  045E                     l4439:	
  4765                           
  4766                           ;key-handler.c: 92:     set_up.klock=0;
  4767  045E  01C5               	clrf	Button_Init@set_up^(0+128)
  4768  045F                     l4441:	
  4769                           
  4770                           ;key-handler.c: 93:     set_up.lock_long_press=0;
  4771  045F  01C7               	clrf	(Button_Init@set_up^(0+128)+2)
  4772  0460                     l4443:	
  4773                           
  4774                           ;key-handler.c: 95:     set_down.pin=2;
  4775  0460  3002               	movlw	2
  4776  0461  1283               	bcf	3,5	;RP0=0, select bank0
  4777  0462  1303               	bcf	3,6	;RP1=0, select bank0
  4778  0463  00A6               	movwf	??_Button_Init
  4779  0464  0826               	movf	??_Button_Init,w
  4780  0465  1683               	bsf	3,5	;RP0=1, select bank1
  4781  0466  1303               	bcf	3,6	;RP1=0, select bank1
  4782  0467  00BF               	movwf	(Button_Init@set_down^(0+128)+1)
  4783  0468                     l4445:	
  4784                           
  4785                           ;key-handler.c: 96:     set_down.port=&PORTB;
  4786  0468  3000               	movlw	0
  4787  0469  00C2               	movwf	((low ((Button_Init@set_down| 0+3))+1))^(0+128)
  4788  046A  3006               	movlw	6
  4789  046B  00C1               	movwf	(low ((Button_Init@set_down| 0+3)))^(0+128)
  4790  046C                     l4447:	
  4791                           
  4792                           ;key-handler.c: 97:     set_down.button_short_function=Down_Button_Short;
  4793  046C  3010               	movlw	(low (fp__Down_Button_Short-fpbase))& (0+255)
  4794  046D  1283               	bcf	3,5	;RP0=0, select bank0
  4795  046E  1303               	bcf	3,6	;RP1=0, select bank0
  4796  046F  00A6               	movwf	??_Button_Init
  4797  0470  0826               	movf	??_Button_Init,w
  4798  0471  1683               	bsf	3,5	;RP0=1, select bank1
  4799  0472  1303               	bcf	3,6	;RP1=0, select bank1
  4800  0473  00C3               	movwf	(low ((Button_Init@set_down| 0+5)))^(0+128)
  4801  0474                     l4449:	
  4802                           
  4803                           ;key-handler.c: 98:     set_down.button_long_function=0;
  4804  0474  01C4               	clrf	(low ((Button_Init@set_down| 0+6)))^(0+128)
  4805  0475                     l4451:	
  4806                           
  4807                           ;key-handler.c: 99:     set_down.klock=0;
  4808  0475  01BE               	clrf	Button_Init@set_down^(0+128)
  4809  0476                     l4453:	
  4810                           
  4811                           ;key-handler.c: 100:     set_down.lock_long_press=0;
  4812  0476  01C0               	clrf	(Button_Init@set_down^(0+128)+2)
  4813  0477                     l631:	
  4814  0477  0008               	return
  4815  0478                     __end_of_Button_Init:	
  4816                           
  4817                           	psect	text20
  4818  0D7E                     __ptext20:	
  4819 ;; *************** function _Button_Handler *****************
  4820 ;; Defined at:
  4821 ;;		line 104 in file "key-handler.c"
  4822 ;; Parameters:    Size  Location     Type
  4823 ;;  keydef          1    wreg     PTR struct .
  4824 ;;		 -> main@keydef(6), 
  4825 ;; Auto vars:     Size  Location     Type
  4826 ;;  keydef          1   39[BANK0 ] PTR struct .
  4827 ;;		 -> main@keydef(6), 
  4828 ;; Return value:  Size  Location     Type
  4829 ;;                  1    wreg      void 
  4830 ;; Registers used:
  4831 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4832 ;; Tracked objects:
  4833 ;;		On entry : 0/0
  4834 ;;		On exit  : 0/0
  4835 ;;		Unchanged: 0/0
  4836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4837 ;;      Params:         0       0       0       0       0
  4838 ;;      Locals:         0       1       0       0       0
  4839 ;;      Temps:          0       0       0       0       0
  4840 ;;      Totals:         0       1       0       0       0
  4841 ;;Total ram usage:        1 bytes
  4842 ;; Hardware stack levels used:    1
  4843 ;; Hardware stack levels required when called:   10
  4844 ;; This function calls:
  4845 ;;		_Key_Press
  4846 ;; This function is called by:
  4847 ;;		_main
  4848 ;; This function uses a non-reentrant model
  4849 ;;
  4850                           
  4851                           
  4852                           ;psect for function _Button_Handler
  4853  0D7E                     _Button_Handler:	
  4854                           
  4855                           ;incstack = 0
  4856 ;; hardware stack exceeded
  4857                           ; Regs used in _Button_Handler: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4858                           ;Button_Handler@keydef stored from wreg
  4859  0D7E  1283               	bcf	3,5	;RP0=0, select bank0
  4860  0D7F  1303               	bcf	3,6	;RP1=0, select bank0
  4861  0D80  00C7               	movwf	Button_Handler@keydef
  4862  0D81                     l4455:	
  4863                           
  4864                           ;key-handler.c: 104: void Button_Handler(KeyPointerStruct *keydef);key-handler.c: 105: {
      +                          ;key-handler.c: 106:     Key_Press(keydef->set_rtc);
  4865  0D81  0847               	movf	Button_Handler@keydef,w
  4866  0D82  0084               	movwf	4
  4867  0D83  1783               	bsf	3,7	;select IRP bank2
  4868  0D84  0800               	movf	0,w
  4869  0D85  120A  118A  2520  120A  158A  	fcall	_Key_Press
  4870                           
  4871                           ;key-handler.c: 107:     Key_Press(keydef->set_down);
  4872  0D8A  1283               	bcf	3,5	;RP0=0, select bank0
  4873  0D8B  1303               	bcf	3,6	;RP1=0, select bank0
  4874  0D8C  0847               	movf	Button_Handler@keydef,w
  4875  0D8D  3E05               	addlw	5
  4876  0D8E  0084               	movwf	4
  4877  0D8F  1783               	bsf	3,7	;select IRP bank2
  4878  0D90  0800               	movf	0,w
  4879  0D91  120A  118A  2520  120A  158A  	fcall	_Key_Press
  4880                           
  4881                           ;key-handler.c: 108:     Key_Press(keydef->set_right);
  4882  0D96  1283               	bcf	3,5	;RP0=0, select bank0
  4883  0D97  1303               	bcf	3,6	;RP1=0, select bank0
  4884  0D98  0847               	movf	Button_Handler@keydef,w
  4885  0D99  3E03               	addlw	3
  4886  0D9A  0084               	movwf	4
  4887  0D9B  1783               	bsf	3,7	;select IRP bank2
  4888  0D9C  0800               	movf	0,w
  4889  0D9D  120A  118A  2520  120A  158A  	fcall	_Key_Press
  4890                           
  4891                           ;key-handler.c: 109:     Key_Press(keydef->set_time1);
  4892  0DA2  1283               	bcf	3,5	;RP0=0, select bank0
  4893  0DA3  1303               	bcf	3,6	;RP1=0, select bank0
  4894  0DA4  0A47               	incf	Button_Handler@keydef,w
  4895  0DA5  0084               	movwf	4
  4896  0DA6  1783               	bsf	3,7	;select IRP bank2
  4897  0DA7  0800               	movf	0,w
  4898  0DA8  120A  118A  2520  120A  158A  	fcall	_Key_Press
  4899                           
  4900                           ;key-handler.c: 110:     Key_Press(keydef->set_time2);
  4901  0DAD  1283               	bcf	3,5	;RP0=0, select bank0
  4902  0DAE  1303               	bcf	3,6	;RP1=0, select bank0
  4903  0DAF  0847               	movf	Button_Handler@keydef,w
  4904  0DB0  3E02               	addlw	2
  4905  0DB1  0084               	movwf	4
  4906  0DB2  1783               	bsf	3,7	;select IRP bank2
  4907  0DB3  0800               	movf	0,w
  4908  0DB4  120A  118A  2520  120A  158A  	fcall	_Key_Press
  4909                           
  4910                           ;key-handler.c: 111:     Key_Press(keydef->set_up);
  4911  0DB9  1283               	bcf	3,5	;RP0=0, select bank0
  4912  0DBA  1303               	bcf	3,6	;RP1=0, select bank0
  4913  0DBB  0847               	movf	Button_Handler@keydef,w
  4914  0DBC  3E04               	addlw	4
  4915  0DBD  0084               	movwf	4
  4916  0DBE  1783               	bsf	3,7	;select IRP bank2
  4917  0DBF  0800               	movf	0,w
  4918  0DC0  120A  118A  2520  120A  158A  	fcall	_Key_Press
  4919  0DC5                     l634:	
  4920  0DC5  0008               	return
  4921  0DC6                     __end_of_Button_Handler:	
  4922                           
  4923                           	psect	text21
  4924  0520                     __ptext21:	
  4925 ;; *************** function _Key_Press *****************
  4926 ;; Defined at:
  4927 ;;		line 10 in file "key-handler.c"
  4928 ;; Parameters:    Size  Location     Type
  4929 ;;  button          1    wreg     PTR struct .
  4930 ;;		 -> Button_Init@set_down(7), Button_Init@set_up(7), Button_Init@set_right(7), Button_Init@set_time2(7), 
  4931 ;;		 -> Button_Init@set_time1(7), Button_Init@set_rtc(7), 
  4932 ;; Auto vars:     Size  Location     Type
  4933 ;;  button          1   38[BANK0 ] PTR struct .
  4934 ;;		 -> Button_Init@set_down(7), Button_Init@set_up(7), Button_Init@set_right(7), Button_Init@set_time2(7), 
  4935 ;;		 -> Button_Init@set_time1(7), Button_Init@set_rtc(7), 
  4936 ;; Return value:  Size  Location     Type
  4937 ;;                  1    wreg      void 
  4938 ;; Registers used:
  4939 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4940 ;; Tracked objects:
  4941 ;;		On entry : 0/0
  4942 ;;		On exit  : 0/0
  4943 ;;		Unchanged: 0/0
  4944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4945 ;;      Params:         0       0       0       0       0
  4946 ;;      Locals:         0       1       0       0       0
  4947 ;;      Temps:          0       4       0       0       0
  4948 ;;      Totals:         0       5       0       0       0
  4949 ;;Total ram usage:        5 bytes
  4950 ;; Hardware stack levels used:    1
  4951 ;; Hardware stack levels required when called:    9
  4952 ;; This function calls:
  4953 ;;		_Down_Button_Short
  4954 ;;		_Right_Button_Short
  4955 ;;		_SendUART
  4956 ;;		_Set_RTC_Button_Short
  4957 ;;		_Set_Time1_Button_Short
  4958 ;;		_Set_Time2_Button_Short
  4959 ;;		_Up_Button_Short
  4960 ;; This function is called by:
  4961 ;;		_Button_Handler
  4962 ;; This function uses a non-reentrant model
  4963 ;;
  4964                           
  4965                           
  4966                           ;psect for function _Key_Press
  4967  0520                     _Key_Press:	
  4968                           
  4969                           ;incstack = 0
  4970 ;; hardware stack exceeded
  4971                           ; Regs used in _Key_Press: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4972                           ;Key_Press@button stored from wreg
  4973  0520  1283               	bcf	3,5	;RP0=0, select bank0
  4974  0521  1303               	bcf	3,6	;RP1=0, select bank0
  4975  0522  00C6               	movwf	Key_Press@button
  4976  0523                     l4255:	
  4977                           
  4978                           ;key-handler.c: 10: void Key_Press(KeyStruct *button);key-handler.c: 11: {;key-handler.c
      +                          : 12:  if(button->klock==0 && (*button->port & 1<<button->pin)==0)
  4979  0523  0846               	movf	Key_Press@button,w
  4980  0524  0084               	movwf	4
  4981  0525  1383               	bcf	3,7	;select IRP bank0
  4982  0526  0800               	movf	0,w
  4983  0527  1D03               	btfss	3,2
  4984  0528  2D2A               	goto	u4091
  4985  0529  2D2B               	goto	u4090
  4986  052A                     u4091:	
  4987  052A  2D6B               	goto	l4269
  4988  052B                     u4090:	
  4989  052B                     l4257:	
  4990  052B  0846               	movf	Key_Press@button,w
  4991  052C  3E03               	addlw	3
  4992  052D  0084               	movwf	4
  4993  052E  0800               	movf	0,w
  4994  052F  00C2               	movwf	??_Key_Press
  4995  0530  0A84               	incf	4,f
  4996  0531  0800               	movf	0,w
  4997  0532  00C3               	movwf	??_Key_Press+1
  4998  0533  0842               	movf	??_Key_Press,w
  4999  0534  0084               	movwf	4
  5000  0535  1783               	bsf	3,7
  5001  0536  1C43               	btfss	??_Key_Press+1,0
  5002  0537  1383               	bcf	3,7
  5003  0538  0800               	movf	0,w
  5004  0539  00C4               	movwf	??_Key_Press+2
  5005  053A  3001               	movlw	1
  5006  053B  00C5               	movwf	??_Key_Press+3
  5007  053C  0A46               	incf	Key_Press@button,w
  5008  053D  0084               	movwf	4
  5009  053E  1383               	bcf	3,7	;select IRP bank0
  5010  053F  0A00               	incf	0,w
  5011  0540  2D43               	goto	u4104
  5012  0541                     u4105:	
  5013  0541  1003               	clrc
  5014  0542  0DC5               	rlf	??_Key_Press+3,f
  5015  0543                     u4104:	
  5016  0543  3EFF               	addlw	-1
  5017  0544  1D03               	skipz
  5018  0545  2D41               	goto	u4105
  5019  0546  0845               	movf	??_Key_Press+3,w
  5020  0547  0544               	andwf	??_Key_Press+2,w
  5021  0548  1D03               	btfss	3,2
  5022  0549  2D4B               	goto	u4111
  5023  054A  2D4C               	goto	u4110
  5024  054B                     u4111:	
  5025  054B  2D6B               	goto	l4269
  5026  054C                     u4110:	
  5027  054C                     l4259:	
  5028                           
  5029                           ;key-handler.c: 13:  {;key-handler.c: 14:         button->klock=1;
  5030  054C  0846               	movf	Key_Press@button,w
  5031  054D  0084               	movwf	4
  5032  054E  0180               	clrf	0
  5033  054F  0A80               	incf	0,f
  5034  0550                     l4261:	
  5035                           
  5036                           ;key-handler.c: 15:         button->lock_long_press=1;
  5037  0550  0846               	movf	Key_Press@button,w
  5038  0551  3E02               	addlw	2
  5039  0552  0084               	movwf	4
  5040  0553  0180               	clrf	0
  5041  0554  0A80               	incf	0,f
  5042  0555                     l4263:	
  5043                           
  5044                           ;key-handler.c: 16:         g_button_timer=7800;
  5045  0555  3078               	movlw	120
  5046  0556  00CB               	movwf	_g_button_timer	;volatile
  5047  0557  301E               	movlw	30
  5048  0558  00CC               	movwf	_g_button_timer+1	;volatile
  5049  0559                     l4265:	
  5050                           
  5051                           ;key-handler.c: 18:         if(button->button_short_function)
  5052  0559  0846               	movf	Key_Press@button,w
  5053  055A  3E05               	addlw	5
  5054  055B  0084               	movwf	4
  5055  055C  0800               	movf	0,w
  5056  055D  1903               	btfsc	3,2
  5057  055E  2D60               	goto	u4121
  5058  055F  2D61               	goto	u4120
  5059  0560                     u4121:	
  5060  0560  2DBC               	goto	l616
  5061  0561                     u4120:	
  5062  0561                     l4267:	
  5063                           
  5064                           ;key-handler.c: 19:         {;key-handler.c: 20:             button->button_short_functi
      +                          on();
  5065  0561  0846               	movf	Key_Press@button,w
  5066  0562  3E05               	addlw	5
  5067  0563  0084               	movwf	4
  5068  0564  0800               	movf	0,w
  5069  0565  120A  118A  202E  120A  118A  	fcall	fptable
  5070  056A  2DBC               	goto	l616
  5071  056B                     l4269:	
  5072  056B  0846               	movf	Key_Press@button,w
  5073  056C  3E03               	addlw	3
  5074  056D  0084               	movwf	4
  5075  056E  0800               	movf	0,w
  5076  056F  00C2               	movwf	??_Key_Press
  5077  0570  0A84               	incf	4,f
  5078  0571  0800               	movf	0,w
  5079  0572  00C3               	movwf	??_Key_Press+1
  5080  0573  0842               	movf	??_Key_Press,w
  5081  0574  0084               	movwf	4
  5082  0575  1783               	bsf	3,7
  5083  0576  1C43               	btfss	??_Key_Press+1,0
  5084  0577  1383               	bcf	3,7
  5085  0578  0800               	movf	0,w
  5086  0579  00C4               	movwf	??_Key_Press+2
  5087  057A  3001               	movlw	1
  5088  057B  00C5               	movwf	??_Key_Press+3
  5089  057C  0A46               	incf	Key_Press@button,w
  5090  057D  0084               	movwf	4
  5091  057E  1383               	bcf	3,7	;select IRP bank0
  5092  057F  0A00               	incf	0,w
  5093  0580  2D83               	goto	u4134
  5094  0581                     u4135:	
  5095  0581  1003               	clrc
  5096  0582  0DC5               	rlf	??_Key_Press+3,f
  5097  0583                     u4134:	
  5098  0583  3EFF               	addlw	-1
  5099  0584  1D03               	skipz
  5100  0585  2D81               	goto	u4135
  5101  0586  0845               	movf	??_Key_Press+3,w
  5102  0587  0544               	andwf	??_Key_Press+2,w
  5103  0588  1903               	btfsc	3,2
  5104  0589  2D8B               	goto	u4141
  5105  058A  2D8C               	goto	u4140
  5106  058B                     u4141:	
  5107  058B  2DAA               	goto	l4281
  5108  058C                     u4140:	
  5109  058C                     l4271:	
  5110  058C  0846               	movf	Key_Press@button,w
  5111  058D  0084               	movwf	4
  5112  058E  0300               	decf	0,w
  5113  058F  1D03               	btfss	3,2
  5114  0590  2D92               	goto	u4151
  5115  0591  2D93               	goto	u4150
  5116  0592                     u4151:	
  5117  0592  2DAA               	goto	l4281
  5118  0593                     u4150:	
  5119  0593                     l4273:	
  5120                           
  5121                           ;key-handler.c: 24:  {;key-handler.c: 25:         if(g_button_timer<(7800 -78))
  5122  0593  301E               	movlw	30
  5123  0594  024C               	subwf	_g_button_timer+1,w	;volatile
  5124  0595  302A               	movlw	42
  5125  0596  1903               	skipnz
  5126  0597  024B               	subwf	_g_button_timer,w	;volatile
  5127  0598  1803               	skipnc
  5128  0599  2D9B               	goto	u4161
  5129  059A  2D9C               	goto	u4160
  5130  059B                     u4161:	
  5131  059B  2DBC               	goto	l616
  5132  059C                     u4160:	
  5133  059C                     l4275:	
  5134                           
  5135                           ;key-handler.c: 26:         {;key-handler.c: 27:             button->klock=0;
  5136  059C  0846               	movf	Key_Press@button,w
  5137  059D  0084               	movwf	4
  5138  059E  0180               	clrf	0
  5139  059F                     l4277:	
  5140                           
  5141                           ;key-handler.c: 28:             button->lock_long_press=0;
  5142  059F  0846               	movf	Key_Press@button,w
  5143  05A0  3E02               	addlw	2
  5144  05A1  0084               	movwf	4
  5145  05A2  0180               	clrf	0
  5146  05A3                     l4279:	
  5147                           
  5148                           ;key-handler.c: 29:             SendUART('1');
  5149  05A3  3031               	movlw	49
  5150  05A4  120A  158A  2227  120A  118A  	fcall	_SendUART
  5151  05A9  2DBC               	goto	l616
  5152  05AA                     l4281:	
  5153  05AA  0846               	movf	Key_Press@button,w
  5154  05AB  3E02               	addlw	2
  5155  05AC  0084               	movwf	4
  5156  05AD  0300               	decf	0,w
  5157  05AE  1D03               	btfss	3,2
  5158  05AF  2DB1               	goto	u4171
  5159  05B0  2DB2               	goto	u4170
  5160  05B1                     u4171:	
  5161  05B1  2DBC               	goto	l616
  5162  05B2                     u4170:	
  5163  05B2                     l4283:	
  5164  05B2  084B               	movf	_g_button_timer,w	;volatile
  5165  05B3  044C               	iorwf	_g_button_timer+1,w	;volatile
  5166  05B4  1D03               	btfss	3,2
  5167  05B5  2DB7               	goto	u4181
  5168  05B6  2DB8               	goto	u4180
  5169  05B7                     u4181:	
  5170  05B7  2DBC               	goto	l616
  5171  05B8                     u4180:	
  5172  05B8                     l4287:	
  5173                           
  5174                           ;key-handler.c: 39:         button->lock_long_press=0;
  5175  05B8  0846               	movf	Key_Press@button,w
  5176  05B9  3E02               	addlw	2
  5177  05BA  0084               	movwf	4
  5178  05BB  0180               	clrf	0
  5179  05BC                     l616:	
  5180  05BC  0008               	return
  5181  05BD                     __end_of_Key_Press:	
  5182                           
  5183                           	psect	text22
  5184  0003                     __ptext22:	
  5185 ;; *************** function _Down_Button_Short *****************
  5186 ;; Defined at:
  5187 ;;		line 48 in file "menu.c"
  5188 ;; Parameters:    Size  Location     Type
  5189 ;;		None
  5190 ;; Auto vars:     Size  Location     Type
  5191 ;;		None
  5192 ;; Return value:  Size  Location     Type
  5193 ;;                  1    wreg      void 
  5194 ;; Registers used:
  5195 ;;		None
  5196 ;; Tracked objects:
  5197 ;;		On entry : 0/0
  5198 ;;		On exit  : 0/0
  5199 ;;		Unchanged: 0/0
  5200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5201 ;;      Params:         0       0       0       0       0
  5202 ;;      Locals:         0       0       0       0       0
  5203 ;;      Temps:          0       0       0       0       0
  5204 ;;      Totals:         0       0       0       0       0
  5205 ;;Total ram usage:        0 bytes
  5206 ;; Hardware stack levels used:    1
  5207 ;; Hardware stack levels required when called:    4
  5208 ;; This function calls:
  5209 ;;		Nothing
  5210 ;; This function is called by:
  5211 ;;		_Button_Init
  5212 ;;		_Key_Press
  5213 ;; This function uses a non-reentrant model
  5214 ;;
  5215                           
  5216                           
  5217                           ;psect for function _Down_Button_Short
  5218  0003                     _Down_Button_Short:	
  5219  0003                     l671:	
  5220                           ;incstack = 0
  5221                           ; Regs used in _Down_Button_Short: []
  5222                           
  5223  0003  0008               	return
  5224  0004                     __end_of_Down_Button_Short:	
  5225                           
  5226                           	psect	text23
  5227  09FB                     __ptext23:	
  5228 ;; *************** function _Right_Button_Short *****************
  5229 ;; Defined at:
  5230 ;;		line 58 in file "menu.c"
  5231 ;; Parameters:    Size  Location     Type
  5232 ;;		None
  5233 ;; Auto vars:     Size  Location     Type
  5234 ;;		None
  5235 ;; Return value:  Size  Location     Type
  5236 ;;                  1    wreg      void 
  5237 ;; Registers used:
  5238 ;;		None
  5239 ;; Tracked objects:
  5240 ;;		On entry : 0/0
  5241 ;;		On exit  : 0/0
  5242 ;;		Unchanged: 0/0
  5243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5244 ;;      Params:         0       0       0       0       0
  5245 ;;      Locals:         0       0       0       0       0
  5246 ;;      Temps:          0       0       0       0       0
  5247 ;;      Totals:         0       0       0       0       0
  5248 ;;Total ram usage:        0 bytes
  5249 ;; Hardware stack levels used:    1
  5250 ;; Hardware stack levels required when called:    4
  5251 ;; This function calls:
  5252 ;;		Nothing
  5253 ;; This function is called by:
  5254 ;;		_Button_Init
  5255 ;;		_Key_Press
  5256 ;; This function uses a non-reentrant model
  5257 ;;
  5258                           
  5259                           
  5260                           ;psect for function _Right_Button_Short
  5261  09FB                     _Right_Button_Short:	
  5262  09FB                     l677:	
  5263                           ;incstack = 0
  5264                           ; Regs used in _Right_Button_Short: []
  5265                           
  5266  09FB  0008               	return
  5267  09FC                     __end_of_Right_Button_Short:	
  5268                           
  5269                           	psect	text24
  5270  09FA                     __ptext24:	
  5271 ;; *************** function _Set_Time2_Button_Short *****************
  5272 ;; Defined at:
  5273 ;;		line 43 in file "menu.c"
  5274 ;; Parameters:    Size  Location     Type
  5275 ;;		None
  5276 ;; Auto vars:     Size  Location     Type
  5277 ;;		None
  5278 ;; Return value:  Size  Location     Type
  5279 ;;                  1    wreg      void 
  5280 ;; Registers used:
  5281 ;;		None
  5282 ;; Tracked objects:
  5283 ;;		On entry : 0/0
  5284 ;;		On exit  : 0/0
  5285 ;;		Unchanged: 0/0
  5286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5287 ;;      Params:         0       0       0       0       0
  5288 ;;      Locals:         0       0       0       0       0
  5289 ;;      Temps:          0       0       0       0       0
  5290 ;;      Totals:         0       0       0       0       0
  5291 ;;Total ram usage:        0 bytes
  5292 ;; Hardware stack levels used:    1
  5293 ;; Hardware stack levels required when called:    4
  5294 ;; This function calls:
  5295 ;;		Nothing
  5296 ;; This function is called by:
  5297 ;;		_Button_Init
  5298 ;;		_Key_Press
  5299 ;; This function uses a non-reentrant model
  5300 ;;
  5301                           
  5302                           
  5303                           ;psect for function _Set_Time2_Button_Short
  5304  09FA                     _Set_Time2_Button_Short:	
  5305  09FA                     l668:	
  5306                           ;incstack = 0
  5307                           ; Regs used in _Set_Time2_Button_Short: []
  5308                           
  5309  09FA  0008               	return
  5310  09FB                     __end_of_Set_Time2_Button_Short:	
  5311                           
  5312                           	psect	text25
  5313  09F9                     __ptext25:	
  5314 ;; *************** function _Set_Time1_Button_Short *****************
  5315 ;; Defined at:
  5316 ;;		line 38 in file "menu.c"
  5317 ;; Parameters:    Size  Location     Type
  5318 ;;		None
  5319 ;; Auto vars:     Size  Location     Type
  5320 ;;		None
  5321 ;; Return value:  Size  Location     Type
  5322 ;;                  1    wreg      void 
  5323 ;; Registers used:
  5324 ;;		None
  5325 ;; Tracked objects:
  5326 ;;		On entry : 0/0
  5327 ;;		On exit  : 0/0
  5328 ;;		Unchanged: 0/0
  5329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5330 ;;      Params:         0       0       0       0       0
  5331 ;;      Locals:         0       0       0       0       0
  5332 ;;      Temps:          0       0       0       0       0
  5333 ;;      Totals:         0       0       0       0       0
  5334 ;;Total ram usage:        0 bytes
  5335 ;; Hardware stack levels used:    1
  5336 ;; Hardware stack levels required when called:    4
  5337 ;; This function calls:
  5338 ;;		Nothing
  5339 ;; This function is called by:
  5340 ;;		_Button_Init
  5341 ;;		_Key_Press
  5342 ;; This function uses a non-reentrant model
  5343 ;;
  5344                           
  5345                           
  5346                           ;psect for function _Set_Time1_Button_Short
  5347  09F9                     _Set_Time1_Button_Short:	
  5348  09F9                     l665:	
  5349                           ;incstack = 0
  5350                           ; Regs used in _Set_Time1_Button_Short: []
  5351                           
  5352  09F9  0008               	return
  5353  09FA                     __end_of_Set_Time1_Button_Short:	
  5354                           
  5355                           	psect	text26
  5356  0C6B                     __ptext26:	
  5357 ;; *************** function _Set_RTC_Button_Short *****************
  5358 ;; Defined at:
  5359 ;;		line 15 in file "menu.c"
  5360 ;; Parameters:    Size  Location     Type
  5361 ;;		None
  5362 ;; Auto vars:     Size  Location     Type
  5363 ;;  time            6   28[BANK0 ] struct .
  5364 ;; Return value:  Size  Location     Type
  5365 ;;                  1    wreg      void 
  5366 ;; Registers used:
  5367 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5368 ;; Tracked objects:
  5369 ;;		On entry : 0/0
  5370 ;;		On exit  : 0/0
  5371 ;;		Unchanged: 0/0
  5372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5373 ;;      Params:         0       0       0       0       0
  5374 ;;      Locals:         0       6       0       0       0
  5375 ;;      Temps:          0       3       0       0       0
  5376 ;;      Totals:         0       9       0       0       0
  5377 ;;Total ram usage:        9 bytes
  5378 ;; Hardware stack levels used:    1
  5379 ;; Hardware stack levels required when called:    8
  5380 ;; This function calls:
  5381 ;;		_Display_2Dig
  5382 ;;		_PCF8583_Read_Time_Date
  5383 ;;		_SendUART
  5384 ;; This function is called by:
  5385 ;;		_Button_Init
  5386 ;;		_Key_Press
  5387 ;; This function uses a non-reentrant model
  5388 ;;
  5389                           
  5390                           
  5391                           ;psect for function _Set_RTC_Button_Short
  5392  0C6B                     _Set_RTC_Button_Short:	
  5393  0C6B                     l4167:	
  5394                           ;incstack = 0
  5395 ;; hardware stack exceeded
  5396                           ; Regs used in _Set_RTC_Button_Short: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5397                           
  5398                           
  5399                           ;menu.c: 17:     g_display_text[0]='s';
  5400  0C6B  3073               	movlw	115
  5401  0C6C  1283               	bcf	3,5	;RP0=0, select bank0
  5402  0C6D  1303               	bcf	3,6	;RP1=0, select bank0
  5403  0C6E  00B9               	movwf	??_Set_RTC_Button_Short
  5404  0C6F  0839               	movf	??_Set_RTC_Button_Short,w
  5405  0C70  00DD               	movwf	_g_display_text
  5406                           
  5407                           ;menu.c: 18:     g_display_text[1]='r';
  5408  0C71  3072               	movlw	114
  5409  0C72  00B9               	movwf	??_Set_RTC_Button_Short
  5410  0C73  0839               	movf	??_Set_RTC_Button_Short,w
  5411  0C74  00DE               	movwf	_g_display_text+1
  5412                           
  5413                           ;menu.c: 19:     g_display_text[2]='t';
  5414  0C75  3074               	movlw	116
  5415  0C76  00B9               	movwf	??_Set_RTC_Button_Short
  5416  0C77  0839               	movf	??_Set_RTC_Button_Short,w
  5417  0C78  00DF               	movwf	_g_display_text+2
  5418                           
  5419                           ;menu.c: 20:     g_display_text[3]='c';
  5420  0C79  3063               	movlw	99
  5421  0C7A  00B9               	movwf	??_Set_RTC_Button_Short
  5422  0C7B  0839               	movf	??_Set_RTC_Button_Short,w
  5423  0C7C  00E0               	movwf	_g_display_text+3
  5424  0C7D                     l4169:	
  5425                           
  5426                           ;menu.c: 21:     g_decimal_point=0b0000;
  5427  0C7D  01E3               	clrf	_g_decimal_point
  5428  0C7E                     l4171:	
  5429                           
  5430                           ;menu.c: 23:     _delay((unsigned long)((2000)*(8000000/4000.0)));
  5431  0C7E  3015               	movlw	21
  5432  0C7F  1283               	bcf	3,5	;RP0=0, select bank0
  5433  0C80  1303               	bcf	3,6	;RP1=0, select bank0
  5434  0C81  00BB               	movwf	??_Set_RTC_Button_Short+2
  5435  0C82  304B               	movlw	75
  5436  0C83  00BA               	movwf	??_Set_RTC_Button_Short+1
  5437  0C84  30BD               	movlw	189
  5438  0C85  00B9               	movwf	??_Set_RTC_Button_Short
  5439  0C86                     u4267:	
  5440  0C86  0BB9               	decfsz	??_Set_RTC_Button_Short,f
  5441  0C87  2C86               	goto	u4267
  5442  0C88  0BBA               	decfsz	??_Set_RTC_Button_Short+1,f
  5443  0C89  2C86               	goto	u4267
  5444  0C8A  0BBB               	decfsz	??_Set_RTC_Button_Short+2,f
  5445  0C8B  2C86               	goto	u4267
  5446  0C8C  2C8D               	nop2
  5447  0C8D                     l4173:	
  5448                           
  5449                           ;menu.c: 25:     TimeStruct time;;menu.c: 27:     INTCONbits.T0IE=0;
  5450  0C8D  128B               	bcf	11,5	;volatile
  5451  0C8E                     l4175:	
  5452                           
  5453                           ;menu.c: 28:     PCF8583_Read_Time_Date(&time);
  5454  0C8E  303C               	movlw	(low (Set_RTC_Button_Short@time| 0))& (0+255)
  5455  0C8F  120A  118A  2171  120A  158A  	fcall	_PCF8583_Read_Time_Date
  5456  0C94                     l4177:	
  5457                           
  5458                           ;menu.c: 30:     g_display_text[0]='n';
  5459  0C94  306E               	movlw	110
  5460  0C95  1283               	bcf	3,5	;RP0=0, select bank0
  5461  0C96  1303               	bcf	3,6	;RP1=0, select bank0
  5462  0C97  00B9               	movwf	??_Set_RTC_Button_Short
  5463  0C98  0839               	movf	??_Set_RTC_Button_Short,w
  5464  0C99  00DD               	movwf	_g_display_text
  5465  0C9A                     l4179:	
  5466                           
  5467                           ;menu.c: 31:     g_display_text[1]='*';
  5468  0C9A  302A               	movlw	42
  5469  0C9B  00B9               	movwf	??_Set_RTC_Button_Short
  5470  0C9C  0839               	movf	??_Set_RTC_Button_Short,w
  5471  0C9D  00DE               	movwf	_g_display_text+1
  5472  0C9E                     l4181:	
  5473                           
  5474                           ;menu.c: 32:     SendUART(time.minutes);
  5475  0C9E  083D               	movf	Set_RTC_Button_Short@time+1,w
  5476  0C9F  120A  158A  2227  120A  158A  	fcall	_SendUART
  5477  0CA4                     l4183:	
  5478                           
  5479                           ;menu.c: 33:     Display_2Dig(time.minutes);
  5480  0CA4  1283               	bcf	3,5	;RP0=0, select bank0
  5481  0CA5  1303               	bcf	3,6	;RP1=0, select bank0
  5482  0CA6  083D               	movf	Set_RTC_Button_Short@time+1,w
  5483  0CA7  120A  158A  2328  120A  158A  	fcall	_Display_2Dig
  5484  0CAC                     l4185:	
  5485                           
  5486                           ;menu.c: 34:     INTCONbits.T0IE=1;
  5487  0CAC  168B               	bsf	11,5	;volatile
  5488  0CAD                     l662:	
  5489  0CAD  0008               	return
  5490  0CAE                     __end_of_Set_RTC_Button_Short:	
  5491                           
  5492                           	psect	text27
  5493  09F8                     __ptext27:	
  5494 ;; *************** function _Up_Button_Short *****************
  5495 ;; Defined at:
  5496 ;;		line 53 in file "menu.c"
  5497 ;; Parameters:    Size  Location     Type
  5498 ;;		None
  5499 ;; Auto vars:     Size  Location     Type
  5500 ;;		None
  5501 ;; Return value:  Size  Location     Type
  5502 ;;                  1    wreg      void 
  5503 ;; Registers used:
  5504 ;;		None
  5505 ;; Tracked objects:
  5506 ;;		On entry : 0/0
  5507 ;;		On exit  : 0/0
  5508 ;;		Unchanged: 0/0
  5509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5510 ;;      Params:         0       0       0       0       0
  5511 ;;      Locals:         0       0       0       0       0
  5512 ;;      Temps:          0       0       0       0       0
  5513 ;;      Totals:         0       0       0       0       0
  5514 ;;Total ram usage:        0 bytes
  5515 ;; Hardware stack levels used:    1
  5516 ;; Hardware stack levels required when called:    4
  5517 ;; This function calls:
  5518 ;;		Nothing
  5519 ;; This function is called by:
  5520 ;;		_Button_Init
  5521 ;;		_Key_Press
  5522 ;; This function uses a non-reentrant model
  5523 ;;
  5524                           
  5525                           
  5526                           ;psect for function _Up_Button_Short
  5527  09F8                     _Up_Button_Short:	
  5528  09F8                     l674:	
  5529                           ;incstack = 0
  5530                           ; Regs used in _Up_Button_Short: []
  5531                           
  5532  09F8  0008               	return
  5533  09F9                     __end_of_Up_Button_Short:	
  5534                           
  5535                           	psect	text28
  5536  0A27                     __ptext28:	
  5537 ;; *************** function _SendUART *****************
  5538 ;; Defined at:
  5539 ;;		line 19 in file "hw_uart.c"
  5540 ;; Parameters:    Size  Location     Type
  5541 ;;  data            1    wreg     unsigned char 
  5542 ;; Auto vars:     Size  Location     Type
  5543 ;;  data            1    6[BANK0 ] unsigned char 
  5544 ;; Return value:  Size  Location     Type
  5545 ;;                  1    wreg      void 
  5546 ;; Registers used:
  5547 ;;		wreg
  5548 ;; Tracked objects:
  5549 ;;		On entry : 0/0
  5550 ;;		On exit  : 0/0
  5551 ;;		Unchanged: 0/0
  5552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5553 ;;      Params:         0       0       0       0       0
  5554 ;;      Locals:         0       1       0       0       0
  5555 ;;      Temps:          0       0       0       0       0
  5556 ;;      Totals:         0       1       0       0       0
  5557 ;;Total ram usage:        1 bytes
  5558 ;; Hardware stack levels used:    1
  5559 ;; Hardware stack levels required when called:    4
  5560 ;; This function calls:
  5561 ;;		Nothing
  5562 ;; This function is called by:
  5563 ;;		_CheckEvent
  5564 ;;		_ProcessRCVData
  5565 ;;		_Key_Press
  5566 ;;		_Set_RTC_Button_Short
  5567 ;;		_Time_To_UART
  5568 ;; This function uses a non-reentrant model
  5569 ;;
  5570                           
  5571                           
  5572                           ;psect for function _SendUART
  5573  0A27                     _SendUART:	
  5574                           
  5575                           ;incstack = 0
  5576                           ; Regs used in _SendUART: [wreg]
  5577                           ;SendUART@data stored from wreg
  5578  0A27  1283               	bcf	3,5	;RP0=0, select bank0
  5579  0A28  1303               	bcf	3,6	;RP1=0, select bank0
  5580  0A29  00A6               	movwf	SendUART@data
  5581  0A2A                     l3989:	
  5582  0A2A                     l48:	
  5583                           ;hw_uart.c: 19: void SendUART(char data);hw_uart.c: 20: {;hw_uart.c: 21:   while(!TRMT);
  5584                           
  5585  0A2A  1683               	bsf	3,5	;RP0=1, select bank1
  5586  0A2B  1303               	bcf	3,6	;RP1=0, select bank1
  5587  0A2C  1C98               	btfss	24,1	;volatile
  5588  0A2D  2A2F               	goto	u3721
  5589  0A2E  2A30               	goto	u3720
  5590  0A2F                     u3721:	
  5591  0A2F  2A2A               	goto	l48
  5592  0A30                     u3720:	
  5593  0A30                     l3991:	
  5594                           
  5595                           ;hw_uart.c: 22:   TXREG = data;
  5596  0A30  1283               	bcf	3,5	;RP0=0, select bank0
  5597  0A31  1303               	bcf	3,6	;RP1=0, select bank0
  5598  0A32  0826               	movf	SendUART@data,w
  5599  0A33  0099               	movwf	25	;volatile
  5600  0A34                     l51:	
  5601  0A34  0008               	return
  5602  0A35                     __end_of_SendUART:	
  5603                           
  5604                           	psect	text29
  5605  0171                     __ptext29:	
  5606 ;; *************** function _PCF8583_Read_Time_Date *****************
  5607 ;; Defined at:
  5608 ;;		line 83 in file "pcf8583.c"
  5609 ;; Parameters:    Size  Location     Type
  5610 ;;  time_struct_    1    wreg     PTR struct .
  5611 ;;		 -> Set_RTC_Button_Short@time(6), 
  5612 ;; Auto vars:     Size  Location     Type
  5613 ;;  time_struct_    1   24[BANK0 ] PTR struct .
  5614 ;;		 -> Set_RTC_Button_Short@time(6), 
  5615 ;;  year            1   23[BANK0 ] unsigned char 
  5616 ;;  bcd_day         1   22[BANK0 ] unsigned char 
  5617 ;;  bcd_mon         1   21[BANK0 ] unsigned char 
  5618 ;;  bcd_hrs         1   20[BANK0 ] unsigned char 
  5619 ;;  bcd_min         1   19[BANK0 ] unsigned char 
  5620 ;;  bcd_sec         1   18[BANK0 ] unsigned char 
  5621 ;;  year_bits       1   17[BANK0 ] unsigned char 
  5622 ;; Return value:  Size  Location     Type
  5623 ;;                  1    wreg      void 
  5624 ;; Registers used:
  5625 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5626 ;; Tracked objects:
  5627 ;;		On entry : 0/0
  5628 ;;		On exit  : 0/0
  5629 ;;		Unchanged: 0/0
  5630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5631 ;;      Params:         0       0       0       0       0
  5632 ;;      Locals:         0       8       0       0       0
  5633 ;;      Temps:          0       2       0       0       0
  5634 ;;      Totals:         0      10       0       0       0
  5635 ;;Total ram usage:       10 bytes
  5636 ;; Hardware stack levels used:    1
  5637 ;; Hardware stack levels required when called:    7
  5638 ;; This function calls:
  5639 ;;		_BCD_2_DEC
  5640 ;;		_I2C_Master_Read
  5641 ;;		_I2C_Master_Start
  5642 ;;		_I2C_Master_Stop
  5643 ;;		_I2C_Master_Write
  5644 ;;		_PCF8583_Read_Byte
  5645 ;;		_PCF8583_Write_Byte
  5646 ;; This function is called by:
  5647 ;;		_Set_RTC_Button_Short
  5648 ;; This function uses a non-reentrant model
  5649 ;;
  5650                           
  5651                           
  5652                           ;psect for function _PCF8583_Read_Time_Date
  5653  0171                     _PCF8583_Read_Time_Date:	
  5654                           
  5655                           ;incstack = 0
  5656 ;; hardware stack exceeded
  5657                           ; Regs used in _PCF8583_Read_Time_Date: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5658                           ;PCF8583_Read_Time_Date@time_struct_ptr stored from wreg
  5659  0171  1283               	bcf	3,5	;RP0=0, select bank0
  5660  0172  1303               	bcf	3,6	;RP1=0, select bank0
  5661  0173  00B8               	movwf	PCF8583_Read_Time_Date@time_struct_ptr
  5662  0174                     l4011:	
  5663                           
  5664                           ;pcf8583.c: 83: void PCF8583_Read_Time_Date(TimeStruct *time_struct_ptr);pcf8583.c: 84: 
      +                          {;pcf8583.c: 85:  unsigned char year_bits;;pcf8583.c: 86:  unsigned char year;;pcf8583.c
      +                          : 87:  unsigned char bcd_sec;;pcf8583.c: 88:  unsigned char bcd_min;;pcf8583.c: 89:  uns
      +                          igned char bcd_hrs;;pcf8583.c: 90:  unsigned char bcd_day;;pcf8583.c: 91:  unsigned char
      +                           bcd_mon;;pcf8583.c: 93:  I2C_Master_Start();
  5665  0174  120A  158A  220B  120A  118A  	fcall	_I2C_Master_Start
  5666  0179                     l4013:	
  5667                           
  5668                           ;pcf8583.c: 94:  I2C_Master_Write(0xA0);
  5669  0179  30A0               	movlw	160
  5670  017A  1283               	bcf	3,5	;RP0=0, select bank0
  5671  017B  1303               	bcf	3,6	;RP1=0, select bank0
  5672  017C  00A6               	movwf	I2C_Master_Write@data
  5673  017D  3000               	movlw	0
  5674  017E  00A7               	movwf	I2C_Master_Write@data+1
  5675  017F  120A  158A  221D  120A  118A  	fcall	_I2C_Master_Write
  5676  0184                     l4015:	
  5677                           
  5678                           ;pcf8583.c: 95:  I2C_Master_Write(0x02);
  5679  0184  3002               	movlw	2
  5680  0185  1283               	bcf	3,5	;RP0=0, select bank0
  5681  0186  1303               	bcf	3,6	;RP1=0, select bank0
  5682  0187  00A6               	movwf	I2C_Master_Write@data
  5683  0188  3000               	movlw	0
  5684  0189  00A7               	movwf	I2C_Master_Write@data+1
  5685  018A  120A  158A  221D  120A  118A  	fcall	_I2C_Master_Write
  5686                           
  5687                           ;pcf8583.c: 96:  I2C_Master_Start();
  5688  018F  120A  158A  220B  120A  118A  	fcall	_I2C_Master_Start
  5689  0194                     l4017:	
  5690                           
  5691                           ;pcf8583.c: 97:  I2C_Master_Write(0xA1);
  5692  0194  30A1               	movlw	161
  5693  0195  1283               	bcf	3,5	;RP0=0, select bank0
  5694  0196  1303               	bcf	3,6	;RP1=0, select bank0
  5695  0197  00A6               	movwf	I2C_Master_Write@data
  5696  0198  3000               	movlw	0
  5697  0199  00A7               	movwf	I2C_Master_Write@data+1
  5698  019A  120A  158A  221D  120A  118A  	fcall	_I2C_Master_Write
  5699  019F                     l4019:	
  5700                           
  5701                           ;pcf8583.c: 98:  bcd_sec = I2C_Master_Read(1);
  5702  019F  3001               	movlw	1
  5703  01A0  120A  158A  2358  120A  118A  	fcall	_I2C_Master_Read
  5704  01A5  1283               	bcf	3,5	;RP0=0, select bank0
  5705  01A6  1303               	bcf	3,6	;RP1=0, select bank0
  5706  01A7  00AF               	movwf	??_PCF8583_Read_Time_Date
  5707  01A8  082F               	movf	??_PCF8583_Read_Time_Date,w
  5708  01A9  00B2               	movwf	PCF8583_Read_Time_Date@bcd_sec
  5709  01AA                     l4021:	
  5710                           
  5711                           ;pcf8583.c: 99:  bcd_min = I2C_Master_Read(1);
  5712  01AA  3001               	movlw	1
  5713  01AB  120A  158A  2358  120A  118A  	fcall	_I2C_Master_Read
  5714  01B0  1283               	bcf	3,5	;RP0=0, select bank0
  5715  01B1  1303               	bcf	3,6	;RP1=0, select bank0
  5716  01B2  00AF               	movwf	??_PCF8583_Read_Time_Date
  5717  01B3  082F               	movf	??_PCF8583_Read_Time_Date,w
  5718  01B4  00B3               	movwf	PCF8583_Read_Time_Date@bcd_min
  5719  01B5                     l4023:	
  5720                           
  5721                           ;pcf8583.c: 100:  bcd_hrs = I2C_Master_Read(1);
  5722  01B5  3001               	movlw	1
  5723  01B6  120A  158A  2358  120A  118A  	fcall	_I2C_Master_Read
  5724  01BB  1283               	bcf	3,5	;RP0=0, select bank0
  5725  01BC  1303               	bcf	3,6	;RP1=0, select bank0
  5726  01BD  00AF               	movwf	??_PCF8583_Read_Time_Date
  5727  01BE  082F               	movf	??_PCF8583_Read_Time_Date,w
  5728  01BF  00B4               	movwf	PCF8583_Read_Time_Date@bcd_hrs
  5729  01C0                     l4025:	
  5730                           
  5731                           ;pcf8583.c: 101:  bcd_day = I2C_Master_Read(1);
  5732  01C0  3001               	movlw	1
  5733  01C1  120A  158A  2358  120A  118A  	fcall	_I2C_Master_Read
  5734  01C6  1283               	bcf	3,5	;RP0=0, select bank0
  5735  01C7  1303               	bcf	3,6	;RP1=0, select bank0
  5736  01C8  00AF               	movwf	??_PCF8583_Read_Time_Date
  5737  01C9  082F               	movf	??_PCF8583_Read_Time_Date,w
  5738  01CA  00B6               	movwf	PCF8583_Read_Time_Date@bcd_day
  5739  01CB                     l4027:	
  5740                           
  5741                           ;pcf8583.c: 102:  bcd_mon = I2C_Master_Read(0);
  5742  01CB  3000               	movlw	0
  5743  01CC  120A  158A  2358  120A  118A  	fcall	_I2C_Master_Read
  5744  01D1  1283               	bcf	3,5	;RP0=0, select bank0
  5745  01D2  1303               	bcf	3,6	;RP1=0, select bank0
  5746  01D3  00AF               	movwf	??_PCF8583_Read_Time_Date
  5747  01D4  082F               	movf	??_PCF8583_Read_Time_Date,w
  5748  01D5  00B5               	movwf	PCF8583_Read_Time_Date@bcd_mon
  5749                           
  5750                           ;pcf8583.c: 103:     I2C_Master_Stop();
  5751  01D6  120A  158A  2214  120A  118A  	fcall	_I2C_Master_Stop
  5752  01DB                     l4029:	
  5753                           
  5754                           ;pcf8583.c: 105:  time_struct_ptr->seconds = BCD_2_DEC(bcd_sec);
  5755  01DB  1283               	bcf	3,5	;RP0=0, select bank0
  5756  01DC  1303               	bcf	3,6	;RP1=0, select bank0
  5757  01DD  0832               	movf	PCF8583_Read_Time_Date@bcd_sec,w
  5758  01DE  120A  158A  22B8  120A  118A  	fcall	_BCD_2_DEC
  5759  01E3  1283               	bcf	3,5	;RP0=0, select bank0
  5760  01E4  1303               	bcf	3,6	;RP1=0, select bank0
  5761  01E5  00AF               	movwf	??_PCF8583_Read_Time_Date
  5762  01E6  0838               	movf	PCF8583_Read_Time_Date@time_struct_ptr,w
  5763  01E7  0084               	movwf	4
  5764  01E8  082F               	movf	??_PCF8583_Read_Time_Date,w
  5765  01E9  1383               	bcf	3,7	;select IRP bank0
  5766  01EA  0080               	movwf	0
  5767  01EB                     l4031:	
  5768                           
  5769                           ;pcf8583.c: 106:  time_struct_ptr->minutes = BCD_2_DEC(bcd_min);
  5770  01EB  0833               	movf	PCF8583_Read_Time_Date@bcd_min,w
  5771  01EC  120A  158A  22B8  120A  118A  	fcall	_BCD_2_DEC
  5772  01F1  1283               	bcf	3,5	;RP0=0, select bank0
  5773  01F2  1303               	bcf	3,6	;RP1=0, select bank0
  5774  01F3  00AF               	movwf	??_PCF8583_Read_Time_Date
  5775  01F4  0A38               	incf	PCF8583_Read_Time_Date@time_struct_ptr,w
  5776  01F5  0084               	movwf	4
  5777  01F6  082F               	movf	??_PCF8583_Read_Time_Date,w
  5778  01F7  1383               	bcf	3,7	;select IRP bank0
  5779  01F8  0080               	movwf	0
  5780  01F9                     l4033:	
  5781                           
  5782                           ;pcf8583.c: 107:  time_struct_ptr->hours = BCD_2_DEC(bcd_hrs & 0x3F);
  5783  01F9  0834               	movf	PCF8583_Read_Time_Date@bcd_hrs,w
  5784  01FA  393F               	andlw	63
  5785  01FB  120A  158A  22B8  120A  118A  	fcall	_BCD_2_DEC
  5786  0200  1283               	bcf	3,5	;RP0=0, select bank0
  5787  0201  1303               	bcf	3,6	;RP1=0, select bank0
  5788  0202  00AF               	movwf	??_PCF8583_Read_Time_Date
  5789  0203  0838               	movf	PCF8583_Read_Time_Date@time_struct_ptr,w
  5790  0204  3E02               	addlw	2
  5791  0205  0084               	movwf	4
  5792  0206  082F               	movf	??_PCF8583_Read_Time_Date,w
  5793  0207  1383               	bcf	3,7	;select IRP bank0
  5794  0208  0080               	movwf	0
  5795  0209                     l4035:	
  5796                           
  5797                           ;pcf8583.c: 108:  time_struct_ptr->day = BCD_2_DEC(bcd_day & 0x3F);
  5798  0209  0836               	movf	PCF8583_Read_Time_Date@bcd_day,w
  5799  020A  393F               	andlw	63
  5800  020B  120A  158A  22B8  120A  118A  	fcall	_BCD_2_DEC
  5801  0210  1283               	bcf	3,5	;RP0=0, select bank0
  5802  0211  1303               	bcf	3,6	;RP1=0, select bank0
  5803  0212  00AF               	movwf	??_PCF8583_Read_Time_Date
  5804  0213  0838               	movf	PCF8583_Read_Time_Date@time_struct_ptr,w
  5805  0214  3E03               	addlw	3
  5806  0215  0084               	movwf	4
  5807  0216  082F               	movf	??_PCF8583_Read_Time_Date,w
  5808  0217  1383               	bcf	3,7	;select IRP bank0
  5809  0218  0080               	movwf	0
  5810  0219                     l4037:	
  5811                           
  5812                           ;pcf8583.c: 109:  time_struct_ptr->month = BCD_2_DEC(bcd_mon & 0x1F);
  5813  0219  0835               	movf	PCF8583_Read_Time_Date@bcd_mon,w
  5814  021A  391F               	andlw	31
  5815  021B  120A  158A  22B8  120A  118A  	fcall	_BCD_2_DEC
  5816  0220  1283               	bcf	3,5	;RP0=0, select bank0
  5817  0221  1303               	bcf	3,6	;RP1=0, select bank0
  5818  0222  00AF               	movwf	??_PCF8583_Read_Time_Date
  5819  0223  0838               	movf	PCF8583_Read_Time_Date@time_struct_ptr,w
  5820  0224  3E04               	addlw	4
  5821  0225  0084               	movwf	4
  5822  0226  082F               	movf	??_PCF8583_Read_Time_Date,w
  5823  0227  1383               	bcf	3,7	;select IRP bank0
  5824  0228  0080               	movwf	0
  5825  0229                     l4039:	
  5826                           
  5827                           ;pcf8583.c: 111:  year_bits = bcd_day >> 6;
  5828  0229  0836               	movf	PCF8583_Read_Time_Date@bcd_day,w
  5829  022A  00AF               	movwf	??_PCF8583_Read_Time_Date
  5830  022B  3006               	movlw	6
  5831  022C                     u3765:	
  5832  022C  1003               	clrc
  5833  022D  0CAF               	rrf	??_PCF8583_Read_Time_Date,f
  5834  022E  3EFF               	addlw	-1
  5835  022F  1D03               	skipz
  5836  0230  2A2C               	goto	u3765
  5837  0231  082F               	movf	??_PCF8583_Read_Time_Date,w
  5838  0232  00B0               	movwf	??_PCF8583_Read_Time_Date+1
  5839  0233  0830               	movf	??_PCF8583_Read_Time_Date+1,w
  5840  0234  00B1               	movwf	PCF8583_Read_Time_Date@year_bits
  5841  0235                     l4041:	
  5842                           
  5843                           ;pcf8583.c: 114:  year = PCF8583_Read_Byte(0x10);
  5844  0235  3010               	movlw	16
  5845  0236  120A  158A  24AE  120A  118A  	fcall	_PCF8583_Read_Byte
  5846  023B  1283               	bcf	3,5	;RP0=0, select bank0
  5847  023C  1303               	bcf	3,6	;RP1=0, select bank0
  5848  023D  00AF               	movwf	??_PCF8583_Read_Time_Date
  5849  023E  082F               	movf	??_PCF8583_Read_Time_Date,w
  5850  023F  00B7               	movwf	PCF8583_Read_Time_Date@year
  5851                           
  5852                           ;pcf8583.c: 115:  while(year_bits != (year & 3))
  5853  0240  2A45               	goto	l4045
  5854  0241                     l4043:	
  5855                           
  5856                           ;pcf8583.c: 116:  {;pcf8583.c: 117:   year++;
  5857  0241  3001               	movlw	1
  5858  0242  00AF               	movwf	??_PCF8583_Read_Time_Date
  5859  0243  082F               	movf	??_PCF8583_Read_Time_Date,w
  5860  0244  07B7               	addwf	PCF8583_Read_Time_Date@year,f
  5861  0245                     l4045:	
  5862                           
  5863                           ;pcf8583.c: 115:  while(year_bits != (year & 3))
  5864  0245  0837               	movf	PCF8583_Read_Time_Date@year,w
  5865  0246  3903               	andlw	3
  5866  0247  0631               	xorwf	PCF8583_Read_Time_Date@year_bits,w
  5867  0248  1D03               	skipz
  5868  0249  2A4B               	goto	u3771
  5869  024A  2A4C               	goto	u3770
  5870  024B                     u3771:	
  5871  024B  2A41               	goto	l4043
  5872  024C                     u3770:	
  5873  024C                     l4047:	
  5874                           
  5875                           ;pcf8583.c: 119:  time_struct_ptr->year = year;
  5876  024C  0837               	movf	PCF8583_Read_Time_Date@year,w
  5877  024D  00AF               	movwf	??_PCF8583_Read_Time_Date
  5878  024E  0838               	movf	PCF8583_Read_Time_Date@time_struct_ptr,w
  5879  024F  3E05               	addlw	5
  5880  0250  0084               	movwf	4
  5881  0251  082F               	movf	??_PCF8583_Read_Time_Date,w
  5882  0252  1383               	bcf	3,7	;select IRP bank0
  5883  0253  0080               	movwf	0
  5884  0254                     l4049:	
  5885                           
  5886                           ;pcf8583.c: 120:  PCF8583_Write_Byte(0x10, year);
  5887  0254  0837               	movf	PCF8583_Read_Time_Date@year,w
  5888  0255  00AF               	movwf	??_PCF8583_Read_Time_Date
  5889  0256  082F               	movf	??_PCF8583_Read_Time_Date,w
  5890  0257  00A8               	movwf	PCF8583_Write_Byte@data
  5891  0258  3010               	movlw	16
  5892  0259  120A  158A  23BB  120A  118A  	fcall	_PCF8583_Write_Byte
  5893  025E                     l530:	
  5894  025E  0008               	return
  5895  025F                     __end_of_PCF8583_Read_Time_Date:	
  5896                           
  5897                           	psect	text30
  5898  0BBB                     __ptext30:	
  5899 ;; *************** function _PCF8583_Write_Byte *****************
  5900 ;; Defined at:
  5901 ;;		line 59 in file "pcf8583.c"
  5902 ;; Parameters:    Size  Location     Type
  5903 ;;  address         1    wreg     unsigned char 
  5904 ;;  data            1    8[BANK0 ] unsigned char 
  5905 ;; Auto vars:     Size  Location     Type
  5906 ;;  address         1   11[BANK0 ] unsigned char 
  5907 ;; Return value:  Size  Location     Type
  5908 ;;                  1    wreg      void 
  5909 ;; Registers used:
  5910 ;;		wreg, status,2, status,0, pclath, cstack
  5911 ;; Tracked objects:
  5912 ;;		On entry : 0/0
  5913 ;;		On exit  : 0/0
  5914 ;;		Unchanged: 0/0
  5915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5916 ;;      Params:         0       1       0       0       0
  5917 ;;      Locals:         0       1       0       0       0
  5918 ;;      Temps:          0       2       0       0       0
  5919 ;;      Totals:         0       4       0       0       0
  5920 ;;Total ram usage:        4 bytes
  5921 ;; Hardware stack levels used:    1
  5922 ;; Hardware stack levels required when called:    6
  5923 ;; This function calls:
  5924 ;;		_I2C_Master_Start
  5925 ;;		_I2C_Master_Stop
  5926 ;;		_I2C_Master_Write
  5927 ;; This function is called by:
  5928 ;;		_PCF8583_Read_Time_Date
  5929 ;; This function uses a non-reentrant model
  5930 ;;
  5931                           
  5932                           
  5933                           ;psect for function _PCF8583_Write_Byte
  5934  0BBB                     _PCF8583_Write_Byte:	
  5935                           
  5936                           ;incstack = 0
  5937 ;; hardware stack exceeded
  5938                           ; Regs used in _PCF8583_Write_Byte: [wreg+status,2+status,0+pclath+cstack]
  5939                           ;PCF8583_Write_Byte@address stored from wreg
  5940  0BBB  1283               	bcf	3,5	;RP0=0, select bank0
  5941  0BBC  1303               	bcf	3,6	;RP1=0, select bank0
  5942  0BBD  00AB               	movwf	PCF8583_Write_Byte@address
  5943  0BBE                     l3803:	
  5944                           
  5945                           ;pcf8583.c: 59: void PCF8583_Write_Byte(unsigned char address, unsigned char data);pcf85
      +                          83.c: 60: {;pcf8583.c: 61:  I2C_Master_Start();
  5946  0BBE  120A  158A  220B  120A  158A  	fcall	_I2C_Master_Start
  5947  0BC3                     l3805:	
  5948                           
  5949                           ;pcf8583.c: 62:  I2C_Master_Write(0xA0);
  5950  0BC3  30A0               	movlw	160
  5951  0BC4  1283               	bcf	3,5	;RP0=0, select bank0
  5952  0BC5  1303               	bcf	3,6	;RP1=0, select bank0
  5953  0BC6  00A6               	movwf	I2C_Master_Write@data
  5954  0BC7  3000               	movlw	0
  5955  0BC8  00A7               	movwf	I2C_Master_Write@data+1
  5956  0BC9  120A  158A  221D  120A  158A  	fcall	_I2C_Master_Write
  5957  0BCE                     l3807:	
  5958                           
  5959                           ;pcf8583.c: 63:  I2C_Master_Write(address);
  5960  0BCE  1283               	bcf	3,5	;RP0=0, select bank0
  5961  0BCF  1303               	bcf	3,6	;RP1=0, select bank0
  5962  0BD0  082B               	movf	PCF8583_Write_Byte@address,w
  5963  0BD1  00A9               	movwf	??_PCF8583_Write_Byte
  5964  0BD2  01AA               	clrf	??_PCF8583_Write_Byte+1
  5965  0BD3  0829               	movf	??_PCF8583_Write_Byte,w
  5966  0BD4  00A6               	movwf	I2C_Master_Write@data
  5967  0BD5  082A               	movf	??_PCF8583_Write_Byte+1,w
  5968  0BD6  00A7               	movwf	I2C_Master_Write@data+1
  5969  0BD7  120A  158A  221D  120A  158A  	fcall	_I2C_Master_Write
  5970  0BDC                     l3809:	
  5971                           
  5972                           ;pcf8583.c: 64:  I2C_Master_Write(data);
  5973  0BDC  1283               	bcf	3,5	;RP0=0, select bank0
  5974  0BDD  1303               	bcf	3,6	;RP1=0, select bank0
  5975  0BDE  0828               	movf	PCF8583_Write_Byte@data,w
  5976  0BDF  00A9               	movwf	??_PCF8583_Write_Byte
  5977  0BE0  01AA               	clrf	??_PCF8583_Write_Byte+1
  5978  0BE1  0829               	movf	??_PCF8583_Write_Byte,w
  5979  0BE2  00A6               	movwf	I2C_Master_Write@data
  5980  0BE3  082A               	movf	??_PCF8583_Write_Byte+1,w
  5981  0BE4  00A7               	movwf	I2C_Master_Write@data+1
  5982  0BE5  120A  158A  221D  120A  158A  	fcall	_I2C_Master_Write
  5983  0BEA                     l3811:	
  5984                           
  5985                           ;pcf8583.c: 65:  I2C_Master_Stop();
  5986  0BEA  120A  158A  2214  120A  158A  	fcall	_I2C_Master_Stop
  5987  0BEF                     l521:	
  5988  0BEF  0008               	return
  5989  0BF0                     __end_of_PCF8583_Write_Byte:	
  5990                           
  5991                           	psect	text31
  5992  0CAE                     __ptext31:	
  5993 ;; *************** function _PCF8583_Read_Byte *****************
  5994 ;; Defined at:
  5995 ;;		line 69 in file "pcf8583.c"
  5996 ;; Parameters:    Size  Location     Type
  5997 ;;  address         1    wreg     unsigned char 
  5998 ;; Auto vars:     Size  Location     Type
  5999 ;;  address         1   13[BANK0 ] unsigned char 
  6000 ;;  retval          1   14[BANK0 ] unsigned char 
  6001 ;; Return value:  Size  Location     Type
  6002 ;;                  1    wreg      unsigned char 
  6003 ;; Registers used:
  6004 ;;		wreg, status,2, status,0, pclath, cstack
  6005 ;; Tracked objects:
  6006 ;;		On entry : 0/0
  6007 ;;		On exit  : 0/0
  6008 ;;		Unchanged: 0/0
  6009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6010 ;;      Params:         0       0       0       0       0
  6011 ;;      Locals:         0       2       0       0       0
  6012 ;;      Temps:          0       2       0       0       0
  6013 ;;      Totals:         0       4       0       0       0
  6014 ;;Total ram usage:        4 bytes
  6015 ;; Hardware stack levels used:    1
  6016 ;; Hardware stack levels required when called:    6
  6017 ;; This function calls:
  6018 ;;		_I2C_Master_Read
  6019 ;;		_I2C_Master_Start
  6020 ;;		_I2C_Master_Stop
  6021 ;;		_I2C_Master_Write
  6022 ;; This function is called by:
  6023 ;;		_PCF8583_Read_Time_Date
  6024 ;; This function uses a non-reentrant model
  6025 ;;
  6026                           
  6027                           
  6028                           ;psect for function _PCF8583_Read_Byte
  6029  0CAE                     _PCF8583_Read_Byte:	
  6030                           
  6031                           ;incstack = 0
  6032 ;; hardware stack exceeded
  6033                           ; Regs used in _PCF8583_Read_Byte: [wreg+status,2+status,0+pclath+cstack]
  6034                           ;PCF8583_Read_Byte@address stored from wreg
  6035  0CAE  1283               	bcf	3,5	;RP0=0, select bank0
  6036  0CAF  1303               	bcf	3,6	;RP1=0, select bank0
  6037  0CB0  00AD               	movwf	PCF8583_Read_Byte@address
  6038  0CB1                     l3813:	
  6039                           
  6040                           ;pcf8583.c: 69: unsigned char PCF8583_Read_Byte(unsigned char address);pcf8583.c: 70: {;
      +                          pcf8583.c: 71:  unsigned char retval;;pcf8583.c: 72:  I2C_Master_Start();
  6041  0CB1  120A  158A  220B  120A  158A  	fcall	_I2C_Master_Start
  6042  0CB6                     l3815:	
  6043                           
  6044                           ;pcf8583.c: 73:  I2C_Master_Write(0xA0);
  6045  0CB6  30A0               	movlw	160
  6046  0CB7  1283               	bcf	3,5	;RP0=0, select bank0
  6047  0CB8  1303               	bcf	3,6	;RP1=0, select bank0
  6048  0CB9  00A6               	movwf	I2C_Master_Write@data
  6049  0CBA  3000               	movlw	0
  6050  0CBB  00A7               	movwf	I2C_Master_Write@data+1
  6051  0CBC  120A  158A  221D  120A  158A  	fcall	_I2C_Master_Write
  6052  0CC1                     l3817:	
  6053                           
  6054                           ;pcf8583.c: 74:  I2C_Master_Write(address);
  6055  0CC1  1283               	bcf	3,5	;RP0=0, select bank0
  6056  0CC2  1303               	bcf	3,6	;RP1=0, select bank0
  6057  0CC3  082D               	movf	PCF8583_Read_Byte@address,w
  6058  0CC4  00AB               	movwf	??_PCF8583_Read_Byte
  6059  0CC5  01AC               	clrf	??_PCF8583_Read_Byte+1
  6060  0CC6  082B               	movf	??_PCF8583_Read_Byte,w
  6061  0CC7  00A6               	movwf	I2C_Master_Write@data
  6062  0CC8  082C               	movf	??_PCF8583_Read_Byte+1,w
  6063  0CC9  00A7               	movwf	I2C_Master_Write@data+1
  6064  0CCA  120A  158A  221D  120A  158A  	fcall	_I2C_Master_Write
  6065                           
  6066                           ;pcf8583.c: 75:  I2C_Master_Start();
  6067  0CCF  120A  158A  220B  120A  158A  	fcall	_I2C_Master_Start
  6068  0CD4                     l3819:	
  6069                           
  6070                           ;pcf8583.c: 76:  I2C_Master_Write(0xA1);
  6071  0CD4  30A1               	movlw	161
  6072  0CD5  1283               	bcf	3,5	;RP0=0, select bank0
  6073  0CD6  1303               	bcf	3,6	;RP1=0, select bank0
  6074  0CD7  00A6               	movwf	I2C_Master_Write@data
  6075  0CD8  3000               	movlw	0
  6076  0CD9  00A7               	movwf	I2C_Master_Write@data+1
  6077  0CDA  120A  158A  221D  120A  158A  	fcall	_I2C_Master_Write
  6078  0CDF                     l3821:	
  6079                           
  6080                           ;pcf8583.c: 77:  retval = I2C_Master_Read(0);
  6081  0CDF  3000               	movlw	0
  6082  0CE0  120A  158A  2358  120A  158A  	fcall	_I2C_Master_Read
  6083  0CE5  1283               	bcf	3,5	;RP0=0, select bank0
  6084  0CE6  1303               	bcf	3,6	;RP1=0, select bank0
  6085  0CE7  00AB               	movwf	??_PCF8583_Read_Byte
  6086  0CE8  082B               	movf	??_PCF8583_Read_Byte,w
  6087  0CE9  00AE               	movwf	PCF8583_Read_Byte@retval
  6088                           
  6089                           ;pcf8583.c: 78:  I2C_Master_Stop();
  6090  0CEA  120A  158A  2214  120A  158A  	fcall	_I2C_Master_Stop
  6091  0CEF                     l3823:	
  6092                           
  6093                           ;pcf8583.c: 79:  return(retval);
  6094  0CEF  1283               	bcf	3,5	;RP0=0, select bank0
  6095  0CF0  1303               	bcf	3,6	;RP1=0, select bank0
  6096  0CF1  082E               	movf	PCF8583_Read_Byte@retval,w
  6097  0CF2                     l524:	
  6098  0CF2  0008               	return
  6099  0CF3                     __end_of_PCF8583_Read_Byte:	
  6100                           
  6101                           	psect	text32
  6102  0A1D                     __ptext32:	
  6103 ;; *************** function _I2C_Master_Write *****************
  6104 ;; Defined at:
  6105 ;;		line 42 in file "hw_i2c.c"
  6106 ;; Parameters:    Size  Location     Type
  6107 ;;  data            2    6[BANK0 ] unsigned int 
  6108 ;; Auto vars:     Size  Location     Type
  6109 ;;		None
  6110 ;; Return value:  Size  Location     Type
  6111 ;;                  1    wreg      void 
  6112 ;; Registers used:
  6113 ;;		wreg, status,2, status,0, pclath, cstack
  6114 ;; Tracked objects:
  6115 ;;		On entry : 0/0
  6116 ;;		On exit  : 0/0
  6117 ;;		Unchanged: 0/0
  6118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6119 ;;      Params:         0       2       0       0       0
  6120 ;;      Locals:         0       0       0       0       0
  6121 ;;      Temps:          0       0       0       0       0
  6122 ;;      Totals:         0       2       0       0       0
  6123 ;;Total ram usage:        2 bytes
  6124 ;; Hardware stack levels used:    1
  6125 ;; Hardware stack levels required when called:    5
  6126 ;; This function calls:
  6127 ;;		_I2C_Master_Wait
  6128 ;; This function is called by:
  6129 ;;		_PCF8583_Write_Byte
  6130 ;;		_PCF8583_Read_Byte
  6131 ;;		_PCF8583_Read_Time_Date
  6132 ;; This function uses a non-reentrant model
  6133 ;;
  6134                           
  6135                           
  6136                           ;psect for function _I2C_Master_Write
  6137  0A1D                     _I2C_Master_Write:	
  6138  0A1D                     l3761:	
  6139                           ;incstack = 0
  6140 ;; hardware stack exceeded
  6141                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  6142                           
  6143                           
  6144                           ;hw_i2c.c: 42: void I2C_Master_Write(unsigned data);hw_i2c.c: 43: {;hw_i2c.c: 44:   I2C_
      +                          Master_Wait();
  6145  0A1D  120A  158A  229D  120A  158A  	fcall	_I2C_Master_Wait
  6146  0A22                     l3763:	
  6147                           
  6148                           ;hw_i2c.c: 45:   SSPBUF = data;
  6149  0A22  1283               	bcf	3,5	;RP0=0, select bank0
  6150  0A23  1303               	bcf	3,6	;RP1=0, select bank0
  6151  0A24  0826               	movf	I2C_Master_Write@data,w
  6152  0A25  0093               	movwf	19	;volatile
  6153  0A26                     l570:	
  6154  0A26  0008               	return
  6155  0A27                     __end_of_I2C_Master_Write:	
  6156                           
  6157                           	psect	text33
  6158  0A14                     __ptext33:	
  6159 ;; *************** function _I2C_Master_Stop *****************
  6160 ;; Defined at:
  6161 ;;		line 35 in file "hw_i2c.c"
  6162 ;; Parameters:    Size  Location     Type
  6163 ;;		None
  6164 ;; Auto vars:     Size  Location     Type
  6165 ;;		None
  6166 ;; Return value:  Size  Location     Type
  6167 ;;                  1    wreg      void 
  6168 ;; Registers used:
  6169 ;;		status,2, status,0, pclath, cstack
  6170 ;; Tracked objects:
  6171 ;;		On entry : 0/0
  6172 ;;		On exit  : 0/0
  6173 ;;		Unchanged: 0/0
  6174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6175 ;;      Params:         0       0       0       0       0
  6176 ;;      Locals:         0       0       0       0       0
  6177 ;;      Temps:          0       0       0       0       0
  6178 ;;      Totals:         0       0       0       0       0
  6179 ;;Total ram usage:        0 bytes
  6180 ;; Hardware stack levels used:    1
  6181 ;; Hardware stack levels required when called:    5
  6182 ;; This function calls:
  6183 ;;		_I2C_Master_Wait
  6184 ;; This function is called by:
  6185 ;;		_PCF8583_Write_Byte
  6186 ;;		_PCF8583_Read_Byte
  6187 ;;		_PCF8583_Read_Time_Date
  6188 ;; This function uses a non-reentrant model
  6189 ;;
  6190                           
  6191                           
  6192                           ;psect for function _I2C_Master_Stop
  6193  0A14                     _I2C_Master_Stop:	
  6194  0A14                     l3765:	
  6195                           ;incstack = 0
  6196 ;; hardware stack exceeded
  6197                           ; Regs used in _I2C_Master_Stop: [status,2+status,0+pclath+cstack]
  6198                           
  6199                           
  6200                           ;hw_i2c.c: 37:   I2C_Master_Wait();
  6201  0A14  120A  158A  229D  120A  158A  	fcall	_I2C_Master_Wait
  6202  0A19                     l3767:	
  6203                           
  6204                           ;hw_i2c.c: 38:   SSPCON2bits.PEN = 1;
  6205  0A19  1683               	bsf	3,5	;RP0=1, select bank1
  6206  0A1A  1303               	bcf	3,6	;RP1=0, select bank1
  6207  0A1B  1511               	bsf	17,2	;volatile
  6208  0A1C                     l567:	
  6209  0A1C  0008               	return
  6210  0A1D                     __end_of_I2C_Master_Stop:	
  6211                           
  6212                           	psect	text34
  6213  0A0B                     __ptext34:	
  6214 ;; *************** function _I2C_Master_Start *****************
  6215 ;; Defined at:
  6216 ;;		line 28 in file "hw_i2c.c"
  6217 ;; Parameters:    Size  Location     Type
  6218 ;;		None
  6219 ;; Auto vars:     Size  Location     Type
  6220 ;;		None
  6221 ;; Return value:  Size  Location     Type
  6222 ;;                  1    wreg      void 
  6223 ;; Registers used:
  6224 ;;		status,2, status,0, pclath, cstack
  6225 ;; Tracked objects:
  6226 ;;		On entry : 0/0
  6227 ;;		On exit  : 0/0
  6228 ;;		Unchanged: 0/0
  6229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6230 ;;      Params:         0       0       0       0       0
  6231 ;;      Locals:         0       0       0       0       0
  6232 ;;      Temps:          0       0       0       0       0
  6233 ;;      Totals:         0       0       0       0       0
  6234 ;;Total ram usage:        0 bytes
  6235 ;; Hardware stack levels used:    1
  6236 ;; Hardware stack levels required when called:    5
  6237 ;; This function calls:
  6238 ;;		_I2C_Master_Wait
  6239 ;; This function is called by:
  6240 ;;		_PCF8583_Write_Byte
  6241 ;;		_PCF8583_Read_Byte
  6242 ;;		_PCF8583_Read_Time_Date
  6243 ;; This function uses a non-reentrant model
  6244 ;;
  6245                           
  6246                           
  6247                           ;psect for function _I2C_Master_Start
  6248  0A0B                     _I2C_Master_Start:	
  6249  0A0B                     l3757:	
  6250                           ;incstack = 0
  6251 ;; hardware stack exceeded
  6252                           ; Regs used in _I2C_Master_Start: [status,2+status,0+pclath+cstack]
  6253                           
  6254                           
  6255                           ;hw_i2c.c: 30:   I2C_Master_Wait();
  6256  0A0B  120A  158A  229D  120A  158A  	fcall	_I2C_Master_Wait
  6257  0A10                     l3759:	
  6258                           
  6259                           ;hw_i2c.c: 31:   SSPCON2bits.SEN = 1;
  6260  0A10  1683               	bsf	3,5	;RP0=1, select bank1
  6261  0A11  1303               	bcf	3,6	;RP1=0, select bank1
  6262  0A12  1411               	bsf	17,0	;volatile
  6263  0A13                     l564:	
  6264  0A13  0008               	return
  6265  0A14                     __end_of_I2C_Master_Start:	
  6266                           
  6267                           	psect	text35
  6268  0B58                     __ptext35:	
  6269 ;; *************** function _I2C_Master_Read *****************
  6270 ;; Defined at:
  6271 ;;		line 49 in file "hw_i2c.c"
  6272 ;; Parameters:    Size  Location     Type
  6273 ;;  ack             1    wreg     unsigned char 
  6274 ;; Auto vars:     Size  Location     Type
  6275 ;;  ack             1    8[BANK0 ] unsigned char 
  6276 ;;  data            2    9[BANK0 ] unsigned short 
  6277 ;; Return value:  Size  Location     Type
  6278 ;;                  1    wreg      unsigned char 
  6279 ;; Registers used:
  6280 ;;		wreg, status,2, status,0, pclath, cstack
  6281 ;; Tracked objects:
  6282 ;;		On entry : 0/0
  6283 ;;		On exit  : 0/0
  6284 ;;		Unchanged: 0/0
  6285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6286 ;;      Params:         0       0       0       0       0
  6287 ;;      Locals:         0       3       0       0       0
  6288 ;;      Temps:          0       2       0       0       0
  6289 ;;      Totals:         0       5       0       0       0
  6290 ;;Total ram usage:        5 bytes
  6291 ;; Hardware stack levels used:    1
  6292 ;; Hardware stack levels required when called:    5
  6293 ;; This function calls:
  6294 ;;		_I2C_Master_Wait
  6295 ;; This function is called by:
  6296 ;;		_PCF8583_Read_Byte
  6297 ;;		_PCF8583_Read_Time_Date
  6298 ;; This function uses a non-reentrant model
  6299 ;;
  6300                           
  6301                           
  6302                           ;psect for function _I2C_Master_Read
  6303  0B58                     _I2C_Master_Read:	
  6304                           
  6305                           ;incstack = 0
  6306 ;; hardware stack exceeded
  6307                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  6308                           ;I2C_Master_Read@ack stored from wreg
  6309  0B58  1283               	bcf	3,5	;RP0=0, select bank0
  6310  0B59  1303               	bcf	3,6	;RP1=0, select bank0
  6311  0B5A  00A8               	movwf	I2C_Master_Read@ack
  6312  0B5B                     l3769:	
  6313                           
  6314                           ;hw_i2c.c: 49: unsigned char I2C_Master_Read(unsigned char ack);hw_i2c.c: 50: {;hw_i2c.c
      +                          : 51:     unsigned short data;;hw_i2c.c: 52:     I2C_Master_Wait();
  6315  0B5B  120A  158A  229D  120A  158A  	fcall	_I2C_Master_Wait
  6316  0B60                     l3771:	
  6317                           
  6318                           ;hw_i2c.c: 53:     RCEN = 1;
  6319  0B60  1683               	bsf	3,5	;RP0=1, select bank1
  6320  0B61  1303               	bcf	3,6	;RP1=0, select bank1
  6321  0B62  1591               	bsf	17,3	;volatile
  6322                           
  6323                           ;hw_i2c.c: 54:     I2C_Master_Wait();
  6324  0B63  120A  158A  229D  120A  158A  	fcall	_I2C_Master_Wait
  6325  0B68                     l3773:	
  6326                           
  6327                           ;hw_i2c.c: 55:     data = SSPBUF;
  6328  0B68  1283               	bcf	3,5	;RP0=0, select bank0
  6329  0B69  1303               	bcf	3,6	;RP1=0, select bank0
  6330  0B6A  0813               	movf	19,w	;volatile
  6331  0B6B  00A6               	movwf	??_I2C_Master_Read
  6332  0B6C  01A7               	clrf	??_I2C_Master_Read+1
  6333  0B6D  0826               	movf	??_I2C_Master_Read,w
  6334  0B6E  00A9               	movwf	I2C_Master_Read@data
  6335  0B6F  0827               	movf	??_I2C_Master_Read+1,w
  6336  0B70  00AA               	movwf	I2C_Master_Read@data+1
  6337  0B71                     l3775:	
  6338                           
  6339                           ;hw_i2c.c: 56:     I2C_Master_Wait();
  6340  0B71  120A  158A  229D  120A  158A  	fcall	_I2C_Master_Wait
  6341  0B76                     l3777:	
  6342                           
  6343                           ;hw_i2c.c: 57:     ACKDT = (ack)?0:1;
  6344  0B76  1283               	bcf	3,5	;RP0=0, select bank0
  6345  0B77  1303               	bcf	3,6	;RP1=0, select bank0
  6346  0B78  0828               	movf	I2C_Master_Read@ack,w
  6347  0B79  1903               	btfsc	3,2
  6348  0B7A  2B7C               	goto	u3311
  6349  0B7B  2B80               	goto	u3310
  6350  0B7C                     u3311:	
  6351  0B7C  1683               	bsf	3,5	;RP0=1, select bank1
  6352  0B7D  1303               	bcf	3,6	;RP1=0, select bank1
  6353  0B7E  1691               	bsf	17,5	;volatile
  6354  0B7F  2B83               	goto	u3324
  6355  0B80                     u3310:	
  6356  0B80  1683               	bsf	3,5	;RP0=1, select bank1
  6357  0B81  1303               	bcf	3,6	;RP1=0, select bank1
  6358  0B82  1291               	bcf	17,5	;volatile
  6359  0B83                     u3324:	
  6360  0B83                     l3779:	
  6361                           
  6362                           ;hw_i2c.c: 58:     ACKEN = 1;
  6363  0B83  1611               	bsf	17,4	;volatile
  6364  0B84                     l3781:	
  6365                           
  6366                           ;hw_i2c.c: 59:     return data;
  6367  0B84  1283               	bcf	3,5	;RP0=0, select bank0
  6368  0B85  1303               	bcf	3,6	;RP1=0, select bank0
  6369  0B86  0829               	movf	I2C_Master_Read@data,w
  6370  0B87                     l573:	
  6371  0B87  0008               	return
  6372  0B88                     __end_of_I2C_Master_Read:	
  6373                           
  6374                           	psect	text36
  6375  0A9D                     __ptext36:	
  6376 ;; *************** function _I2C_Master_Wait *****************
  6377 ;; Defined at:
  6378 ;;		line 21 in file "hw_i2c.c"
  6379 ;; Parameters:    Size  Location     Type
  6380 ;;		None
  6381 ;; Auto vars:     Size  Location     Type
  6382 ;;		None
  6383 ;; Return value:  Size  Location     Type
  6384 ;;                  1    wreg      void 
  6385 ;; Registers used:
  6386 ;;		None
  6387 ;; Tracked objects:
  6388 ;;		On entry : 0/0
  6389 ;;		On exit  : 0/0
  6390 ;;		Unchanged: 0/0
  6391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6392 ;;      Params:         0       0       0       0       0
  6393 ;;      Locals:         0       0       0       0       0
  6394 ;;      Temps:          0       0       0       0       0
  6395 ;;      Totals:         0       0       0       0       0
  6396 ;;Total ram usage:        0 bytes
  6397 ;; Hardware stack levels used:    1
  6398 ;; Hardware stack levels required when called:    4
  6399 ;; This function calls:
  6400 ;;		Nothing
  6401 ;; This function is called by:
  6402 ;;		_I2C_Master_Start
  6403 ;;		_I2C_Master_Stop
  6404 ;;		_I2C_Master_Write
  6405 ;;		_I2C_Master_Read
  6406 ;; This function uses a non-reentrant model
  6407 ;;
  6408                           
  6409                           
  6410                           ;psect for function _I2C_Master_Wait
  6411  0A9D                     _I2C_Master_Wait:	
  6412  0A9D                     l3745:	
  6413                           ;incstack = 0
  6414 ;; hardware stack exceeded
  6415                           ; Regs used in _I2C_Master_Wait: []
  6416                           
  6417  0A9D                     l558:	
  6418                           ;hw_i2c.c: 25:           SSPCON2bits.SEN || SSPCON2bits.ACKEN || SSPSTATbits.R_nW);
  6419                           
  6420                           
  6421                           ;hw_i2c.c: 24:     while (SSPCON2bits.RCEN || SSPCON2bits.PEN || SSPCON2bits.RSEN ||
  6422  0A9D  1683               	bsf	3,5	;RP0=1, select bank1
  6423  0A9E  1303               	bcf	3,6	;RP1=0, select bank1
  6424  0A9F  1991               	btfsc	17,3	;volatile
  6425  0AA0  2AA2               	goto	u3251
  6426  0AA1  2AA3               	goto	u3250
  6427  0AA2                     u3251:	
  6428  0AA2  2A9D               	goto	l558
  6429  0AA3                     u3250:	
  6430  0AA3                     l3747:	
  6431  0AA3  1911               	btfsc	17,2	;volatile
  6432  0AA4  2AA6               	goto	u3261
  6433  0AA5  2AA7               	goto	u3260
  6434  0AA6                     u3261:	
  6435  0AA6  2A9D               	goto	l558
  6436  0AA7                     u3260:	
  6437  0AA7                     l3749:	
  6438  0AA7  1891               	btfsc	17,1	;volatile
  6439  0AA8  2AAA               	goto	u3271
  6440  0AA9  2AAB               	goto	u3270
  6441  0AAA                     u3271:	
  6442  0AAA  2A9D               	goto	l558
  6443  0AAB                     u3270:	
  6444  0AAB                     l3751:	
  6445  0AAB  1811               	btfsc	17,0	;volatile
  6446  0AAC  2AAE               	goto	u3281
  6447  0AAD  2AAF               	goto	u3280
  6448  0AAE                     u3281:	
  6449  0AAE  2A9D               	goto	l558
  6450  0AAF                     u3280:	
  6451  0AAF                     l3753:	
  6452  0AAF  1A11               	btfsc	17,4	;volatile
  6453  0AB0  2AB2               	goto	u3291
  6454  0AB1  2AB3               	goto	u3290
  6455  0AB2                     u3291:	
  6456  0AB2  2A9D               	goto	l558
  6457  0AB3                     u3290:	
  6458  0AB3                     l3755:	
  6459  0AB3  1914               	btfsc	20,2	;volatile
  6460  0AB4  2AB6               	goto	u3301
  6461  0AB5  2AB7               	goto	u3300
  6462  0AB6                     u3301:	
  6463  0AB6  2A9D               	goto	l558
  6464  0AB7                     u3300:	
  6465  0AB7                     l561:	
  6466  0AB7  0008               	return
  6467  0AB8                     __end_of_I2C_Master_Wait:	
  6468                           
  6469                           	psect	text37
  6470  0AB8                     __ptext37:	
  6471 ;; *************** function _BCD_2_DEC *****************
  6472 ;; Defined at:
  6473 ;;		line 30 in file "pcf8583.c"
  6474 ;; Parameters:    Size  Location     Type
  6475 ;;  bcd             1    wreg     unsigned char 
  6476 ;; Auto vars:     Size  Location     Type
  6477 ;;  bcd             1   13[BANK0 ] unsigned char 
  6478 ;; Return value:  Size  Location     Type
  6479 ;;                  1    wreg      unsigned char 
  6480 ;; Registers used:
  6481 ;;		wreg, status,2, status,0, pclath, cstack
  6482 ;; Tracked objects:
  6483 ;;		On entry : 0/0
  6484 ;;		On exit  : 0/0
  6485 ;;		Unchanged: 0/0
  6486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6487 ;;      Params:         0       0       0       0       0
  6488 ;;      Locals:         0       1       0       0       0
  6489 ;;      Temps:          0       3       0       0       0
  6490 ;;      Totals:         0       4       0       0       0
  6491 ;;Total ram usage:        4 bytes
  6492 ;; Hardware stack levels used:    1
  6493 ;; Hardware stack levels required when called:    5
  6494 ;; This function calls:
  6495 ;;		___bmul
  6496 ;; This function is called by:
  6497 ;;		_PCF8583_Read_Time_Date
  6498 ;; This function uses a non-reentrant model
  6499 ;;
  6500                           
  6501                           
  6502                           ;psect for function _BCD_2_DEC
  6503  0AB8                     _BCD_2_DEC:	
  6504                           
  6505                           ;incstack = 0
  6506 ;; hardware stack exceeded
  6507                           ; Regs used in _BCD_2_DEC: [wreg+status,2+status,0+pclath+cstack]
  6508                           ;BCD_2_DEC@bcd stored from wreg
  6509  0AB8  1283               	bcf	3,5	;RP0=0, select bank0
  6510  0AB9  1303               	bcf	3,6	;RP1=0, select bank0
  6511  0ABA  00AD               	movwf	BCD_2_DEC@bcd
  6512  0ABB                     l3799:	
  6513                           
  6514                           ;pcf8583.c: 30: unsigned char BCD_2_DEC(unsigned char bcd);pcf8583.c: 31: {;pcf8583.c: 3
      +                          2:     return (((bcd>>4)*10) + (bcd&0x0F));
  6515  0ABB  300F               	movlw	15
  6516  0ABC  052D               	andwf	BCD_2_DEC@bcd,w
  6517  0ABD  00AA               	movwf	??_BCD_2_DEC
  6518  0ABE  300A               	movlw	10
  6519  0ABF  00AB               	movwf	??_BCD_2_DEC+1
  6520  0AC0  082B               	movf	??_BCD_2_DEC+1,w
  6521  0AC1  00A6               	movwf	___bmul@multiplicand
  6522  0AC2  082D               	movf	BCD_2_DEC@bcd,w
  6523  0AC3  00AC               	movwf	??_BCD_2_DEC+2
  6524  0AC4  3004               	movlw	4
  6525  0AC5                     u3355:	
  6526  0AC5  1003               	clrc
  6527  0AC6  0CAC               	rrf	??_BCD_2_DEC+2,f
  6528  0AC7  3EFF               	addlw	-1
  6529  0AC8  1D03               	skipz
  6530  0AC9  2AC5               	goto	u3355
  6531  0ACA  082C               	movf	??_BCD_2_DEC+2,w
  6532  0ACB  120A  158A  2286  120A  158A  	fcall	___bmul
  6533  0AD0  1283               	bcf	3,5	;RP0=0, select bank0
  6534  0AD1  1303               	bcf	3,6	;RP1=0, select bank0
  6535  0AD2  072A               	addwf	??_BCD_2_DEC,w
  6536  0AD3                     l512:	
  6537  0AD3  0008               	return
  6538  0AD4                     __end_of_BCD_2_DEC:	
  6539                           
  6540                           	psect	text38
  6541  0A86                     __ptext38:	
  6542 ;; *************** function ___bmul *****************
  6543 ;; Defined at:
  6544 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/Umul8.c"
  6545 ;; Parameters:    Size  Location     Type
  6546 ;;  multiplier      1    wreg     unsigned char 
  6547 ;;  multiplicand    1    6[BANK0 ] unsigned char 
  6548 ;; Auto vars:     Size  Location     Type
  6549 ;;  multiplier      1    9[BANK0 ] unsigned char 
  6550 ;;  product         1    8[BANK0 ] unsigned char 
  6551 ;; Return value:  Size  Location     Type
  6552 ;;                  1    wreg      unsigned char 
  6553 ;; Registers used:
  6554 ;;		wreg, status,2, status,0
  6555 ;; Tracked objects:
  6556 ;;		On entry : 0/0
  6557 ;;		On exit  : 0/0
  6558 ;;		Unchanged: 0/0
  6559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6560 ;;      Params:         0       1       0       0       0
  6561 ;;      Locals:         0       2       0       0       0
  6562 ;;      Temps:          0       1       0       0       0
  6563 ;;      Totals:         0       4       0       0       0
  6564 ;;Total ram usage:        4 bytes
  6565 ;; Hardware stack levels used:    1
  6566 ;; Hardware stack levels required when called:    4
  6567 ;; This function calls:
  6568 ;;		Nothing
  6569 ;; This function is called by:
  6570 ;;		_BCD_2_DEC
  6571 ;; This function uses a non-reentrant model
  6572 ;;
  6573                           
  6574                           
  6575                           ;psect for function ___bmul
  6576  0A86                     ___bmul:	
  6577                           
  6578                           ;incstack = 0
  6579 ;; hardware stack exceeded
  6580                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  6581                           ;___bmul@multiplier stored from wreg
  6582  0A86  1283               	bcf	3,5	;RP0=0, select bank0
  6583  0A87  1303               	bcf	3,6	;RP1=0, select bank0
  6584  0A88  00A9               	movwf	___bmul@multiplier
  6585  0A89                     l3785:	
  6586  0A89  01A8               	clrf	___bmul@product
  6587  0A8A                     l3787:	
  6588  0A8A  1C29               	btfss	___bmul@multiplier,0
  6589  0A8B  2A8D               	goto	u3331
  6590  0A8C  2A8E               	goto	u3330
  6591  0A8D                     u3331:	
  6592  0A8D  2A92               	goto	l3791
  6593  0A8E                     u3330:	
  6594  0A8E                     l3789:	
  6595  0A8E  0826               	movf	___bmul@multiplicand,w
  6596  0A8F  00A7               	movwf	??___bmul
  6597  0A90  0827               	movf	??___bmul,w
  6598  0A91  07A8               	addwf	___bmul@product,f
  6599  0A92                     l3791:	
  6600  0A92  1003               	clrc
  6601  0A93  0DA6               	rlf	___bmul@multiplicand,f
  6602  0A94                     l3793:	
  6603  0A94  1003               	clrc
  6604  0A95  0CA9               	rrf	___bmul@multiplier,f
  6605  0A96  0829               	movf	___bmul@multiplier,w
  6606  0A97  1D03               	btfss	3,2
  6607  0A98  2A9A               	goto	u3341
  6608  0A99  2A9B               	goto	u3340
  6609  0A9A                     u3341:	
  6610  0A9A  2A8A               	goto	l3787
  6611  0A9B                     u3340:	
  6612  0A9B                     l3795:	
  6613  0A9B  0828               	movf	___bmul@product,w
  6614  0A9C                     l789:	
  6615  0A9C  0008               	return
  6616  0A9D                     __end_of___bmul:	
  6617                           
  6618                           	psect	text39
  6619  0B28                     __ptext39:	
  6620 ;; *************** function _Display_2Dig *****************
  6621 ;; Defined at:
  6622 ;;		line 8 in file "menu.c"
  6623 ;; Parameters:    Size  Location     Type
  6624 ;;  data            1    wreg     unsigned char 
  6625 ;; Auto vars:     Size  Location     Type
  6626 ;;  data            1   18[BANK0 ] unsigned char 
  6627 ;; Return value:  Size  Location     Type
  6628 ;;                  1    wreg      void 
  6629 ;; Registers used:
  6630 ;;		wreg, status,2, status,0, pclath, cstack
  6631 ;; Tracked objects:
  6632 ;;		On entry : 0/0
  6633 ;;		On exit  : 0/0
  6634 ;;		Unchanged: 0/0
  6635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6636 ;;      Params:         0       0       0       0       0
  6637 ;;      Locals:         0       1       0       0       0
  6638 ;;      Temps:          0       3       0       0       0
  6639 ;;      Totals:         0       4       0       0       0
  6640 ;;Total ram usage:        4 bytes
  6641 ;; Hardware stack levels used:    1
  6642 ;; Hardware stack levels required when called:    5
  6643 ;; This function calls:
  6644 ;;		___awdiv
  6645 ;;		___awmod
  6646 ;; This function is called by:
  6647 ;;		_Set_RTC_Button_Short
  6648 ;; This function uses a non-reentrant model
  6649 ;;
  6650                           
  6651                           
  6652                           ;psect for function _Display_2Dig
  6653  0B28                     _Display_2Dig:	
  6654                           
  6655                           ;incstack = 0
  6656 ;; hardware stack exceeded
  6657                           ; Regs used in _Display_2Dig: [wreg+status,2+status,0+pclath+cstack]
  6658                           ;Display_2Dig@data stored from wreg
  6659  0B28  1283               	bcf	3,5	;RP0=0, select bank0
  6660  0B29  1303               	bcf	3,6	;RP1=0, select bank0
  6661  0B2A  00B2               	movwf	Display_2Dig@data
  6662  0B2B                     l4051:	
  6663                           
  6664                           ;menu.c: 8: void Display_2Dig(unsigned char data);menu.c: 9: {;menu.c: 10:     g_display
      +                          _text[2]=data/10;
  6665  0B2B  300A               	movlw	10
  6666  0B2C  00A6               	movwf	___awdiv@divisor
  6667  0B2D  3000               	movlw	0
  6668  0B2E  00A7               	movwf	___awdiv@divisor+1
  6669  0B2F  0832               	movf	Display_2Dig@data,w
  6670  0B30  00AF               	movwf	??_Display_2Dig
  6671  0B31  01B0               	clrf	??_Display_2Dig+1
  6672  0B32  082F               	movf	??_Display_2Dig,w
  6673  0B33  00A8               	movwf	___awdiv@dividend
  6674  0B34  0830               	movf	??_Display_2Dig+1,w
  6675  0B35  00A9               	movwf	___awdiv@dividend+1
  6676  0B36  120A  118A  272E  120A  158A  	fcall	___awdiv
  6677  0B3B  1283               	bcf	3,5	;RP0=0, select bank0
  6678  0B3C  1303               	bcf	3,6	;RP1=0, select bank0
  6679  0B3D  0826               	movf	?___awdiv,w
  6680  0B3E  00B1               	movwf	??_Display_2Dig+2
  6681  0B3F  0831               	movf	??_Display_2Dig+2,w
  6682  0B40  00DF               	movwf	_g_display_text+2
  6683                           
  6684                           ;menu.c: 11:     g_display_text[3]=data%10;
  6685  0B41  300A               	movlw	10
  6686  0B42  00A6               	movwf	___awmod@divisor
  6687  0B43  3000               	movlw	0
  6688  0B44  00A7               	movwf	___awmod@divisor+1
  6689  0B45  0832               	movf	Display_2Dig@data,w
  6690  0B46  00AF               	movwf	??_Display_2Dig
  6691  0B47  01B0               	clrf	??_Display_2Dig+1
  6692  0B48  082F               	movf	??_Display_2Dig,w
  6693  0B49  00A8               	movwf	___awmod@dividend
  6694  0B4A  0830               	movf	??_Display_2Dig+1,w
  6695  0B4B  00A9               	movwf	___awmod@dividend+1
  6696  0B4C  120A  158A  2746  120A  158A  	fcall	___awmod
  6697  0B51  1283               	bcf	3,5	;RP0=0, select bank0
  6698  0B52  1303               	bcf	3,6	;RP1=0, select bank0
  6699  0B53  0826               	movf	?___awmod,w
  6700  0B54  00B1               	movwf	??_Display_2Dig+2
  6701  0B55  0831               	movf	??_Display_2Dig+2,w
  6702  0B56  00E0               	movwf	_g_display_text+3
  6703  0B57                     l659:	
  6704  0B57  0008               	return
  6705  0B58                     __end_of_Display_2Dig:	
  6706                           
  6707                           	psect	text40
  6708  0F46                     __ptext40:	
  6709 ;; *************** function ___awmod *****************
  6710 ;; Defined at:
  6711 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/awmod.c"
  6712 ;; Parameters:    Size  Location     Type
  6713 ;;  divisor         2    6[BANK0 ] int 
  6714 ;;  dividend        2    8[BANK0 ] int 
  6715 ;; Auto vars:     Size  Location     Type
  6716 ;;  sign            1   12[BANK0 ] unsigned char 
  6717 ;;  counter         1   11[BANK0 ] unsigned char 
  6718 ;; Return value:  Size  Location     Type
  6719 ;;                  2    6[BANK0 ] int 
  6720 ;; Registers used:
  6721 ;;		wreg, status,2, status,0
  6722 ;; Tracked objects:
  6723 ;;		On entry : 0/0
  6724 ;;		On exit  : 0/0
  6725 ;;		Unchanged: 0/0
  6726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6727 ;;      Params:         0       4       0       0       0
  6728 ;;      Locals:         0       2       0       0       0
  6729 ;;      Temps:          0       1       0       0       0
  6730 ;;      Totals:         0       7       0       0       0
  6731 ;;Total ram usage:        7 bytes
  6732 ;; Hardware stack levels used:    1
  6733 ;; Hardware stack levels required when called:    4
  6734 ;; This function calls:
  6735 ;;		Nothing
  6736 ;; This function is called by:
  6737 ;;		_Display_2Dig
  6738 ;; This function uses a non-reentrant model
  6739 ;;
  6740                           
  6741                           
  6742                           ;psect for function ___awmod
  6743  0F46                     ___awmod:	
  6744  0F46                     l3909:	
  6745                           ;incstack = 0
  6746 ;; hardware stack exceeded
  6747                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  6748                           
  6749  0F46  1283               	bcf	3,5	;RP0=0, select bank0
  6750  0F47  1303               	bcf	3,6	;RP1=0, select bank0
  6751  0F48  01AC               	clrf	___awmod@sign
  6752  0F49                     l3911:	
  6753  0F49  1FA9               	btfss	___awmod@dividend+1,7
  6754  0F4A  2F4C               	goto	u3581
  6755  0F4B  2F4D               	goto	u3580
  6756  0F4C                     u3581:	
  6757  0F4C  2F54               	goto	l3917
  6758  0F4D                     u3580:	
  6759  0F4D                     l3913:	
  6760  0F4D  09A8               	comf	___awmod@dividend,f
  6761  0F4E  09A9               	comf	___awmod@dividend+1,f
  6762  0F4F  0AA8               	incf	___awmod@dividend,f
  6763  0F50  1903               	skipnz
  6764  0F51  0AA9               	incf	___awmod@dividend+1,f
  6765  0F52                     l3915:	
  6766  0F52  01AC               	clrf	___awmod@sign
  6767  0F53  0AAC               	incf	___awmod@sign,f
  6768  0F54                     l3917:	
  6769  0F54  1FA7               	btfss	___awmod@divisor+1,7
  6770  0F55  2F57               	goto	u3591
  6771  0F56  2F58               	goto	u3590
  6772  0F57                     u3591:	
  6773  0F57  2F5D               	goto	l3921
  6774  0F58                     u3590:	
  6775  0F58                     l3919:	
  6776  0F58  09A6               	comf	___awmod@divisor,f
  6777  0F59  09A7               	comf	___awmod@divisor+1,f
  6778  0F5A  0AA6               	incf	___awmod@divisor,f
  6779  0F5B  1903               	skipnz
  6780  0F5C  0AA7               	incf	___awmod@divisor+1,f
  6781  0F5D                     l3921:	
  6782  0F5D  0826               	movf	___awmod@divisor,w
  6783  0F5E  0427               	iorwf	___awmod@divisor+1,w
  6784  0F5F  1903               	btfsc	3,2
  6785  0F60  2F62               	goto	u3601
  6786  0F61  2F63               	goto	u3600
  6787  0F62                     u3601:	
  6788  0F62  2F92               	goto	l3939
  6789  0F63                     u3600:	
  6790  0F63                     l3923:	
  6791  0F63  01AB               	clrf	___awmod@counter
  6792  0F64  0AAB               	incf	___awmod@counter,f
  6793  0F65  2F71               	goto	l3929
  6794  0F66                     l3925:	
  6795  0F66  3001               	movlw	1
  6796  0F67                     u3615:	
  6797  0F67  1003               	clrc
  6798  0F68  0DA6               	rlf	___awmod@divisor,f
  6799  0F69  0DA7               	rlf	___awmod@divisor+1,f
  6800  0F6A  3EFF               	addlw	-1
  6801  0F6B  1D03               	skipz
  6802  0F6C  2F67               	goto	u3615
  6803  0F6D                     l3927:	
  6804  0F6D  3001               	movlw	1
  6805  0F6E  00AA               	movwf	??___awmod
  6806  0F6F  082A               	movf	??___awmod,w
  6807  0F70  07AB               	addwf	___awmod@counter,f
  6808  0F71                     l3929:	
  6809  0F71  1FA7               	btfss	___awmod@divisor+1,7
  6810  0F72  2F74               	goto	u3621
  6811  0F73  2F75               	goto	u3620
  6812  0F74                     u3621:	
  6813  0F74  2F66               	goto	l3925
  6814  0F75                     u3620:	
  6815  0F75                     l3931:	
  6816  0F75  0827               	movf	___awmod@divisor+1,w
  6817  0F76  0229               	subwf	___awmod@dividend+1,w
  6818  0F77  1D03               	skipz
  6819  0F78  2F7B               	goto	u3635
  6820  0F79  0826               	movf	___awmod@divisor,w
  6821  0F7A  0228               	subwf	___awmod@dividend,w
  6822  0F7B                     u3635:	
  6823  0F7B  1C03               	skipc
  6824  0F7C  2F7E               	goto	u3631
  6825  0F7D  2F7F               	goto	u3630
  6826  0F7E                     u3631:	
  6827  0F7E  2F85               	goto	l3935
  6828  0F7F                     u3630:	
  6829  0F7F                     l3933:	
  6830  0F7F  0826               	movf	___awmod@divisor,w
  6831  0F80  02A8               	subwf	___awmod@dividend,f
  6832  0F81  0827               	movf	___awmod@divisor+1,w
  6833  0F82  1C03               	skipc
  6834  0F83  03A9               	decf	___awmod@dividend+1,f
  6835  0F84  02A9               	subwf	___awmod@dividend+1,f
  6836  0F85                     l3935:	
  6837  0F85  3001               	movlw	1
  6838  0F86                     u3645:	
  6839  0F86  1003               	clrc
  6840  0F87  0CA7               	rrf	___awmod@divisor+1,f
  6841  0F88  0CA6               	rrf	___awmod@divisor,f
  6842  0F89  3EFF               	addlw	-1
  6843  0F8A  1D03               	skipz
  6844  0F8B  2F86               	goto	u3645
  6845  0F8C                     l3937:	
  6846  0F8C  3001               	movlw	1
  6847  0F8D  02AB               	subwf	___awmod@counter,f
  6848  0F8E  1D03               	btfss	3,2
  6849  0F8F  2F91               	goto	u3651
  6850  0F90  2F92               	goto	u3650
  6851  0F91                     u3651:	
  6852  0F91  2F75               	goto	l3931
  6853  0F92                     u3650:	
  6854  0F92                     l3939:	
  6855  0F92  082C               	movf	___awmod@sign,w
  6856  0F93  1903               	btfsc	3,2
  6857  0F94  2F96               	goto	u3661
  6858  0F95  2F97               	goto	u3660
  6859  0F96                     u3661:	
  6860  0F96  2F9C               	goto	l3943
  6861  0F97                     u3660:	
  6862  0F97                     l3941:	
  6863  0F97  09A8               	comf	___awmod@dividend,f
  6864  0F98  09A9               	comf	___awmod@dividend+1,f
  6865  0F99  0AA8               	incf	___awmod@dividend,f
  6866  0F9A  1903               	skipnz
  6867  0F9B  0AA9               	incf	___awmod@dividend+1,f
  6868  0F9C                     l3943:	
  6869  0F9C  0829               	movf	___awmod@dividend+1,w
  6870  0F9D  00A7               	movwf	?___awmod+1
  6871  0F9E  0828               	movf	___awmod@dividend,w
  6872  0F9F  00A6               	movwf	?___awmod
  6873  0FA0                     l929:	
  6874  0FA0  0008               	return
  6875  0FA1                     __end_of___awmod:	
  6876                           
  6877                           	psect	text41
  6878  072E                     __ptext41:	
  6879 ;; *************** function ___awdiv *****************
  6880 ;; Defined at:
  6881 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/awdiv.c"
  6882 ;; Parameters:    Size  Location     Type
  6883 ;;  divisor         2    6[BANK0 ] int 
  6884 ;;  dividend        2    8[BANK0 ] int 
  6885 ;; Auto vars:     Size  Location     Type
  6886 ;;  quotient        2   13[BANK0 ] int 
  6887 ;;  sign            1   12[BANK0 ] unsigned char 
  6888 ;;  counter         1   11[BANK0 ] unsigned char 
  6889 ;; Return value:  Size  Location     Type
  6890 ;;                  2    6[BANK0 ] int 
  6891 ;; Registers used:
  6892 ;;		wreg, status,2, status,0
  6893 ;; Tracked objects:
  6894 ;;		On entry : 0/0
  6895 ;;		On exit  : 0/0
  6896 ;;		Unchanged: 0/0
  6897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6898 ;;      Params:         0       4       0       0       0
  6899 ;;      Locals:         0       4       0       0       0
  6900 ;;      Temps:          0       1       0       0       0
  6901 ;;      Totals:         0       9       0       0       0
  6902 ;;Total ram usage:        9 bytes
  6903 ;; Hardware stack levels used:    1
  6904 ;; Hardware stack levels required when called:    4
  6905 ;; This function calls:
  6906 ;;		Nothing
  6907 ;; This function is called by:
  6908 ;;		_Display_2Dig
  6909 ;; This function uses a non-reentrant model
  6910 ;;
  6911                           
  6912                           
  6913                           ;psect for function ___awdiv
  6914  072E                     ___awdiv:	
  6915  072E                     l3865:	
  6916                           ;incstack = 0
  6917 ;; hardware stack exceeded
  6918                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  6919                           
  6920  072E  1283               	bcf	3,5	;RP0=0, select bank0
  6921  072F  1303               	bcf	3,6	;RP1=0, select bank0
  6922  0730  01AC               	clrf	___awdiv@sign
  6923  0731                     l3867:	
  6924  0731  1FA7               	btfss	___awdiv@divisor+1,7
  6925  0732  2F34               	goto	u3481
  6926  0733  2F35               	goto	u3480
  6927  0734                     u3481:	
  6928  0734  2F3C               	goto	l3873
  6929  0735                     u3480:	
  6930  0735                     l3869:	
  6931  0735  09A6               	comf	___awdiv@divisor,f
  6932  0736  09A7               	comf	___awdiv@divisor+1,f
  6933  0737  0AA6               	incf	___awdiv@divisor,f
  6934  0738  1903               	skipnz
  6935  0739  0AA7               	incf	___awdiv@divisor+1,f
  6936  073A                     l3871:	
  6937  073A  01AC               	clrf	___awdiv@sign
  6938  073B  0AAC               	incf	___awdiv@sign,f
  6939  073C                     l3873:	
  6940  073C  1FA9               	btfss	___awdiv@dividend+1,7
  6941  073D  2F3F               	goto	u3491
  6942  073E  2F40               	goto	u3490
  6943  073F                     u3491:	
  6944  073F  2F49               	goto	l3879
  6945  0740                     u3490:	
  6946  0740                     l3875:	
  6947  0740  09A8               	comf	___awdiv@dividend,f
  6948  0741  09A9               	comf	___awdiv@dividend+1,f
  6949  0742  0AA8               	incf	___awdiv@dividend,f
  6950  0743  1903               	skipnz
  6951  0744  0AA9               	incf	___awdiv@dividend+1,f
  6952  0745                     l3877:	
  6953  0745  3001               	movlw	1
  6954  0746  00AA               	movwf	??___awdiv
  6955  0747  082A               	movf	??___awdiv,w
  6956  0748  06AC               	xorwf	___awdiv@sign,f
  6957  0749                     l3879:	
  6958  0749  01AD               	clrf	___awdiv@quotient
  6959  074A  01AE               	clrf	___awdiv@quotient+1
  6960  074B                     l3881:	
  6961  074B  0826               	movf	___awdiv@divisor,w
  6962  074C  0427               	iorwf	___awdiv@divisor+1,w
  6963  074D  1903               	btfsc	3,2
  6964  074E  2F50               	goto	u3501
  6965  074F  2F51               	goto	u3500
  6966  0750                     u3501:	
  6967  0750  2F88               	goto	l3901
  6968  0751                     u3500:	
  6969  0751                     l3883:	
  6970  0751  01AB               	clrf	___awdiv@counter
  6971  0752  0AAB               	incf	___awdiv@counter,f
  6972  0753  2F5F               	goto	l3889
  6973  0754                     l3885:	
  6974  0754  3001               	movlw	1
  6975  0755                     u3515:	
  6976  0755  1003               	clrc
  6977  0756  0DA6               	rlf	___awdiv@divisor,f
  6978  0757  0DA7               	rlf	___awdiv@divisor+1,f
  6979  0758  3EFF               	addlw	-1
  6980  0759  1D03               	skipz
  6981  075A  2F55               	goto	u3515
  6982  075B                     l3887:	
  6983  075B  3001               	movlw	1
  6984  075C  00AA               	movwf	??___awdiv
  6985  075D  082A               	movf	??___awdiv,w
  6986  075E  07AB               	addwf	___awdiv@counter,f
  6987  075F                     l3889:	
  6988  075F  1FA7               	btfss	___awdiv@divisor+1,7
  6989  0760  2F62               	goto	u3521
  6990  0761  2F63               	goto	u3520
  6991  0762                     u3521:	
  6992  0762  2F54               	goto	l3885
  6993  0763                     u3520:	
  6994  0763                     l3891:	
  6995  0763  3001               	movlw	1
  6996  0764                     u3535:	
  6997  0764  1003               	clrc
  6998  0765  0DAD               	rlf	___awdiv@quotient,f
  6999  0766  0DAE               	rlf	___awdiv@quotient+1,f
  7000  0767  3EFF               	addlw	-1
  7001  0768  1D03               	skipz
  7002  0769  2F64               	goto	u3535
  7003  076A  0827               	movf	___awdiv@divisor+1,w
  7004  076B  0229               	subwf	___awdiv@dividend+1,w
  7005  076C  1D03               	skipz
  7006  076D  2F70               	goto	u3545
  7007  076E  0826               	movf	___awdiv@divisor,w
  7008  076F  0228               	subwf	___awdiv@dividend,w
  7009  0770                     u3545:	
  7010  0770  1C03               	skipc
  7011  0771  2F73               	goto	u3541
  7012  0772  2F74               	goto	u3540
  7013  0773                     u3541:	
  7014  0773  2F7B               	goto	l3897
  7015  0774                     u3540:	
  7016  0774                     l3893:	
  7017  0774  0826               	movf	___awdiv@divisor,w
  7018  0775  02A8               	subwf	___awdiv@dividend,f
  7019  0776  0827               	movf	___awdiv@divisor+1,w
  7020  0777  1C03               	skipc
  7021  0778  03A9               	decf	___awdiv@dividend+1,f
  7022  0779  02A9               	subwf	___awdiv@dividend+1,f
  7023  077A                     l3895:	
  7024  077A  142D               	bsf	___awdiv@quotient,0
  7025  077B                     l3897:	
  7026  077B  3001               	movlw	1
  7027  077C                     u3555:	
  7028  077C  1003               	clrc
  7029  077D  0CA7               	rrf	___awdiv@divisor+1,f
  7030  077E  0CA6               	rrf	___awdiv@divisor,f
  7031  077F  3EFF               	addlw	-1
  7032  0780  1D03               	skipz
  7033  0781  2F7C               	goto	u3555
  7034  0782                     l3899:	
  7035  0782  3001               	movlw	1
  7036  0783  02AB               	subwf	___awdiv@counter,f
  7037  0784  1D03               	btfss	3,2
  7038  0785  2F87               	goto	u3561
  7039  0786  2F88               	goto	u3560
  7040  0787                     u3561:	
  7041  0787  2F63               	goto	l3891
  7042  0788                     u3560:	
  7043  0788                     l3901:	
  7044  0788  082C               	movf	___awdiv@sign,w
  7045  0789  1903               	btfsc	3,2
  7046  078A  2F8C               	goto	u3571
  7047  078B  2F8D               	goto	u3570
  7048  078C                     u3571:	
  7049  078C  2F92               	goto	l3905
  7050  078D                     u3570:	
  7051  078D                     l3903:	
  7052  078D  09AD               	comf	___awdiv@quotient,f
  7053  078E  09AE               	comf	___awdiv@quotient+1,f
  7054  078F  0AAD               	incf	___awdiv@quotient,f
  7055  0790  1903               	skipnz
  7056  0791  0AAE               	incf	___awdiv@quotient+1,f
  7057  0792                     l3905:	
  7058  0792  082E               	movf	___awdiv@quotient+1,w
  7059  0793  00A7               	movwf	?___awdiv+1
  7060  0794  082D               	movf	___awdiv@quotient,w
  7061  0795  00A6               	movwf	?___awdiv
  7062  0796                     l916:	
  7063  0796  0008               	return
  7064  0797                     __end_of___awdiv:	
  7065                           
  7066                           	psect	text42
  7067  0478                     __ptext42:	
  7068 ;; *************** function _ISR *****************
  7069 ;; Defined at:
  7070 ;;		line 40 in file "interrupts.c"
  7071 ;; Parameters:    Size  Location     Type
  7072 ;;		None
  7073 ;; Auto vars:     Size  Location     Type
  7074 ;;  PulseTime       2    4[BANK0 ] unsigned int 
  7075 ;; Return value:  Size  Location     Type
  7076 ;;                  1    wreg      void 
  7077 ;; Registers used:
  7078 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7079 ;; Tracked objects:
  7080 ;;		On entry : 0/0
  7081 ;;		On exit  : 0/0
  7082 ;;		Unchanged: 0/0
  7083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7084 ;;      Params:         0       0       0       0       0
  7085 ;;      Locals:         0       2       0       0       0
  7086 ;;      Temps:          0       4       0       0       0
  7087 ;;      Totals:         0       6       0       0       0
  7088 ;;Total ram usage:        6 bytes
  7089 ;; Hardware stack levels used:    1
  7090 ;; Hardware stack levels required when called:    3
  7091 ;; This function calls:
  7092 ;;		_Display7SegmentText
  7093 ;;		_ManchesterDecode
  7094 ;; This function is called by:
  7095 ;;		Interrupt level 1
  7096 ;; This function uses a non-reentrant model
  7097 ;;
  7098                           
  7099                           
  7100                           ;psect for function _ISR
  7101  0478                     _ISR:	
  7102  0478                     i1l3603:	
  7103                           
  7104                           ;interrupts.c: 42:     static unsigned char edge_dir, set_flag, display_timer;;interrupt
      +                          s.c: 43:     unsigned int PulseTime;;interrupts.c: 51:     if (TMR0IE && TMR0IF)
  7105  0478  1E8B               	btfss	11,5	;volatile
  7106  0479  2C7B               	goto	u313_21
  7107  047A  2C7C               	goto	u313_20
  7108  047B                     u313_21:	
  7109  047B  2CBD               	goto	i1l3625
  7110  047C                     u313_20:	
  7111  047C                     i1l3605:	
  7112  047C  1D0B               	btfss	11,2	;volatile
  7113  047D  2C7F               	goto	u314_21
  7114  047E  2C80               	goto	u314_20
  7115  047F                     u314_21:	
  7116  047F  2CBD               	goto	i1l3625
  7117  0480                     u314_20:	
  7118  0480                     i1l3607:	
  7119                           
  7120                           ;interrupts.c: 52:     {;interrupts.c: 54:         if(Timer1)
  7121  0480  084D               	movf	_Timer1,w	;volatile
  7122  0481  044E               	iorwf	_Timer1+1,w	;volatile
  7123  0482  1903               	btfsc	3,2
  7124  0483  2C85               	goto	u315_21
  7125  0484  2C86               	goto	u315_20
  7126  0485                     u315_21:	
  7127  0485  2C8C               	goto	i1l181
  7128  0486                     u315_20:	
  7129  0486                     i1l3609:	
  7130                           
  7131                           ;interrupts.c: 55:         {;interrupts.c: 56:             Timer1--;
  7132  0486  3001               	movlw	1
  7133  0487  02CD               	subwf	_Timer1,f	;volatile
  7134  0488  3000               	movlw	0
  7135  0489  1C03               	skipc
  7136  048A  03CE               	decf	_Timer1+1,f	;volatile
  7137  048B  02CE               	subwf	_Timer1+1,f	;volatile
  7138  048C                     i1l181:	
  7139                           ;interrupts.c: 57:         }
  7140                           
  7141                           
  7142                           ;interrupts.c: 61:         if(display_timer>15)
  7143  048C  3010               	movlw	16
  7144  048D  0257               	subwf	ISR@display_timer,w
  7145  048E  1C03               	skipc
  7146  048F  2C91               	goto	u316_21
  7147  0490  2C92               	goto	u316_20
  7148  0491                     u316_21:	
  7149  0491  2CA0               	goto	i1l3615
  7150  0492                     u316_20:	
  7151  0492                     i1l3611:	
  7152                           
  7153                           ;interrupts.c: 62:         {;interrupts.c: 63:             Display7SegmentText(&g_displa
      +                          y_text[0],g_decimal_point);
  7154  0492  0863               	movf	_g_decimal_point,w
  7155  0493  00A0               	movwf	??_ISR
  7156  0494  0820               	movf	??_ISR,w
  7157  0495  00FB               	movwf	Display7SegmentText@decimal_point
  7158  0496  305D               	movlw	(low (_g_display_text| 0))& (0+255)
  7159  0497  120A  118A  225F  120A  118A  	fcall	_Display7SegmentText
  7160  049C                     i1l3613:	
  7161                           
  7162                           ;interrupts.c: 64:             display_timer=0;
  7163  049C  1283               	bcf	3,5	;RP0=0, select bank0
  7164  049D  1303               	bcf	3,6	;RP1=0, select bank0
  7165  049E  01D7               	clrf	ISR@display_timer
  7166                           
  7167                           ;interrupts.c: 66:         }else
  7168  049F  2CA4               	goto	i1l183
  7169  04A0                     i1l3615:	
  7170                           
  7171                           ;interrupts.c: 67:         {;interrupts.c: 68:             display_timer++;
  7172  04A0  3001               	movlw	1
  7173  04A1  00A0               	movwf	??_ISR
  7174  04A2  0820               	movf	??_ISR,w
  7175  04A3  07D7               	addwf	ISR@display_timer,f
  7176  04A4                     i1l183:	
  7177                           ;interrupts.c: 69:         }
  7178                           
  7179                           
  7180                           ;interrupts.c: 71:         if(g_button_timer)
  7181  04A4  084B               	movf	_g_button_timer,w	;volatile
  7182  04A5  044C               	iorwf	_g_button_timer+1,w	;volatile
  7183  04A6  1903               	btfsc	3,2
  7184  04A7  2CA9               	goto	u317_21
  7185  04A8  2CAA               	goto	u317_20
  7186  04A9                     u317_21:	
  7187  04A9  2CB0               	goto	i1l3619
  7188  04AA                     u317_20:	
  7189  04AA                     i1l3617:	
  7190                           
  7191                           ;interrupts.c: 72:         {;interrupts.c: 73:             g_button_timer--;
  7192  04AA  3001               	movlw	1
  7193  04AB  02CB               	subwf	_g_button_timer,f	;volatile
  7194  04AC  3000               	movlw	0
  7195  04AD  1C03               	skipc
  7196  04AE  03CC               	decf	_g_button_timer+1,f	;volatile
  7197  04AF  02CC               	subwf	_g_button_timer+1,f	;volatile
  7198  04B0                     i1l3619:	
  7199                           
  7200                           ;interrupts.c: 76:         if(g_generic_timer)
  7201  04B0  0849               	movf	_g_generic_timer,w	;volatile
  7202  04B1  044A               	iorwf	_g_generic_timer+1,w	;volatile
  7203  04B2  1903               	btfsc	3,2
  7204  04B3  2CB5               	goto	u318_21
  7205  04B4  2CB6               	goto	u318_20
  7206  04B5                     u318_21:	
  7207  04B5  2CBC               	goto	i1l3623
  7208  04B6                     u318_20:	
  7209  04B6                     i1l3621:	
  7210                           
  7211                           ;interrupts.c: 77:         {;interrupts.c: 78:             g_generic_timer--;
  7212  04B6  3001               	movlw	1
  7213  04B7  02C9               	subwf	_g_generic_timer,f	;volatile
  7214  04B8  3000               	movlw	0
  7215  04B9  1C03               	skipc
  7216  04BA  03CA               	decf	_g_generic_timer+1,f	;volatile
  7217  04BB  02CA               	subwf	_g_generic_timer+1,f	;volatile
  7218  04BC                     i1l3623:	
  7219                           
  7220                           ;interrupts.c: 83:      TMR0IF=0;
  7221  04BC  110B               	bcf	11,2	;volatile
  7222  04BD                     i1l3625:	
  7223                           
  7224                           ;interrupts.c: 93:     if(CCP2IF && CCP2IE)
  7225  04BD  1C0D               	btfss	13,0	;volatile
  7226  04BE  2CC0               	goto	u319_21
  7227  04BF  2CC1               	goto	u319_20
  7228  04C0                     u319_21:	
  7229  04C0  2CF1               	goto	i1l3649
  7230  04C1                     u319_20:	
  7231  04C1                     i1l3627:	
  7232  04C1  1683               	bsf	3,5	;RP0=1, select bank1
  7233  04C2  1303               	bcf	3,6	;RP1=0, select bank1
  7234  04C3  1C0D               	btfss	13,0	;volatile
  7235  04C4  2CC6               	goto	u320_21
  7236  04C5  2CC7               	goto	u320_20
  7237  04C6                     u320_21:	
  7238  04C6  2CF1               	goto	i1l3649
  7239  04C7                     u320_20:	
  7240  04C7                     i1l3629:	
  7241                           
  7242                           ;interrupts.c: 94:     {;interrupts.c: 95:         ISR_ACK=1;
  7243  04C7  3001               	movlw	1
  7244  04C8  1283               	bcf	3,5	;RP0=0, select bank0
  7245  04C9  1303               	bcf	3,6	;RP1=0, select bank0
  7246  04CA  00A0               	movwf	??_ISR
  7247  04CB  0820               	movf	??_ISR,w
  7248  04CC  00D9               	movwf	_ISR_ACK	;volatile
  7249  04CD                     i1l3631:	
  7250                           
  7251                           ;interrupts.c: 97:         if(edge_dir==0)
  7252  04CD  0862               	movf	ISR@edge_dir,w
  7253  04CE  1D03               	btfss	3,2
  7254  04CF  2CD1               	goto	u321_21
  7255  04D0  2CD2               	goto	u321_20
  7256  04D1                     u321_21:	
  7257  04D1  2CD9               	goto	i1l3637
  7258  04D2                     u321_20:	
  7259  04D2                     i1l3633:	
  7260                           
  7261                           ;interrupts.c: 98:         {;interrupts.c: 99:             CCP2CONbits.CCP2M=0b0101;
  7262  04D2  081D               	movf	29,w	;volatile
  7263  04D3  39F0               	andlw	-16
  7264  04D4  3805               	iorlw	5
  7265  04D5  009D               	movwf	29	;volatile
  7266  04D6                     i1l3635:	
  7267                           
  7268                           ;interrupts.c: 100:             edge_dir=1;
  7269  04D6  01E2               	clrf	ISR@edge_dir
  7270  04D7  0AE2               	incf	ISR@edge_dir,f
  7271                           
  7272                           ;interrupts.c: 102:         }else
  7273  04D8  2CDE               	goto	i1l3641
  7274  04D9                     i1l3637:	
  7275                           
  7276                           ;interrupts.c: 103:         {;interrupts.c: 104:             CCP2CONbits.CCP2M=0b0100;
  7277  04D9  081D               	movf	29,w	;volatile
  7278  04DA  39F0               	andlw	-16
  7279  04DB  3804               	iorlw	4
  7280  04DC  009D               	movwf	29	;volatile
  7281  04DD                     i1l3639:	
  7282                           
  7283                           ;interrupts.c: 105:             edge_dir=0;
  7284  04DD  01E2               	clrf	ISR@edge_dir
  7285  04DE                     i1l3641:	
  7286                           
  7287                           ;interrupts.c: 108:         PulseTime=CCPR1;
  7288  04DE  0816               	movf	22,w	;volatile
  7289  04DF  00A5               	movwf	ISR@PulseTime+1
  7290  04E0  0815               	movf	21,w	;volatile
  7291  04E1  00A4               	movwf	ISR@PulseTime
  7292  04E2                     i1l3643:	
  7293                           
  7294                           ;interrupts.c: 110:         ManchesterDecode(&edge_dir,&PulseTime);
  7295  04E2  3024               	movlw	(low (ISR@PulseTime| 0))& (0+255)
  7296  04E3  00A0               	movwf	??_ISR
  7297  04E4  0820               	movf	??_ISR,w
  7298  04E5  00F3               	movwf	ManchesterDecode@pulse_time
  7299  04E6  3062               	movlw	(low (ISR@edge_dir| 0))& (0+255)
  7300  04E7  120A  118A  2046  120A  118A  	fcall	_ManchesterDecode
  7301  04EC                     i1l3645:	
  7302                           
  7303                           ;interrupts.c: 111:         TMR1=0;
  7304  04EC  1283               	bcf	3,5	;RP0=0, select bank0
  7305  04ED  1303               	bcf	3,6	;RP1=0, select bank0
  7306  04EE  018E               	clrf	14	;volatile
  7307  04EF  018F               	clrf	15	;volatile
  7308  04F0                     i1l3647:	
  7309                           
  7310                           ;interrupts.c: 112:         CCP2IF=0;
  7311  04F0  100D               	bcf	13,0	;volatile
  7312  04F1                     i1l3649:	
  7313                           
  7314                           ;interrupts.c: 121:     if(CCP1IF && CCP1IE)
  7315  04F1  1283               	bcf	3,5	;RP0=0, select bank0
  7316  04F2  1D0C               	btfss	12,2	;volatile
  7317  04F3  2CF5               	goto	u322_21
  7318  04F4  2CF6               	goto	u322_20
  7319  04F5                     u322_21:	
  7320  04F5  2D16               	goto	i1l192
  7321  04F6                     u322_20:	
  7322  04F6                     i1l3651:	
  7323  04F6  1683               	bsf	3,5	;RP0=1, select bank1
  7324  04F7  1303               	bcf	3,6	;RP1=0, select bank1
  7325  04F8  1D0C               	btfss	12,2	;volatile
  7326  04F9  2CFB               	goto	u323_21
  7327  04FA  2CFC               	goto	u323_20
  7328  04FB                     u323_21:	
  7329  04FB  2D16               	goto	i1l192
  7330  04FC                     u323_20:	
  7331  04FC                     i1l3653:	
  7332                           
  7333                           ;interrupts.c: 122:     {;interrupts.c: 123:         if(set_flag)
  7334  04FC  1283               	bcf	3,5	;RP0=0, select bank0
  7335  04FD  1303               	bcf	3,6	;RP1=0, select bank0
  7336  04FE  0858               	movf	ISR@set_flag,w
  7337  04FF  1903               	btfsc	3,2
  7338  0500  2D02               	goto	u324_21
  7339  0501  2D03               	goto	u324_20
  7340  0502                     u324_21:	
  7341  0502  2D09               	goto	i1l3659
  7342  0503                     u324_20:	
  7343  0503                     i1l3655:	
  7344                           
  7345                           ;interrupts.c: 124:         {;interrupts.c: 125:             CCP1CONbits.CCP1M=0b1000;
  7346  0503  0817               	movf	23,w	;volatile
  7347  0504  39F0               	andlw	-16
  7348  0505  3808               	iorlw	8
  7349  0506  0097               	movwf	23	;volatile
  7350  0507                     i1l3657:	
  7351                           
  7352                           ;interrupts.c: 126:             set_flag=0;
  7353  0507  01D8               	clrf	ISR@set_flag
  7354                           
  7355                           ;interrupts.c: 127:         }else
  7356  0508  2D0F               	goto	i1l3663
  7357  0509                     i1l3659:	
  7358                           
  7359                           ;interrupts.c: 128:         {;interrupts.c: 129:             CCP1CONbits.CCP1M=0b1001;
  7360  0509  0817               	movf	23,w	;volatile
  7361  050A  39F0               	andlw	-16
  7362  050B  3809               	iorlw	9
  7363  050C  0097               	movwf	23	;volatile
  7364  050D                     i1l3661:	
  7365                           
  7366                           ;interrupts.c: 130:             set_flag=1;
  7367  050D  01D8               	clrf	ISR@set_flag
  7368  050E  0AD8               	incf	ISR@set_flag,f
  7369  050F                     i1l3663:	
  7370                           
  7371                           ;interrupts.c: 132:         CCPR1=PWM_Freq;
  7372  050F  0850               	movf	_PWM_Freq+1,w	;volatile
  7373  0510  0096               	movwf	22	;volatile
  7374  0511  084F               	movf	_PWM_Freq,w	;volatile
  7375  0512  0095               	movwf	21	;volatile
  7376  0513                     i1l3665:	
  7377                           
  7378                           ;interrupts.c: 133:         TMR1=0;
  7379  0513  018E               	clrf	14	;volatile
  7380  0514  018F               	clrf	15	;volatile
  7381  0515                     i1l3667:	
  7382                           
  7383                           ;interrupts.c: 134:         CCP1IF=0;
  7384  0515  110C               	bcf	12,2	;volatile
  7385  0516                     i1l192:	
  7386  0516  1283               	bcf	3,5	;RP0=0, select bank0
  7387  0517  0823               	movf	??_ISR+3,w
  7388  0518  008A               	movwf	10
  7389  0519  0822               	movf	??_ISR+2,w
  7390  051A  0084               	movwf	4
  7391  051B  0E21               	swapf	(??_ISR+1)^0,w
  7392  051C  0083               	movwf	3
  7393  051D  0EFE               	swapf	btemp,f
  7394  051E  0E7E               	swapf	btemp,w
  7395  051F  0009               	retfie
  7396  0520                     __end_of_ISR:	
  7397                           
  7398                           	psect	intentry
  7399  0004                     __pintentry:	
  7400                           ;incstack = 0
  7401 ;; hardware stack exceeded
  7402                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7403                           
  7404  0004                     interrupt_function:	
  7405  007E                     saved_w	set	btemp
  7406  0004  00FE               	movwf	btemp
  7407  0005  0E03               	swapf	3,w
  7408  0006  1283               	bcf	3,5	;RP0=0, select bank0
  7409  0007  1303               	bcf	3,6	;RP1=0, select bank0
  7410  0008  00A1               	movwf	??_ISR+1
  7411  0009  0804               	movf	4,w
  7412  000A  00A2               	movwf	??_ISR+2
  7413  000B  080A               	movf	10,w
  7414  000C  00A3               	movwf	??_ISR+3
  7415  000D  120A  118A  2C78   	ljmp	_ISR
  7416                           
  7417                           	psect	text43
  7418  0046                     __ptext43:	
  7419 ;; *************** function _ManchesterDecode *****************
  7420 ;; Defined at:
  7421 ;;		line 30 in file "manchester_decode.c"
  7422 ;; Parameters:    Size  Location     Type
  7423 ;;  edge_dir        1    wreg     PTR unsigned char 
  7424 ;;		 -> ISR@edge_dir(1), 
  7425 ;;  pulse_time      1    3[COMMON] PTR unsigned int 
  7426 ;;		 -> ISR@PulseTime(2), 
  7427 ;; Auto vars:     Size  Location     Type
  7428 ;;  edge_dir        1    8[COMMON] PTR unsigned char 
  7429 ;;		 -> ISR@edge_dir(1), 
  7430 ;; Return value:  Size  Location     Type
  7431 ;;                  1    wreg      void 
  7432 ;; Registers used:
  7433 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7434 ;; Tracked objects:
  7435 ;;		On entry : 0/0
  7436 ;;		On exit  : 0/0
  7437 ;;		Unchanged: 0/0
  7438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7439 ;;      Params:         1       0       0       0       0
  7440 ;;      Locals:         1       0       0       0       0
  7441 ;;      Temps:          4       0       0       0       0
  7442 ;;      Totals:         6       0       0       0       0
  7443 ;;Total ram usage:        6 bytes
  7444 ;; Hardware stack levels used:    1
  7445 ;; Hardware stack levels required when called:    1
  7446 ;; This function calls:
  7447 ;;		i1_FrameBuffer
  7448 ;; This function is called by:
  7449 ;;		_ISR
  7450 ;; This function uses a non-reentrant model
  7451 ;;
  7452                           
  7453                           
  7454                           ;psect for function _ManchesterDecode
  7455  0046                     _ManchesterDecode:	
  7456                           
  7457                           ;incstack = 0
  7458 ;; hardware stack exceeded
  7459                           ; Regs used in _ManchesterDecode: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7460                           ;ManchesterDecode@edge_dir stored from wreg
  7461  0046  00F8               	movwf	ManchesterDecode@edge_dir
  7462  0047                     i1l3405:	
  7463                           
  7464                           ;manchester_decode.c: 30: void ManchesterDecode(unsigned char *edge_dir, unsigned int *p
      +                          ulse_time);manchester_decode.c: 31: {;manchester_decode.c: 32:     static unsigned char 
      +                          decoded_byte, bit_pos, data_counter,f_start_data;;manchester_decode.c: 33:     static un
      +                          signed char f_slope_t,f_sync;;manchester_decode.c: 35:  if(f_sync==0)
  7465  0047  1283               	bcf	3,5	;RP0=0, select bank0
  7466  0048  1303               	bcf	3,6	;RP1=0, select bank0
  7467  0049  0852               	movf	ManchesterDecode@f_sync,w
  7468  004A  1D03               	btfss	3,2
  7469  004B  284D               	goto	u285_21
  7470  004C  284E               	goto	u285_20
  7471  004D                     u285_21:	
  7472  004D  2876               	goto	i1l3419
  7473  004E                     u285_20:	
  7474  004E                     i1l3407:	
  7475                           
  7476                           ;manchester_decode.c: 36:     {;manchester_decode.c: 37:         if((*pulse_time>(800000
      +                          0/4)/300*60/100) && (*pulse_time<(8000000/4)/300*140/100))
  7477  004E  0873               	movf	ManchesterDecode@pulse_time,w
  7478  004F  0084               	movwf	4
  7479  0050  1383               	bcf	3,7	;select IRP bank0
  7480  0051  0800               	movf	0,w
  7481  0052  00F4               	movwf	??_ManchesterDecode
  7482  0053  0A84               	incf	4,f
  7483  0054  0800               	movf	0,w
  7484  0055  00F5               	movwf	??_ManchesterDecode+1
  7485  0056  300F               	movlw	15
  7486  0057  0275               	subwf	??_ManchesterDecode+1,w
  7487  0058  30A0               	movlw	160
  7488  0059  1903               	skipnz
  7489  005A  0274               	subwf	??_ManchesterDecode,w
  7490  005B  1C03               	skipc
  7491  005C  285E               	goto	u286_21
  7492  005D  285F               	goto	u286_20
  7493  005E                     u286_21:	
  7494  005E  2970               	goto	i1l269
  7495  005F                     u286_20:	
  7496  005F                     i1l3409:	
  7497  005F  0873               	movf	ManchesterDecode@pulse_time,w
  7498  0060  0084               	movwf	4
  7499  0061  0800               	movf	0,w
  7500  0062  00F4               	movwf	??_ManchesterDecode
  7501  0063  0A84               	incf	4,f
  7502  0064  0800               	movf	0,w
  7503  0065  00F5               	movwf	??_ManchesterDecode+1
  7504  0066  3024               	movlw	36
  7505  0067  0275               	subwf	??_ManchesterDecode+1,w
  7506  0068  3074               	movlw	116
  7507  0069  1903               	skipnz
  7508  006A  0274               	subwf	??_ManchesterDecode,w
  7509  006B  1803               	skipnc
  7510  006C  286E               	goto	u287_21
  7511  006D  286F               	goto	u287_20
  7512  006E                     u287_21:	
  7513  006E  2970               	goto	i1l269
  7514  006F                     u287_20:	
  7515  006F                     i1l3411:	
  7516                           
  7517                           ;manchester_decode.c: 38:         {;manchester_decode.c: 39:             f_slope_t=0;
  7518  006F  01D3               	clrf	ManchesterDecode@f_slope_t
  7519                           
  7520                           ;manchester_decode.c: 40:             decoded_byte=0;
  7521  0070  01E1               	clrf	ManchesterDecode@decoded_byte
  7522                           
  7523                           ;manchester_decode.c: 41:             bit_pos=0;
  7524  0071  01D6               	clrf	ManchesterDecode@bit_pos
  7525  0072                     i1l3413:	
  7526                           
  7527                           ;manchester_decode.c: 42:             f_sync=1;
  7528  0072  01D2               	clrf	ManchesterDecode@f_sync
  7529  0073  0AD2               	incf	ManchesterDecode@f_sync,f
  7530                           
  7531                           ;manchester_decode.c: 43:             data_counter=0;
  7532  0074  01D5               	clrf	ManchesterDecode@data_counter
  7533  0075  2970               	goto	i1l269
  7534  0076                     i1l3419:	
  7535  0076  0852               	movf	ManchesterDecode@f_sync,w
  7536  0077  1903               	btfsc	3,2
  7537  0078  287A               	goto	u288_21
  7538  0079  287B               	goto	u288_20
  7539  007A                     u288_21:	
  7540  007A  2970               	goto	i1l269
  7541  007B                     u288_20:	
  7542  007B                     i1l3421:	
  7543                           
  7544                           ;manchester_decode.c: 52:     {;manchester_decode.c: 53:         if(f_slope_t==0)
  7545  007B  0853               	movf	ManchesterDecode@f_slope_t,w
  7546  007C  1D03               	btfss	3,2
  7547  007D  287F               	goto	u289_21
  7548  007E  2880               	goto	u289_20
  7549  007F                     u289_21:	
  7550  007F  28F5               	goto	i1l3445
  7551  0080                     u289_20:	
  7552  0080                     i1l3423:	
  7553                           
  7554                           ;manchester_decode.c: 54:         {;manchester_decode.c: 55:             if((*pulse_time
      +                          >((8000000/4)/300/2)*60/100) && (*pulse_time<((8000000/4)/300/2)*140/100))
  7555  0080  0873               	movf	ManchesterDecode@pulse_time,w
  7556  0081  0084               	movwf	4
  7557  0082  1383               	bcf	3,7	;select IRP bank0
  7558  0083  0800               	movf	0,w
  7559  0084  00F4               	movwf	??_ManchesterDecode
  7560  0085  0A84               	incf	4,f
  7561  0086  0800               	movf	0,w
  7562  0087  00F5               	movwf	??_ManchesterDecode+1
  7563  0088  3007               	movlw	7
  7564  0089  0275               	subwf	??_ManchesterDecode+1,w
  7565  008A  30D0               	movlw	208
  7566  008B  1903               	skipnz
  7567  008C  0274               	subwf	??_ManchesterDecode,w
  7568  008D  1C03               	skipc
  7569  008E  2890               	goto	u290_21
  7570  008F  2891               	goto	u290_20
  7571  0090                     u290_21:	
  7572  0090  28A4               	goto	i1l3431
  7573  0091                     u290_20:	
  7574  0091                     i1l3425:	
  7575  0091  0873               	movf	ManchesterDecode@pulse_time,w
  7576  0092  0084               	movwf	4
  7577  0093  0800               	movf	0,w
  7578  0094  00F4               	movwf	??_ManchesterDecode
  7579  0095  0A84               	incf	4,f
  7580  0096  0800               	movf	0,w
  7581  0097  00F5               	movwf	??_ManchesterDecode+1
  7582  0098  3012               	movlw	18
  7583  0099  0275               	subwf	??_ManchesterDecode+1,w
  7584  009A  303A               	movlw	58
  7585  009B  1903               	skipnz
  7586  009C  0274               	subwf	??_ManchesterDecode,w
  7587  009D  1803               	skipnc
  7588  009E  28A0               	goto	u291_21
  7589  009F  28A1               	goto	u291_20
  7590  00A0                     u291_21:	
  7591  00A0  28A4               	goto	i1l3431
  7592  00A1                     u291_20:	
  7593  00A1                     i1l3427:	
  7594                           
  7595                           ;manchester_decode.c: 56:             {;manchester_decode.c: 57:                     f_s
      +                          lope_t=1;
  7596  00A1  01D3               	clrf	ManchesterDecode@f_slope_t
  7597  00A2  0AD3               	incf	ManchesterDecode@f_slope_t,f
  7598                           
  7599                           ;manchester_decode.c: 58:                     return;
  7600  00A3  2970               	goto	i1l269
  7601  00A4                     i1l3431:	
  7602  00A4  0873               	movf	ManchesterDecode@pulse_time,w
  7603  00A5  0084               	movwf	4
  7604  00A6  0800               	movf	0,w
  7605  00A7  00F4               	movwf	??_ManchesterDecode
  7606  00A8  0A84               	incf	4,f
  7607  00A9  0800               	movf	0,w
  7608  00AA  00F5               	movwf	??_ManchesterDecode+1
  7609  00AB  300F               	movlw	15
  7610  00AC  0275               	subwf	??_ManchesterDecode+1,w
  7611  00AD  30A0               	movlw	160
  7612  00AE  1903               	skipnz
  7613  00AF  0274               	subwf	??_ManchesterDecode,w
  7614  00B0  1C03               	skipc
  7615  00B1  28B3               	goto	u292_21
  7616  00B2  28B4               	goto	u292_20
  7617  00B3                     u292_21:	
  7618  00B3  28F3               	goto	i1l3441
  7619  00B4                     u292_20:	
  7620  00B4                     i1l3433:	
  7621  00B4  0873               	movf	ManchesterDecode@pulse_time,w
  7622  00B5  0084               	movwf	4
  7623  00B6  0800               	movf	0,w
  7624  00B7  00F4               	movwf	??_ManchesterDecode
  7625  00B8  0A84               	incf	4,f
  7626  00B9  0800               	movf	0,w
  7627  00BA  00F5               	movwf	??_ManchesterDecode+1
  7628  00BB  3024               	movlw	36
  7629  00BC  0275               	subwf	??_ManchesterDecode+1,w
  7630  00BD  3074               	movlw	116
  7631  00BE  1903               	skipnz
  7632  00BF  0274               	subwf	??_ManchesterDecode,w
  7633  00C0  1803               	skipnc
  7634  00C1  28C3               	goto	u293_21
  7635  00C2  28C4               	goto	u293_20
  7636  00C3                     u293_21:	
  7637  00C3  28F3               	goto	i1l3441
  7638  00C4                     u293_20:	
  7639  00C4                     i1l3435:	
  7640                           
  7641                           ;manchester_decode.c: 61:             {;manchester_decode.c: 62:                 if(*edg
      +                          e_dir==0)
  7642  00C4  0878               	movf	ManchesterDecode@edge_dir,w
  7643  00C5  0084               	movwf	4
  7644  00C6  0800               	movf	0,w
  7645  00C7  1D03               	btfss	3,2
  7646  00C8  28CA               	goto	u294_21
  7647  00C9  28CB               	goto	u294_20
  7648  00CA                     u294_21:	
  7649  00CA  28DE               	goto	i1l3439
  7650  00CB                     u294_20:	
  7651  00CB                     i1l3437:	
  7652                           
  7653                           ;manchester_decode.c: 63:                 {;manchester_decode.c: 64:                    
      +                           decoded_byte^=(0x80>>bit_pos);
  7654  00CB  0A56               	incf	ManchesterDecode@bit_pos,w
  7655  00CC  00F4               	movwf	??_ManchesterDecode
  7656  00CD  3080               	movlw	128
  7657  00CE  00F5               	movwf	??_ManchesterDecode+1
  7658  00CF  3000               	movlw	0
  7659  00D0  00F6               	movwf	??_ManchesterDecode+2
  7660  00D1  28D5               	goto	u295_24
  7661  00D2                     u295_25:	
  7662  00D2  0D76               	rlf	??_ManchesterDecode+2,w
  7663  00D3  0CF6               	rrf	??_ManchesterDecode+2,f
  7664  00D4  0CF5               	rrf	??_ManchesterDecode+1,f
  7665  00D5                     u295_24:	
  7666  00D5  0BF4               	decfsz	??_ManchesterDecode,f
  7667  00D6  28D2               	goto	u295_25
  7668  00D7  0875               	movf	??_ManchesterDecode+1,w
  7669  00D8  00F7               	movwf	??_ManchesterDecode+3
  7670  00D9  0877               	movf	??_ManchesterDecode+3,w
  7671  00DA  1283               	bcf	3,5	;RP0=0, select bank0
  7672  00DB  1303               	bcf	3,6	;RP1=0, select bank0
  7673  00DC  06E1               	xorwf	ManchesterDecode@decoded_byte,f
  7674                           
  7675                           ;manchester_decode.c: 65:                 }else
  7676  00DD  28EE               	goto	i1l278
  7677  00DE                     i1l3439:	
  7678                           
  7679                           ;manchester_decode.c: 66:                 {;manchester_decode.c: 67:                    
      +                           decoded_byte^=(0x00>>bit_pos);
  7680  00DE  0A56               	incf	ManchesterDecode@bit_pos,w
  7681  00DF  00F4               	movwf	??_ManchesterDecode
  7682  00E0  01F5               	clrf	??_ManchesterDecode+1
  7683  00E1  01F6               	clrf	??_ManchesterDecode+2
  7684  00E2  28E6               	goto	u296_24
  7685  00E3                     u296_25:	
  7686  00E3  0D76               	rlf	??_ManchesterDecode+2,w
  7687  00E4  0CF6               	rrf	??_ManchesterDecode+2,f
  7688  00E5  0CF5               	rrf	??_ManchesterDecode+1,f
  7689  00E6                     u296_24:	
  7690  00E6  0BF4               	decfsz	??_ManchesterDecode,f
  7691  00E7  28E3               	goto	u296_25
  7692  00E8  0875               	movf	??_ManchesterDecode+1,w
  7693  00E9  00F7               	movwf	??_ManchesterDecode+3
  7694  00EA  0877               	movf	??_ManchesterDecode+3,w
  7695  00EB  1283               	bcf	3,5	;RP0=0, select bank0
  7696  00EC  1303               	bcf	3,6	;RP1=0, select bank0
  7697  00ED  06E1               	xorwf	ManchesterDecode@decoded_byte,f
  7698  00EE                     i1l278:	
  7699                           ;manchester_decode.c: 68:                 }
  7700                           
  7701                           
  7702                           ;manchester_decode.c: 69:                 bit_pos++;
  7703  00EE  3001               	movlw	1
  7704  00EF  00F4               	movwf	??_ManchesterDecode
  7705  00F0  0874               	movf	??_ManchesterDecode,w
  7706  00F1  07D6               	addwf	ManchesterDecode@bit_pos,f
  7707                           
  7708                           ;manchester_decode.c: 71:             }else
  7709  00F2  2945               	goto	i1l3461
  7710  00F3                     i1l3441:	
  7711                           
  7712                           ;manchester_decode.c: 72:             {;manchester_decode.c: 74:                 f_sync=
      +                          0;
  7713  00F3  01D2               	clrf	ManchesterDecode@f_sync
  7714  00F4  2970               	goto	i1l269
  7715  00F5                     i1l3445:	
  7716                           
  7717                           ;manchester_decode.c: 79:         {;manchester_decode.c: 80:             if((*pulse_time
      +                          >((8000000/4)/300/2)*60/100) && (*pulse_time<((8000000/4)/300/2)*140/100))
  7718  00F5  0873               	movf	ManchesterDecode@pulse_time,w
  7719  00F6  0084               	movwf	4
  7720  00F7  1383               	bcf	3,7	;select IRP bank0
  7721  00F8  0800               	movf	0,w
  7722  00F9  00F4               	movwf	??_ManchesterDecode
  7723  00FA  0A84               	incf	4,f
  7724  00FB  0800               	movf	0,w
  7725  00FC  00F5               	movwf	??_ManchesterDecode+1
  7726  00FD  3007               	movlw	7
  7727  00FE  0275               	subwf	??_ManchesterDecode+1,w
  7728  00FF  30D0               	movlw	208
  7729  0100  1903               	skipnz
  7730  0101  0274               	subwf	??_ManchesterDecode,w
  7731  0102  1C03               	skipc
  7732  0103  2905               	goto	u297_21
  7733  0104  2906               	goto	u297_20
  7734  0105                     u297_21:	
  7735  0105  28F3               	goto	i1l3441
  7736  0106                     u297_20:	
  7737  0106                     i1l3447:	
  7738  0106  0873               	movf	ManchesterDecode@pulse_time,w
  7739  0107  0084               	movwf	4
  7740  0108  0800               	movf	0,w
  7741  0109  00F4               	movwf	??_ManchesterDecode
  7742  010A  0A84               	incf	4,f
  7743  010B  0800               	movf	0,w
  7744  010C  00F5               	movwf	??_ManchesterDecode+1
  7745  010D  3012               	movlw	18
  7746  010E  0275               	subwf	??_ManchesterDecode+1,w
  7747  010F  303A               	movlw	58
  7748  0110  1903               	skipnz
  7749  0111  0274               	subwf	??_ManchesterDecode,w
  7750  0112  1803               	skipnc
  7751  0113  2915               	goto	u298_21
  7752  0114  2916               	goto	u298_20
  7753  0115                     u298_21:	
  7754  0115  28F3               	goto	i1l3441
  7755  0116                     u298_20:	
  7756  0116                     i1l3449:	
  7757                           
  7758                           ;manchester_decode.c: 81:             {;manchester_decode.c: 82:                 if(*edg
      +                          e_dir==0)
  7759  0116  0878               	movf	ManchesterDecode@edge_dir,w
  7760  0117  0084               	movwf	4
  7761  0118  0800               	movf	0,w
  7762  0119  1D03               	btfss	3,2
  7763  011A  291C               	goto	u299_21
  7764  011B  291D               	goto	u299_20
  7765  011C                     u299_21:	
  7766  011C  2930               	goto	i1l3453
  7767  011D                     u299_20:	
  7768  011D                     i1l3451:	
  7769                           
  7770                           ;manchester_decode.c: 83:                 {;manchester_decode.c: 84:                    
      +                           decoded_byte^=(0x80>>bit_pos);
  7771  011D  0A56               	incf	ManchesterDecode@bit_pos,w
  7772  011E  00F4               	movwf	??_ManchesterDecode
  7773  011F  3080               	movlw	128
  7774  0120  00F5               	movwf	??_ManchesterDecode+1
  7775  0121  3000               	movlw	0
  7776  0122  00F6               	movwf	??_ManchesterDecode+2
  7777  0123  2927               	goto	u300_24
  7778  0124                     u300_25:	
  7779  0124  0D76               	rlf	??_ManchesterDecode+2,w
  7780  0125  0CF6               	rrf	??_ManchesterDecode+2,f
  7781  0126  0CF5               	rrf	??_ManchesterDecode+1,f
  7782  0127                     u300_24:	
  7783  0127  0BF4               	decfsz	??_ManchesterDecode,f
  7784  0128  2924               	goto	u300_25
  7785  0129  0875               	movf	??_ManchesterDecode+1,w
  7786  012A  00F7               	movwf	??_ManchesterDecode+3
  7787  012B  0877               	movf	??_ManchesterDecode+3,w
  7788  012C  1283               	bcf	3,5	;RP0=0, select bank0
  7789  012D  1303               	bcf	3,6	;RP1=0, select bank0
  7790  012E  06E1               	xorwf	ManchesterDecode@decoded_byte,f
  7791                           
  7792                           ;manchester_decode.c: 85:                 }else
  7793  012F  2940               	goto	i1l283
  7794  0130                     i1l3453:	
  7795                           
  7796                           ;manchester_decode.c: 86:                 {;manchester_decode.c: 87:                    
      +                           decoded_byte^=(0x00>>bit_pos);
  7797  0130  0A56               	incf	ManchesterDecode@bit_pos,w
  7798  0131  00F4               	movwf	??_ManchesterDecode
  7799  0132  01F5               	clrf	??_ManchesterDecode+1
  7800  0133  01F6               	clrf	??_ManchesterDecode+2
  7801  0134  2938               	goto	u301_24
  7802  0135                     u301_25:	
  7803  0135  0D76               	rlf	??_ManchesterDecode+2,w
  7804  0136  0CF6               	rrf	??_ManchesterDecode+2,f
  7805  0137  0CF5               	rrf	??_ManchesterDecode+1,f
  7806  0138                     u301_24:	
  7807  0138  0BF4               	decfsz	??_ManchesterDecode,f
  7808  0139  2935               	goto	u301_25
  7809  013A  0875               	movf	??_ManchesterDecode+1,w
  7810  013B  00F7               	movwf	??_ManchesterDecode+3
  7811  013C  0877               	movf	??_ManchesterDecode+3,w
  7812  013D  1283               	bcf	3,5	;RP0=0, select bank0
  7813  013E  1303               	bcf	3,6	;RP1=0, select bank0
  7814  013F  06E1               	xorwf	ManchesterDecode@decoded_byte,f
  7815  0140                     i1l283:	
  7816                           ;manchester_decode.c: 88:                 }
  7817                           
  7818                           
  7819                           ;manchester_decode.c: 89:                 bit_pos++;
  7820  0140  3001               	movlw	1
  7821  0141  00F4               	movwf	??_ManchesterDecode
  7822  0142  0874               	movf	??_ManchesterDecode,w
  7823  0143  07D6               	addwf	ManchesterDecode@bit_pos,f
  7824  0144                     i1l3455:	
  7825                           
  7826                           ;manchester_decode.c: 90:                 f_slope_t=0;
  7827  0144  01D3               	clrf	ManchesterDecode@f_slope_t
  7828  0145                     i1l3461:	
  7829                           ;manchester_decode.c: 92:             }else
  7830                           
  7831                           
  7832                           ;manchester_decode.c: 100:         if(bit_pos>7)
  7833  0145  3008               	movlw	8
  7834  0146  0256               	subwf	ManchesterDecode@bit_pos,w
  7835  0147  1C03               	skipc
  7836  0148  294A               	goto	u302_21
  7837  0149  294B               	goto	u302_20
  7838  014A                     u302_21:	
  7839  014A  2970               	goto	i1l269
  7840  014B                     u302_20:	
  7841  014B                     i1l3463:	
  7842                           
  7843                           ;manchester_decode.c: 101:         {;manchester_decode.c: 102:             if(decoded_by
      +                          te=='$')
  7844  014B  3024               	movlw	36
  7845  014C  0661               	xorwf	ManchesterDecode@decoded_byte,w
  7846  014D  1D03               	btfss	3,2
  7847  014E  2950               	goto	u303_21
  7848  014F  2951               	goto	u303_20
  7849  0150                     u303_21:	
  7850  0150  2953               	goto	i1l3467
  7851  0151                     u303_20:	
  7852  0151                     i1l3465:	
  7853                           
  7854                           ;manchester_decode.c: 103:             {;manchester_decode.c: 104:                 f_sta
      +                          rt_data=1;
  7855  0151  01D4               	clrf	ManchesterDecode@f_start_data
  7856  0152  0AD4               	incf	ManchesterDecode@f_start_data,f
  7857  0153                     i1l3467:	
  7858                           
  7859                           ;manchester_decode.c: 106:             if(f_start_data)
  7860  0153  0854               	movf	ManchesterDecode@f_start_data,w
  7861  0154  1903               	btfsc	3,2
  7862  0155  2957               	goto	u304_21
  7863  0156  2958               	goto	u304_20
  7864  0157                     u304_21:	
  7865  0157  2966               	goto	i1l3473
  7866  0158                     u304_20:	
  7867  0158                     i1l3469:	
  7868                           
  7869                           ;manchester_decode.c: 107:             {;manchester_decode.c: 108:                 Frame
      +                          Buffer(&decoded_byte,1);
  7870  0158  01F0               	clrf	i1FrameBuffer@mode
  7871  0159  0AF0               	incf	i1FrameBuffer@mode,f
  7872  015A  3061               	movlw	(low (ManchesterDecode@decoded_byte| 0))& (0+255)
  7873  015B  120A  158A  2658  120A  118A  	fcall	i1_FrameBuffer
  7874  0160                     i1l3471:	
  7875                           
  7876                           ;manchester_decode.c: 109:                 data_counter++;
  7877  0160  3001               	movlw	1
  7878  0161  00F4               	movwf	??_ManchesterDecode
  7879  0162  0874               	movf	??_ManchesterDecode,w
  7880  0163  1283               	bcf	3,5	;RP0=0, select bank0
  7881  0164  1303               	bcf	3,6	;RP1=0, select bank0
  7882  0165  07D5               	addwf	ManchesterDecode@data_counter,f
  7883  0166                     i1l3473:	
  7884                           
  7885                           ;manchester_decode.c: 111:                 decoded_byte=0;
  7886  0166  01E1               	clrf	ManchesterDecode@decoded_byte
  7887  0167                     i1l3475:	
  7888                           
  7889                           ;manchester_decode.c: 112:                 bit_pos=0;
  7890  0167  01D6               	clrf	ManchesterDecode@bit_pos
  7891  0168                     i1l3477:	
  7892                           
  7893                           ;manchester_decode.c: 114:             if(data_counter>=6)
  7894  0168  3006               	movlw	6
  7895  0169  0255               	subwf	ManchesterDecode@data_counter,w
  7896  016A  1C03               	skipc
  7897  016B  296D               	goto	u305_21
  7898  016C  296E               	goto	u305_20
  7899  016D                     u305_21:	
  7900  016D  2970               	goto	i1l269
  7901  016E                     u305_20:	
  7902  016E                     i1l3479:	
  7903                           
  7904                           ;manchester_decode.c: 115:             {;manchester_decode.c: 116:                 f_sta
      +                          rt_data=0;
  7905  016E  01D4               	clrf	ManchesterDecode@f_start_data
  7906                           
  7907                           ;manchester_decode.c: 117:                 f_sync=0;
  7908  016F  01D2               	clrf	ManchesterDecode@f_sync
  7909  0170                     i1l269:	
  7910  0170  0008               	return
  7911  0171                     __end_of_ManchesterDecode:	
  7912                           
  7913                           	psect	text44
  7914  0E58                     __ptext44:	
  7915 ;; *************** function i1_FrameBuffer *****************
  7916 ;; Defined at:
  7917 ;;		line 6 in file "circular_buffer.c"
  7918 ;; Parameters:    Size  Location     Type
  7919 ;;  data            1    wreg     PTR unsigned char 
  7920 ;;		 -> FrameDecode@data(1), ManchesterDecode@decoded_byte(1), 
  7921 ;;  mode            1    0[COMMON] unsigned char 
  7922 ;; Auto vars:     Size  Location     Type
  7923 ;;  data            1    2[COMMON] PTR unsigned char 
  7924 ;;		 -> FrameDecode@data(1), ManchesterDecode@decoded_byte(1), 
  7925 ;; Return value:  Size  Location     Type
  7926 ;;                  1    wreg      unsigned char 
  7927 ;; Registers used:
  7928 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7929 ;; Tracked objects:
  7930 ;;		On entry : 0/0
  7931 ;;		On exit  : 0/0
  7932 ;;		Unchanged: 0/0
  7933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7934 ;;      Params:         1       0       0       0       0
  7935 ;;      Locals:         1       0       0       0       0
  7936 ;;      Temps:          1       0       0       0       0
  7937 ;;      Totals:         3       0       0       0       0
  7938 ;;Total ram usage:        3 bytes
  7939 ;; Hardware stack levels used:    1
  7940 ;; This function calls:
  7941 ;;		Nothing
  7942 ;; This function is called by:
  7943 ;;		_ManchesterDecode
  7944 ;; This function uses a non-reentrant model
  7945 ;;
  7946                           
  7947                           
  7948                           ;psect for function i1_FrameBuffer
  7949  0E58                     i1_FrameBuffer:	
  7950                           
  7951                           ;incstack = 0
  7952 ;; hardware stack exceeded
  7953                           ; Regs used in i1_FrameBuffer: [wreg-fsr0h+status,2+status,0]
  7954                           ;i1FrameBuffer@data stored from wreg
  7955  0E58  00F2               	movwf	i1FrameBuffer@data
  7956  0E59                     i1l3257:	
  7957                           
  7958                           ;circular_buffer.c: 6: unsigned char FrameBuffer(unsigned char *data,unsigned char mode)
      +                          ;circular_buffer.c: 7: {;circular_buffer.c: 8:  static unsigned char Buffer[30];;circula
      +                          r_buffer.c: 9:  static unsigned char ReadPointer,WritePointer,;circular_buffer.c: 10:   
      +                             WritePointerMem;;circular_buffer.c: 12:  if(mode==1)
  7959  0E59  0370               	decf	i1FrameBuffer@mode,w
  7960  0E5A  1D03               	btfss	3,2
  7961  0E5B  2E5D               	goto	u272_21
  7962  0E5C  2E5E               	goto	u272_20
  7963  0E5D                     u272_21:	
  7964  0E5D  2E85               	goto	i1l3279
  7965  0E5E                     u272_20:	
  7966  0E5E                     i1l3259:	
  7967                           
  7968                           ;circular_buffer.c: 13:  {;circular_buffer.c: 14:   WritePointerMem=WritePointer;
  7969  0E5E  1283               	bcf	3,5	;RP0=0, select bank0
  7970  0E5F  1303               	bcf	3,6	;RP1=0, select bank0
  7971  0E60  085B               	movf	FrameBuffer@WritePointer,w
  7972  0E61  00F1               	movwf	??i1_FrameBuffer
  7973  0E62  0871               	movf	??i1_FrameBuffer,w
  7974  0E63  00DA               	movwf	FrameBuffer@WritePointerMem
  7975  0E64                     i1l3261:	
  7976                           
  7977                           ;circular_buffer.c: 15:   WritePointer++;
  7978  0E64  3001               	movlw	1
  7979  0E65  00F1               	movwf	??i1_FrameBuffer
  7980  0E66  0871               	movf	??i1_FrameBuffer,w
  7981  0E67  07DB               	addwf	FrameBuffer@WritePointer,f
  7982  0E68                     i1l3263:	
  7983                           
  7984                           ;circular_buffer.c: 16:   if(WritePointer==30)
  7985  0E68  301E               	movlw	30
  7986  0E69  065B               	xorwf	FrameBuffer@WritePointer,w
  7987  0E6A  1D03               	btfss	3,2
  7988  0E6B  2E6D               	goto	u273_21
  7989  0E6C  2E6E               	goto	u273_20
  7990  0E6D                     u273_21:	
  7991  0E6D  2E6F               	goto	i1l3267
  7992  0E6E                     u273_20:	
  7993  0E6E                     i1l3265:	
  7994                           
  7995                           ;circular_buffer.c: 17:   {;circular_buffer.c: 18:    WritePointer=0;
  7996  0E6E  01DB               	clrf	FrameBuffer@WritePointer
  7997  0E6F                     i1l3267:	
  7998                           
  7999                           ;circular_buffer.c: 20:   if(WritePointer==ReadPointer)
  8000  0E6F  085B               	movf	FrameBuffer@WritePointer,w
  8001  0E70  065C               	xorwf	FrameBuffer@ReadPointer,w
  8002  0E71  1D03               	skipz
  8003  0E72  2E74               	goto	u274_21
  8004  0E73  2E75               	goto	u274_20
  8005  0E74                     u274_21:	
  8006  0E74  2E7A               	goto	i1l3273
  8007  0E75                     u274_20:	
  8008  0E75                     i1l3269:	
  8009                           
  8010                           ;circular_buffer.c: 21:   {;circular_buffer.c: 22:    WritePointer=WritePointerMem;
  8011  0E75  085A               	movf	FrameBuffer@WritePointerMem,w
  8012  0E76  00F1               	movwf	??i1_FrameBuffer
  8013  0E77  0871               	movf	??i1_FrameBuffer,w
  8014  0E78  00DB               	movwf	FrameBuffer@WritePointer
  8015  0E79  2EA2               	goto	i1l14
  8016  0E7A                     i1l3273:	
  8017                           
  8018                           ;circular_buffer.c: 26:   Buffer[WritePointer]=*data;
  8019  0E7A  0872               	movf	i1FrameBuffer@data,w
  8020  0E7B  0084               	movwf	4
  8021  0E7C  1383               	bcf	3,7	;select IRP bank0
  8022  0E7D  0800               	movf	0,w
  8023  0E7E  00F1               	movwf	??i1_FrameBuffer
  8024  0E7F  085B               	movf	FrameBuffer@WritePointer,w
  8025  0E80  3EA0               	addlw	(low (FrameBuffer@Buffer| 0))& (0+255)
  8026  0E81  0084               	movwf	4
  8027  0E82  0871               	movf	??i1_FrameBuffer,w
  8028  0E83  0080               	movwf	0
  8029  0E84  2EA2               	goto	i1l14
  8030  0E85                     i1l3279:	
  8031                           
  8032                           ;circular_buffer.c: 31:  {;circular_buffer.c: 32:   if(WritePointer!=ReadPointer)
  8033  0E85  1283               	bcf	3,5	;RP0=0, select bank0
  8034  0E86  1303               	bcf	3,6	;RP1=0, select bank0
  8035  0E87  085B               	movf	FrameBuffer@WritePointer,w
  8036  0E88  065C               	xorwf	FrameBuffer@ReadPointer,w
  8037  0E89  1903               	skipnz
  8038  0E8A  2E8C               	goto	u275_21
  8039  0E8B  2E8D               	goto	u275_20
  8040  0E8C                     u275_21:	
  8041  0E8C  2EA2               	goto	i1l14
  8042  0E8D                     u275_20:	
  8043  0E8D                     i1l3281:	
  8044                           
  8045                           ;circular_buffer.c: 33:   {;circular_buffer.c: 34:    ReadPointer++;
  8046  0E8D  3001               	movlw	1
  8047  0E8E  00F1               	movwf	??i1_FrameBuffer
  8048  0E8F  0871               	movf	??i1_FrameBuffer,w
  8049  0E90  07DC               	addwf	FrameBuffer@ReadPointer,f
  8050                           
  8051                           ;circular_buffer.c: 35:    if(ReadPointer==30)
  8052  0E91  301E               	movlw	30
  8053  0E92  065C               	xorwf	FrameBuffer@ReadPointer,w
  8054  0E93  1D03               	btfss	3,2
  8055  0E94  2E96               	goto	u276_21
  8056  0E95  2E97               	goto	u276_20
  8057  0E96                     u276_21:	
  8058  0E96  2E98               	goto	i1l3285
  8059  0E97                     u276_20:	
  8060  0E97                     i1l3283:	
  8061                           
  8062                           ;circular_buffer.c: 36:    {;circular_buffer.c: 37:     ReadPointer=0;
  8063  0E97  01DC               	clrf	FrameBuffer@ReadPointer
  8064  0E98                     i1l3285:	
  8065                           
  8066                           ;circular_buffer.c: 39:    *data=Buffer[ReadPointer];
  8067  0E98  085C               	movf	FrameBuffer@ReadPointer,w
  8068  0E99  3EA0               	addlw	(low (FrameBuffer@Buffer| 0))& (0+255)
  8069  0E9A  0084               	movwf	4
  8070  0E9B  1383               	bcf	3,7	;select IRP bank1
  8071  0E9C  0800               	movf	0,w
  8072  0E9D  00F1               	movwf	??i1_FrameBuffer
  8073  0E9E  0872               	movf	i1FrameBuffer@data,w
  8074  0E9F  0084               	movwf	4
  8075  0EA0  0871               	movf	??i1_FrameBuffer,w
  8076  0EA1  0080               	movwf	0
  8077  0EA2                     i1l14:	
  8078  0EA2  0008               	return
  8079  0EA3                     __end_ofi1_FrameBuffer:	
  8080                           
  8081                           	psect	text45
  8082  025F                     __ptext45:	
  8083 ;; *************** function _Display7SegmentText *****************
  8084 ;; Defined at:
  8085 ;;		line 88 in file "display-7-segment.c"
  8086 ;; Parameters:    Size  Location     Type
  8087 ;;  text            1    wreg     PTR unsigned char 
  8088 ;;		 -> g_display_text(4), 
  8089 ;;  decimal_poin    1   11[COMMON] unsigned char 
  8090 ;; Auto vars:     Size  Location     Type
  8091 ;;  text            1   13[COMMON] PTR unsigned char 
  8092 ;;		 -> g_display_text(4), 
  8093 ;; Return value:  Size  Location     Type
  8094 ;;                  1    wreg      void 
  8095 ;; Registers used:
  8096 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8097 ;; Tracked objects:
  8098 ;;		On entry : 0/0
  8099 ;;		On exit  : 0/0
  8100 ;;		Unchanged: 0/0
  8101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8102 ;;      Params:         1       0       0       0       0
  8103 ;;      Locals:         1       0       0       0       0
  8104 ;;      Temps:          1       0       0       0       0
  8105 ;;      Totals:         3       0       0       0       0
  8106 ;;Total ram usage:        3 bytes
  8107 ;; Hardware stack levels used:    1
  8108 ;; Hardware stack levels required when called:    2
  8109 ;; This function calls:
  8110 ;;		_OneDigitHandler
  8111 ;; This function is called by:
  8112 ;;		_ISR
  8113 ;; This function uses a non-reentrant model
  8114 ;;
  8115                           
  8116                           
  8117                           ;psect for function _Display7SegmentText
  8118  025F                     _Display7SegmentText:	
  8119                           
  8120                           ;incstack = 0
  8121 ;; hardware stack exceeded
  8122                           ; Regs used in _Display7SegmentText: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8123                           ;Display7SegmentText@text stored from wreg
  8124  025F  00FD               	movwf	Display7SegmentText@text
  8125  0260                     i1l3365:	
  8126                           
  8127                           ;display-7-segment.c: 88: void Display7SegmentText(unsigned char *text, unsigned char de
      +                          cimal_point);display-7-segment.c: 89: {;display-7-segment.c: 90:     static unsigned cha
      +                          r enable_digit=1;;display-7-segment.c: 92:     if(enable_digit<=1)
  8128  0260  3002               	movlw	2
  8129  0261  1283               	bcf	3,5	;RP0=0, select bank0
  8130  0262  1303               	bcf	3,6	;RP1=0, select bank0
  8131  0263  0264               	subwf	Display7SegmentText@enable_digit,w
  8132  0264  1803               	skipnc
  8133  0265  2A67               	goto	u277_21
  8134  0266  2A68               	goto	u277_20
  8135  0267                     u277_21:	
  8136  0267  2A8D               	goto	i1l3375
  8137  0268                     u277_20:	
  8138  0268                     i1l3367:	
  8139                           
  8140                           ;display-7-segment.c: 93:     {;display-7-segment.c: 94:         if(decimal_point & 0b10
      +                          00)
  8141  0268  1DFB               	btfss	Display7SegmentText@decimal_point,3
  8142  0269  2A6B               	goto	u278_21
  8143  026A  2A6C               	goto	u278_20
  8144  026B                     u278_21:	
  8145  026B  2A7A               	goto	i1l3371
  8146  026C                     u278_20:	
  8147  026C                     i1l3369:	
  8148                           
  8149                           ;display-7-segment.c: 95:         {;display-7-segment.c: 96:             OneDigitHandler
      +                          (*text,1,1);
  8150  026C  01F6               	clrf	OneDigitHandler@digit_number
  8151  026D  0AF6               	incf	OneDigitHandler@digit_number,f
  8152  026E  01F7               	clrf	OneDigitHandler@decimal_point
  8153  026F  0AF7               	incf	OneDigitHandler@decimal_point,f
  8154  0270  087D               	movf	Display7SegmentText@text,w
  8155  0271  0084               	movwf	4
  8156  0272  1383               	bcf	3,7	;select IRP bank0
  8157  0273  0800               	movf	0,w
  8158  0274  120A  158A  23F0  120A  118A  	fcall	_OneDigitHandler
  8159                           
  8160                           ;display-7-segment.c: 97:         }else
  8161  0279  2A86               	goto	i1l3373
  8162  027A                     i1l3371:	
  8163                           
  8164                           ;display-7-segment.c: 98:         {;display-7-segment.c: 99:             OneDigitHandler
      +                          (*text,1,0);
  8165  027A  01F6               	clrf	OneDigitHandler@digit_number
  8166  027B  0AF6               	incf	OneDigitHandler@digit_number,f
  8167  027C  01F7               	clrf	OneDigitHandler@decimal_point
  8168  027D  087D               	movf	Display7SegmentText@text,w
  8169  027E  0084               	movwf	4
  8170  027F  1383               	bcf	3,7	;select IRP bank0
  8171  0280  0800               	movf	0,w
  8172  0281  120A  158A  23F0  120A  118A  	fcall	_OneDigitHandler
  8173  0286                     i1l3373:	
  8174                           
  8175                           ;display-7-segment.c: 101:         enable_digit=2;
  8176  0286  3002               	movlw	2
  8177  0287  00FC               	movwf	??_Display7SegmentText
  8178  0288  087C               	movf	??_Display7SegmentText,w
  8179  0289  1283               	bcf	3,5	;RP0=0, select bank0
  8180  028A  1303               	bcf	3,6	;RP1=0, select bank0
  8181  028B  00E4               	movwf	Display7SegmentText@enable_digit
  8182                           
  8183                           ;display-7-segment.c: 103:     }else if(enable_digit==2)
  8184  028C  2B1C               	goto	i1l466
  8185  028D                     i1l3375:	
  8186  028D  3002               	movlw	2
  8187  028E  0664               	xorwf	Display7SegmentText@enable_digit,w
  8188  028F  1D03               	btfss	3,2
  8189  0290  2A92               	goto	u279_21
  8190  0291  2A93               	goto	u279_20
  8191  0292                     u279_21:	
  8192  0292  2ABC               	goto	i1l3385
  8193  0293                     u279_20:	
  8194  0293                     i1l3377:	
  8195                           
  8196                           ;display-7-segment.c: 104:     {;display-7-segment.c: 105:         if(decimal_point & 0b
      +                          0100)
  8197  0293  1D7B               	btfss	Display7SegmentText@decimal_point,2
  8198  0294  2A96               	goto	u280_21
  8199  0295  2A97               	goto	u280_20
  8200  0296                     u280_21:	
  8201  0296  2AA7               	goto	i1l3381
  8202  0297                     u280_20:	
  8203  0297                     i1l3379:	
  8204                           
  8205                           ;display-7-segment.c: 106:         {;display-7-segment.c: 107:             OneDigitHandl
      +                          er(*(text+1),2,1);
  8206  0297  3002               	movlw	2
  8207  0298  00FC               	movwf	??_Display7SegmentText
  8208  0299  087C               	movf	??_Display7SegmentText,w
  8209  029A  00F6               	movwf	OneDigitHandler@digit_number
  8210  029B  01F7               	clrf	OneDigitHandler@decimal_point
  8211  029C  0AF7               	incf	OneDigitHandler@decimal_point,f
  8212  029D  0A7D               	incf	Display7SegmentText@text,w
  8213  029E  0084               	movwf	4
  8214  029F  1383               	bcf	3,7	;select IRP bank0
  8215  02A0  0800               	movf	0,w
  8216  02A1  120A  158A  23F0  120A  118A  	fcall	_OneDigitHandler
  8217                           
  8218                           ;display-7-segment.c: 108:         }else
  8219  02A6  2AB5               	goto	i1l3383
  8220  02A7                     i1l3381:	
  8221                           
  8222                           ;display-7-segment.c: 109:         {;display-7-segment.c: 110:             OneDigitHandl
      +                          er(*(text+1),2,0);
  8223  02A7  3002               	movlw	2
  8224  02A8  00FC               	movwf	??_Display7SegmentText
  8225  02A9  087C               	movf	??_Display7SegmentText,w
  8226  02AA  00F6               	movwf	OneDigitHandler@digit_number
  8227  02AB  01F7               	clrf	OneDigitHandler@decimal_point
  8228  02AC  0A7D               	incf	Display7SegmentText@text,w
  8229  02AD  0084               	movwf	4
  8230  02AE  1383               	bcf	3,7	;select IRP bank0
  8231  02AF  0800               	movf	0,w
  8232  02B0  120A  158A  23F0  120A  118A  	fcall	_OneDigitHandler
  8233  02B5                     i1l3383:	
  8234                           
  8235                           ;display-7-segment.c: 112:         enable_digit=3;
  8236  02B5  3003               	movlw	3
  8237  02B6  00FC               	movwf	??_Display7SegmentText
  8238  02B7  087C               	movf	??_Display7SegmentText,w
  8239  02B8  1283               	bcf	3,5	;RP0=0, select bank0
  8240  02B9  1303               	bcf	3,6	;RP1=0, select bank0
  8241  02BA  00E4               	movwf	Display7SegmentText@enable_digit
  8242                           
  8243                           ;display-7-segment.c: 114:     }else if(enable_digit==3)
  8244  02BB  2B1C               	goto	i1l466
  8245  02BC                     i1l3385:	
  8246  02BC  3003               	movlw	3
  8247  02BD  0664               	xorwf	Display7SegmentText@enable_digit,w
  8248  02BE  1D03               	btfss	3,2
  8249  02BF  2AC1               	goto	u281_21
  8250  02C0  2AC2               	goto	u281_20
  8251  02C1                     u281_21:	
  8252  02C1  2AED               	goto	i1l3395
  8253  02C2                     u281_20:	
  8254  02C2                     i1l3387:	
  8255                           
  8256                           ;display-7-segment.c: 115:     {;display-7-segment.c: 116:         if(decimal_point & 0b
      +                          0010)
  8257  02C2  1CFB               	btfss	Display7SegmentText@decimal_point,1
  8258  02C3  2AC5               	goto	u282_21
  8259  02C4  2AC6               	goto	u282_20
  8260  02C5                     u282_21:	
  8261  02C5  2AD7               	goto	i1l3391
  8262  02C6                     u282_20:	
  8263  02C6                     i1l3389:	
  8264                           
  8265                           ;display-7-segment.c: 117:         {;display-7-segment.c: 118:            OneDigitHandle
      +                          r(*(text+2),3,1);
  8266  02C6  3003               	movlw	3
  8267  02C7  00FC               	movwf	??_Display7SegmentText
  8268  02C8  087C               	movf	??_Display7SegmentText,w
  8269  02C9  00F6               	movwf	OneDigitHandler@digit_number
  8270  02CA  01F7               	clrf	OneDigitHandler@decimal_point
  8271  02CB  0AF7               	incf	OneDigitHandler@decimal_point,f
  8272  02CC  087D               	movf	Display7SegmentText@text,w
  8273  02CD  3E02               	addlw	2
  8274  02CE  0084               	movwf	4
  8275  02CF  1383               	bcf	3,7	;select IRP bank0
  8276  02D0  0800               	movf	0,w
  8277  02D1  120A  158A  23F0  120A  118A  	fcall	_OneDigitHandler
  8278                           
  8279                           ;display-7-segment.c: 119:         }else
  8280  02D6  2AE6               	goto	i1l3393
  8281  02D7                     i1l3391:	
  8282                           
  8283                           ;display-7-segment.c: 120:         {;display-7-segment.c: 121:            OneDigitHandle
      +                          r(*(text+2),3,0);
  8284  02D7  3003               	movlw	3
  8285  02D8  00FC               	movwf	??_Display7SegmentText
  8286  02D9  087C               	movf	??_Display7SegmentText,w
  8287  02DA  00F6               	movwf	OneDigitHandler@digit_number
  8288  02DB  01F7               	clrf	OneDigitHandler@decimal_point
  8289  02DC  087D               	movf	Display7SegmentText@text,w
  8290  02DD  3E02               	addlw	2
  8291  02DE  0084               	movwf	4
  8292  02DF  1383               	bcf	3,7	;select IRP bank0
  8293  02E0  0800               	movf	0,w
  8294  02E1  120A  158A  23F0  120A  118A  	fcall	_OneDigitHandler
  8295  02E6                     i1l3393:	
  8296                           
  8297                           ;display-7-segment.c: 123:         enable_digit=4;
  8298  02E6  3004               	movlw	4
  8299  02E7  00FC               	movwf	??_Display7SegmentText
  8300  02E8  087C               	movf	??_Display7SegmentText,w
  8301  02E9  1283               	bcf	3,5	;RP0=0, select bank0
  8302  02EA  1303               	bcf	3,6	;RP1=0, select bank0
  8303  02EB  00E4               	movwf	Display7SegmentText@enable_digit
  8304                           
  8305                           ;display-7-segment.c: 125:     }else if(enable_digit>=4)
  8306  02EC  2B1C               	goto	i1l466
  8307  02ED                     i1l3395:	
  8308  02ED  3004               	movlw	4
  8309  02EE  0264               	subwf	Display7SegmentText@enable_digit,w
  8310  02EF  1C03               	skipc
  8311  02F0  2AF2               	goto	u283_21
  8312  02F1  2AF3               	goto	u283_20
  8313  02F2                     u283_21:	
  8314  02F2  2B1C               	goto	i1l458
  8315  02F3                     u283_20:	
  8316  02F3                     i1l3397:	
  8317                           
  8318                           ;display-7-segment.c: 126:     {;display-7-segment.c: 127:         if(decimal_point & 0b
      +                          0001)
  8319  02F3  1C7B               	btfss	Display7SegmentText@decimal_point,0
  8320  02F4  2AF6               	goto	u284_21
  8321  02F5  2AF7               	goto	u284_20
  8322  02F6                     u284_21:	
  8323  02F6  2B08               	goto	i1l3401
  8324  02F7                     u284_20:	
  8325  02F7                     i1l3399:	
  8326                           
  8327                           ;display-7-segment.c: 128:         {;display-7-segment.c: 129:             OneDigitHandl
      +                          er(*(text+3),4,1);
  8328  02F7  3004               	movlw	4
  8329  02F8  00FC               	movwf	??_Display7SegmentText
  8330  02F9  087C               	movf	??_Display7SegmentText,w
  8331  02FA  00F6               	movwf	OneDigitHandler@digit_number
  8332  02FB  01F7               	clrf	OneDigitHandler@decimal_point
  8333  02FC  0AF7               	incf	OneDigitHandler@decimal_point,f
  8334  02FD  087D               	movf	Display7SegmentText@text,w
  8335  02FE  3E03               	addlw	3
  8336  02FF  0084               	movwf	4
  8337  0300  1383               	bcf	3,7	;select IRP bank0
  8338  0301  0800               	movf	0,w
  8339  0302  120A  158A  23F0  120A  118A  	fcall	_OneDigitHandler
  8340                           
  8341                           ;display-7-segment.c: 130:         }else
  8342  0307  2B17               	goto	i1l3403
  8343  0308                     i1l3401:	
  8344                           
  8345                           ;display-7-segment.c: 131:         {;display-7-segment.c: 132:             OneDigitHandl
      +                          er(*(text+3),4,0);
  8346  0308  3004               	movlw	4
  8347  0309  00FC               	movwf	??_Display7SegmentText
  8348  030A  087C               	movf	??_Display7SegmentText,w
  8349  030B  00F6               	movwf	OneDigitHandler@digit_number
  8350  030C  01F7               	clrf	OneDigitHandler@decimal_point
  8351  030D  087D               	movf	Display7SegmentText@text,w
  8352  030E  3E03               	addlw	3
  8353  030F  0084               	movwf	4
  8354  0310  1383               	bcf	3,7	;select IRP bank0
  8355  0311  0800               	movf	0,w
  8356  0312  120A  158A  23F0  120A  118A  	fcall	_OneDigitHandler
  8357  0317                     i1l3403:	
  8358                           
  8359                           ;display-7-segment.c: 134:         enable_digit=1;
  8360  0317  1283               	bcf	3,5	;RP0=0, select bank0
  8361  0318  1303               	bcf	3,6	;RP1=0, select bank0
  8362  0319  01E4               	clrf	Display7SegmentText@enable_digit
  8363  031A  0AE4               	incf	Display7SegmentText@enable_digit,f
  8364  031B  2B1C               	goto	i1l466
  8365  031C                     i1l458:	
  8366  031C                     i1l466:	
  8367  031C  0008               	return
  8368  031D                     __end_of_Display7SegmentText:	
  8369                           
  8370                           	psect	text46
  8371  0BF0                     __ptext46:	
  8372 ;; *************** function _OneDigitHandler *****************
  8373 ;; Defined at:
  8374 ;;		line 139 in file "display-7-segment.c"
  8375 ;; Parameters:    Size  Location     Type
  8376 ;;  sign            1    wreg     unsigned char 
  8377 ;;  digit_number    1    6[COMMON] unsigned char 
  8378 ;;  decimal_poin    1    7[COMMON] unsigned char 
  8379 ;; Auto vars:     Size  Location     Type
  8380 ;;  sign            1   10[COMMON] unsigned char 
  8381 ;; Return value:  Size  Location     Type
  8382 ;;                  1    wreg      void 
  8383 ;; Registers used:
  8384 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8385 ;; Tracked objects:
  8386 ;;		On entry : 0/0
  8387 ;;		On exit  : 0/0
  8388 ;;		Unchanged: 0/0
  8389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8390 ;;      Params:         2       0       0       0       0
  8391 ;;      Locals:         1       0       0       0       0
  8392 ;;      Temps:          2       0       0       0       0
  8393 ;;      Totals:         5       0       0       0       0
  8394 ;;Total ram usage:        5 bytes
  8395 ;; Hardware stack levels used:    1
  8396 ;; Hardware stack levels required when called:    1
  8397 ;; This function calls:
  8398 ;;		_DisableAllDigits
  8399 ;;		_SetAnodeOutputs
  8400 ;;		_SignAnodeData
  8401 ;; This function is called by:
  8402 ;;		_Display7SegmentText
  8403 ;; This function uses a non-reentrant model
  8404 ;;
  8405                           
  8406                           
  8407                           ;psect for function _OneDigitHandler
  8408  0BF0                     _OneDigitHandler:	
  8409                           
  8410                           ;incstack = 0
  8411 ;; hardware stack exceeded
  8412                           ; Regs used in _OneDigitHandler: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8413                           ;OneDigitHandler@sign stored from wreg
  8414  0BF0  00FA               	movwf	OneDigitHandler@sign
  8415  0BF1                     i1l3211:	
  8416                           
  8417                           ;display-7-segment.c: 139: void OneDigitHandler(unsigned char sign, unsigned char digit_
      +                          number, unsigned char decimal_point);display-7-segment.c: 140: {;display-7-segment.c: 14
      +                          2:     DisableAllDigits();
  8418  0BF1  120A  158A  21FC  120A  158A  	fcall	_DisableAllDigits
  8419  0BF6                     i1l3213:	
  8420                           
  8421                           ;display-7-segment.c: 143:     SetAnodeOutputs(SignAnodeData(sign),decimal_point);
  8422  0BF6  0877               	movf	OneDigitHandler@decimal_point,w
  8423  0BF7  00F8               	movwf	??_OneDigitHandler
  8424  0BF8  0878               	movf	??_OneDigitHandler,w
  8425  0BF9  00F3               	movwf	SetAnodeOutputs@decimal_point
  8426  0BFA  087A               	movf	OneDigitHandler@sign,w
  8427  0BFB  120A  118A  231D  120A  158A  	fcall	_SignAnodeData
  8428  0C00  120A  118A  264A  120A  158A  	fcall	_SetAnodeOutputs
  8429                           
  8430                           ;display-7-segment.c: 144:     switch (digit_number)
  8431  0C05  2C16               	goto	i1l3217
  8432  0C06                     i1l470:	
  8433                           ;display-7-segment.c: 145:     {;display-7-segment.c: 146:         case 1 : PORTBbits.RB
      +                          7=0; break;
  8434                           
  8435  0C06  1283               	bcf	3,5	;RP0=0, select bank0
  8436  0C07  1303               	bcf	3,6	;RP1=0, select bank0
  8437  0C08  1386               	bcf	6,7	;volatile
  8438  0C09  2C2C               	goto	i1l475
  8439  0C0A                     i1l472:	
  8440                           ;display-7-segment.c: 147:         case 2 : PORTBbits.RB6=0; break;
  8441                           
  8442  0C0A  1283               	bcf	3,5	;RP0=0, select bank0
  8443  0C0B  1303               	bcf	3,6	;RP1=0, select bank0
  8444  0C0C  1306               	bcf	6,6	;volatile
  8445  0C0D  2C2C               	goto	i1l475
  8446  0C0E                     i1l473:	
  8447                           ;display-7-segment.c: 148:         case 3 : PORTBbits.RB5=0; break;
  8448                           
  8449  0C0E  1283               	bcf	3,5	;RP0=0, select bank0
  8450  0C0F  1303               	bcf	3,6	;RP1=0, select bank0
  8451  0C10  1286               	bcf	6,5	;volatile
  8452  0C11  2C2C               	goto	i1l475
  8453  0C12                     i1l474:	
  8454                           ;display-7-segment.c: 149:         case 4 : PORTBbits.RB4=0; break;
  8455                           
  8456  0C12  1283               	bcf	3,5	;RP0=0, select bank0
  8457  0C13  1303               	bcf	3,6	;RP1=0, select bank0
  8458  0C14  1206               	bcf	6,4	;volatile
  8459  0C15  2C2C               	goto	i1l475
  8460  0C16                     i1l3217:	
  8461  0C16  0876               	movf	OneDigitHandler@digit_number,w
  8462  0C17  00F8               	movwf	??_OneDigitHandler
  8463  0C18  01F9               	clrf	??_OneDigitHandler+1
  8464                           
  8465                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8466                           ; Switch size 1, requested type "simple"
  8467                           ; Number of cases is 1, Range of values is 0 to 0
  8468                           ; switch strategies available:
  8469                           ; Name         Instructions Cycles
  8470                           ; simple_byte            4     3 (average)
  8471                           ; direct_byte           11     8 (fixed)
  8472                           ; jumptable            260     6 (fixed)
  8473                           ;	Chosen strategy is simple_byte
  8474  0C19  0879               	movf	??_OneDigitHandler+1,w
  8475  0C1A  3A00               	xorlw	0	; case 0
  8476  0C1B  1903               	skipnz
  8477  0C1C  2C1E               	goto	i1l4559
  8478  0C1D  2C2C               	goto	i1l475
  8479  0C1E                     i1l4559:	
  8480                           
  8481                           ; Switch size 1, requested type "simple"
  8482                           ; Number of cases is 4, Range of values is 1 to 4
  8483                           ; switch strategies available:
  8484                           ; Name         Instructions Cycles
  8485                           ; simple_byte           13     7 (average)
  8486                           ; direct_byte           23    11 (fixed)
  8487                           ; jumptable            263     9 (fixed)
  8488                           ;	Chosen strategy is simple_byte
  8489  0C1E  0878               	movf	??_OneDigitHandler,w
  8490  0C1F  3A01               	xorlw	1	; case 1
  8491  0C20  1903               	skipnz
  8492  0C21  2C06               	goto	i1l470
  8493  0C22  3A03               	xorlw	3	; case 2
  8494  0C23  1903               	skipnz
  8495  0C24  2C0A               	goto	i1l472
  8496  0C25  3A01               	xorlw	1	; case 3
  8497  0C26  1903               	skipnz
  8498  0C27  2C0E               	goto	i1l473
  8499  0C28  3A07               	xorlw	7	; case 4
  8500  0C29  1903               	skipnz
  8501  0C2A  2C12               	goto	i1l474
  8502  0C2B  2C2C               	goto	i1l475
  8503  0C2C                     i1l475:	
  8504  0C2C  0008               	return
  8505  0C2D                     __end_of_OneDigitHandler:	
  8506                           
  8507                           	psect	text47
  8508  031D                     __ptext47:	
  8509 ;; *************** function _SignAnodeData *****************
  8510 ;; Defined at:
  8511 ;;		line 28 in file "display-7-segment.c"
  8512 ;; Parameters:    Size  Location     Type
  8513 ;;  sign            1    wreg     unsigned char 
  8514 ;; Auto vars:     Size  Location     Type
  8515 ;;  sign            1    2[COMMON] unsigned char 
  8516 ;; Return value:  Size  Location     Type
  8517 ;;                  1    wreg      unsigned char 
  8518 ;; Registers used:
  8519 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8520 ;; Tracked objects:
  8521 ;;		On entry : 0/0
  8522 ;;		On exit  : 0/0
  8523 ;;		Unchanged: 0/0
  8524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8525 ;;      Params:         0       0       0       0       0
  8526 ;;      Locals:         1       0       0       0       0
  8527 ;;      Temps:          2       0       0       0       0
  8528 ;;      Totals:         3       0       0       0       0
  8529 ;;Total ram usage:        3 bytes
  8530 ;; Hardware stack levels used:    1
  8531 ;; This function calls:
  8532 ;;		Nothing
  8533 ;; This function is called by:
  8534 ;;		_OneDigitHandler
  8535 ;; This function uses a non-reentrant model
  8536 ;;
  8537                           
  8538                           
  8539                           ;psect for function _SignAnodeData
  8540  031D                     _SignAnodeData:	
  8541                           
  8542                           ;incstack = 0
  8543 ;; hardware stack exceeded
  8544                           ; Regs used in _SignAnodeData: [wreg-fsr0h+status,2+status,0]
  8545                           ;SignAnodeData@sign stored from wreg
  8546  031D  00F2               	movwf	SignAnodeData@sign
  8547  031E                     i1l2931:	
  8548                           
  8549                           ;display-7-segment.c: 28: unsigned char SignAnodeData(unsigned char sign);display-7-segm
      +                          ent.c: 29: {;display-7-segment.c: 30:     switch (sign)
  8550  031E  2B55               	goto	i1l3079
  8551  031F                     i1l2933:	
  8552  031F  30FC               	movlw	252
  8553  0320  2BCB               	goto	i1l407
  8554  0321                     i1l2937:	
  8555  0321  3060               	movlw	96
  8556  0322  2BCB               	goto	i1l407
  8557  0323                     i1l2941:	
  8558  0323  30DA               	movlw	218
  8559  0324  2BCB               	goto	i1l407
  8560  0325                     i1l2945:	
  8561  0325  30F2               	movlw	242
  8562  0326  2BCB               	goto	i1l407
  8563  0327                     i1l2949:	
  8564  0327  3066               	movlw	102
  8565  0328  2BCB               	goto	i1l407
  8566  0329                     i1l2953:	
  8567  0329  30B6               	movlw	182
  8568  032A  2BCB               	goto	i1l407
  8569  032B                     i1l2957:	
  8570  032B  30BE               	movlw	190
  8571  032C  2BCB               	goto	i1l407
  8572  032D                     i1l2961:	
  8573  032D  30E4               	movlw	228
  8574  032E  2BCB               	goto	i1l407
  8575  032F                     i1l2965:	
  8576  032F  30FE               	movlw	254
  8577  0330  2BCB               	goto	i1l407
  8578  0331                     i1l2969:	
  8579  0331  30F6               	movlw	246
  8580  0332  2BCB               	goto	i1l407
  8581  0333                     i1l2973:	
  8582  0333  30EE               	movlw	238
  8583  0334  2BCB               	goto	i1l407
  8584  0335                     i1l2977:	
  8585  0335  303E               	movlw	62
  8586  0336  2BCB               	goto	i1l407
  8587  0337                     i1l2981:	
  8588  0337  309C               	movlw	156
  8589  0338  2BCB               	goto	i1l407
  8590  0339                     i1l2985:	
  8591  0339  307A               	movlw	122
  8592  033A  2BCB               	goto	i1l407
  8593  033B                     i1l2989:	
  8594  033B  309E               	movlw	158
  8595  033C  2BCB               	goto	i1l407
  8596  033D                     i1l2993:	
  8597  033D  308E               	movlw	142
  8598  033E  2BCB               	goto	i1l407
  8599  033F                     i1l2997:	
  8600  033F  30BC               	movlw	188
  8601  0340  2BCB               	goto	i1l407
  8602  0341                     i1l3001:	
  8603  0341  306E               	movlw	110
  8604  0342  2BCB               	goto	i1l407
  8605  0343                     i1l3009:	
  8606  0343  3070               	movlw	112
  8607  0344  2BCB               	goto	i1l407
  8608  0345                     i1l3017:	
  8609  0345  301C               	movlw	28
  8610  0346  2BCB               	goto	i1l407
  8611  0347                     i1l3021:	
  8612  0347  3000               	movlw	0
  8613  0348  2BCB               	goto	i1l407
  8614  0349                     i1l3025:	
  8615  0349  302A               	movlw	42
  8616  034A  2BCB               	goto	i1l407
  8617  034B                     i1l3033:	
  8618  034B  3073               	movlw	115
  8619  034C  2BCB               	goto	i1l407
  8620  034D                     i1l3037:	
  8621  034D  300A               	movlw	10
  8622  034E  2BCB               	goto	i1l407
  8623  034F                     i1l3045:	
  8624  034F  301E               	movlw	30
  8625  0350  2BCB               	goto	i1l407
  8626  0351                     i1l3049:	
  8627  0351  307C               	movlw	124
  8628  0352  2BCB               	goto	i1l407
  8629  0353                     i1l3065:	
  8630  0353  3076               	movlw	118
  8631  0354  2BCB               	goto	i1l407
  8632  0355                     i1l3079:	
  8633  0355  0872               	movf	SignAnodeData@sign,w
  8634  0356  00F0               	movwf	??_SignAnodeData
  8635  0357  01F1               	clrf	??_SignAnodeData+1
  8636                           
  8637                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8638                           ; Switch size 1, requested type "simple"
  8639                           ; Number of cases is 1, Range of values is 0 to 0
  8640                           ; switch strategies available:
  8641                           ; Name         Instructions Cycles
  8642                           ; simple_byte            4     3 (average)
  8643                           ; direct_byte           11     8 (fixed)
  8644                           ; jumptable            260     6 (fixed)
  8645                           ;	Chosen strategy is simple_byte
  8646  0358  0871               	movf	??_SignAnodeData+1,w
  8647  0359  3A00               	xorlw	0	; case 0
  8648  035A  1903               	skipnz
  8649  035B  2B5D               	goto	i1l4561
  8650  035C  2B47               	goto	i1l3021
  8651  035D                     i1l4561:	
  8652                           
  8653                           ; Switch size 1, requested type "simple"
  8654                           ; Number of cases is 36, Range of values is 0 to 122
  8655                           ; switch strategies available:
  8656                           ; Name         Instructions Cycles
  8657                           ; simple_byte          109    55 (average)
  8658                           ; jumptable            260     6 (fixed)
  8659                           ;	Chosen strategy is simple_byte
  8660  035D  0870               	movf	??_SignAnodeData,w
  8661  035E  3A00               	xorlw	0	; case 0
  8662  035F  1903               	skipnz
  8663  0360  2B1F               	goto	i1l2933
  8664  0361  3A01               	xorlw	1	; case 1
  8665  0362  1903               	skipnz
  8666  0363  2B21               	goto	i1l2937
  8667  0364  3A03               	xorlw	3	; case 2
  8668  0365  1903               	skipnz
  8669  0366  2B23               	goto	i1l2941
  8670  0367  3A01               	xorlw	1	; case 3
  8671  0368  1903               	skipnz
  8672  0369  2B25               	goto	i1l2945
  8673  036A  3A07               	xorlw	7	; case 4
  8674  036B  1903               	skipnz
  8675  036C  2B27               	goto	i1l2949
  8676  036D  3A01               	xorlw	1	; case 5
  8677  036E  1903               	skipnz
  8678  036F  2B29               	goto	i1l2953
  8679  0370  3A03               	xorlw	3	; case 6
  8680  0371  1903               	skipnz
  8681  0372  2B2B               	goto	i1l2957
  8682  0373  3A01               	xorlw	1	; case 7
  8683  0374  1903               	skipnz
  8684  0375  2B2D               	goto	i1l2961
  8685  0376  3A0F               	xorlw	15	; case 8
  8686  0377  1903               	skipnz
  8687  0378  2B2F               	goto	i1l2965
  8688  0379  3A01               	xorlw	1	; case 9
  8689  037A  1903               	skipnz
  8690  037B  2B31               	goto	i1l2969
  8691  037C  3A23               	xorlw	35	; case 42
  8692  037D  1903               	skipnz
  8693  037E  2B47               	goto	i1l3021
  8694  037F  3A4B               	xorlw	75	; case 97
  8695  0380  1903               	skipnz
  8696  0381  2B33               	goto	i1l2973
  8697  0382  3A03               	xorlw	3	; case 98
  8698  0383  1903               	skipnz
  8699  0384  2B35               	goto	i1l2977
  8700  0385  3A01               	xorlw	1	; case 99
  8701  0386  1903               	skipnz
  8702  0387  2B37               	goto	i1l2981
  8703  0388  3A07               	xorlw	7	; case 100
  8704  0389  1903               	skipnz
  8705  038A  2B39               	goto	i1l2985
  8706  038B  3A01               	xorlw	1	; case 101
  8707  038C  1903               	skipnz
  8708  038D  2B3B               	goto	i1l2989
  8709  038E  3A03               	xorlw	3	; case 102
  8710  038F  1903               	skipnz
  8711  0390  2B3D               	goto	i1l2993
  8712  0391  3A01               	xorlw	1	; case 103
  8713  0392  1903               	skipnz
  8714  0393  2B3F               	goto	i1l2997
  8715  0394  3A0F               	xorlw	15	; case 104
  8716  0395  1903               	skipnz
  8717  0396  2B41               	goto	i1l3001
  8718  0397  3A01               	xorlw	1	; case 105
  8719  0398  1903               	skipnz
  8720  0399  2B21               	goto	i1l2937
  8721  039A  3A03               	xorlw	3	; case 106
  8722  039B  1903               	skipnz
  8723  039C  2B43               	goto	i1l3009
  8724  039D  3A01               	xorlw	1	; case 107
  8725  039E  1903               	skipnz
  8726  039F  2B41               	goto	i1l3001
  8727  03A0  3A07               	xorlw	7	; case 108
  8728  03A1  1903               	skipnz
  8729  03A2  2B45               	goto	i1l3017
  8730  03A3  3A01               	xorlw	1	; case 109
  8731  03A4  1903               	skipnz
  8732  03A5  2B47               	goto	i1l3021
  8733  03A6  3A03               	xorlw	3	; case 110
  8734  03A7  1903               	skipnz
  8735  03A8  2B49               	goto	i1l3025
  8736  03A9  3A01               	xorlw	1	; case 111
  8737  03AA  1903               	skipnz
  8738  03AB  2B1F               	goto	i1l2933
  8739  03AC  3A1F               	xorlw	31	; case 112
  8740  03AD  1903               	skipnz
  8741  03AE  2B4B               	goto	i1l3033
  8742  03AF  3A02               	xorlw	2	; case 114
  8743  03B0  1903               	skipnz
  8744  03B1  2B4D               	goto	i1l3037
  8745  03B2  3A01               	xorlw	1	; case 115
  8746  03B3  1903               	skipnz
  8747  03B4  2B29               	goto	i1l2953
  8748  03B5  3A07               	xorlw	7	; case 116
  8749  03B6  1903               	skipnz
  8750  03B7  2B4F               	goto	i1l3045
  8751  03B8  3A01               	xorlw	1	; case 117
  8752  03B9  1903               	skipnz
  8753  03BA  2B51               	goto	i1l3049
  8754  03BB  3A03               	xorlw	3	; case 118
  8755  03BC  1903               	skipnz
  8756  03BD  2B51               	goto	i1l3049
  8757  03BE  3A01               	xorlw	1	; case 119
  8758  03BF  1903               	skipnz
  8759  03C0  2B47               	goto	i1l3021
  8760  03C1  3A0F               	xorlw	15	; case 120
  8761  03C2  1903               	skipnz
  8762  03C3  2B41               	goto	i1l3001
  8763  03C4  3A01               	xorlw	1	; case 121
  8764  03C5  1903               	skipnz
  8765  03C6  2B53               	goto	i1l3065
  8766  03C7  3A03               	xorlw	3	; case 122
  8767  03C8  1903               	skipnz
  8768  03C9  2B23               	goto	i1l2941
  8769  03CA  2B47               	goto	i1l3021
  8770  03CB                     i1l407:	
  8771  03CB  0008               	return
  8772  03CC                     __end_of_SignAnodeData:	
  8773                           
  8774                           	psect	text48
  8775  064A                     __ptext48:	
  8776 ;; *************** function _SetAnodeOutputs *****************
  8777 ;; Defined at:
  8778 ;;		line 153 in file "display-7-segment.c"
  8779 ;; Parameters:    Size  Location     Type
  8780 ;;  sign            1    wreg     unsigned char 
  8781 ;;  decimal_poin    1    3[COMMON] unsigned char 
  8782 ;; Auto vars:     Size  Location     Type
  8783 ;;  sign            1    5[COMMON] unsigned char 
  8784 ;; Return value:  Size  Location     Type
  8785 ;;                  1    wreg      void 
  8786 ;; Registers used:
  8787 ;;		wreg, status,2, status,0
  8788 ;; Tracked objects:
  8789 ;;		On entry : 0/0
  8790 ;;		On exit  : 0/0
  8791 ;;		Unchanged: 0/0
  8792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8793 ;;      Params:         1       0       0       0       0
  8794 ;;      Locals:         1       0       0       0       0
  8795 ;;      Temps:          1       0       0       0       0
  8796 ;;      Totals:         3       0       0       0       0
  8797 ;;Total ram usage:        3 bytes
  8798 ;; Hardware stack levels used:    1
  8799 ;; This function calls:
  8800 ;;		Nothing
  8801 ;; This function is called by:
  8802 ;;		_OneDigitHandler
  8803 ;; This function uses a non-reentrant model
  8804 ;;
  8805                           
  8806                           
  8807                           ;psect for function _SetAnodeOutputs
  8808  064A                     _SetAnodeOutputs:	
  8809                           
  8810                           ;incstack = 0
  8811 ;; hardware stack exceeded
  8812                           ; Regs used in _SetAnodeOutputs: [wreg+status,2+status,0]
  8813                           ;SetAnodeOutputs@sign stored from wreg
  8814  064A  00F5               	movwf	SetAnodeOutputs@sign
  8815  064B                     i1l3091:	
  8816                           
  8817                           ;display-7-segment.c: 153: void SetAnodeOutputs(unsigned char sign, unsigned char decima
      +                          l_point);display-7-segment.c: 154: {;display-7-segment.c: 156:     if(sign>>7 & 1)
  8818  064B  0875               	movf	SetAnodeOutputs@sign,w
  8819  064C  00F4               	movwf	??_SetAnodeOutputs
  8820  064D  3007               	movlw	7
  8821  064E                     u235_25:	
  8822  064E  1003               	clrc
  8823  064F  0CF4               	rrf	??_SetAnodeOutputs,f
  8824  0650  3EFF               	addlw	-1
  8825  0651  1D03               	skipz
  8826  0652  2E4E               	goto	u235_25
  8827  0653  1C74               	btfss	??_SetAnodeOutputs,0
  8828  0654  2E56               	goto	u236_21
  8829  0655  2E57               	goto	u236_20
  8830  0656                     u236_21:	
  8831  0656  2E5B               	goto	i1l478
  8832  0657                     u236_20:	
  8833  0657                     i1l3093:	
  8834                           
  8835                           ;display-7-segment.c: 157:     {;display-7-segment.c: 158:         PORTAbits.RA6=1;
  8836  0657  1283               	bcf	3,5	;RP0=0, select bank0
  8837  0658  1303               	bcf	3,6	;RP1=0, select bank0
  8838  0659  1705               	bsf	5,6	;volatile
  8839                           
  8840                           ;display-7-segment.c: 159:     }else
  8841  065A  2E5E               	goto	i1l3095
  8842  065B                     i1l478:	
  8843                           
  8844                           ;display-7-segment.c: 160:     {;display-7-segment.c: 161:         PORTAbits.RA6=0;
  8845  065B  1283               	bcf	3,5	;RP0=0, select bank0
  8846  065C  1303               	bcf	3,6	;RP1=0, select bank0
  8847  065D  1305               	bcf	5,6	;volatile
  8848  065E                     i1l3095:	
  8849                           
  8850                           ;display-7-segment.c: 164:     if(sign>>6 & 1)
  8851  065E  0875               	movf	SetAnodeOutputs@sign,w
  8852  065F  00F4               	movwf	??_SetAnodeOutputs
  8853  0660  3006               	movlw	6
  8854  0661                     u237_25:	
  8855  0661  1003               	clrc
  8856  0662  0CF4               	rrf	??_SetAnodeOutputs,f
  8857  0663  3EFF               	addlw	-1
  8858  0664  1D03               	skipz
  8859  0665  2E61               	goto	u237_25
  8860  0666  1C74               	btfss	??_SetAnodeOutputs,0
  8861  0667  2E69               	goto	u238_21
  8862  0668  2E6A               	goto	u238_20
  8863  0669                     u238_21:	
  8864  0669  2E6C               	goto	i1l480
  8865  066A                     u238_20:	
  8866  066A                     i1l3097:	
  8867                           
  8868                           ;display-7-segment.c: 165:     {;display-7-segment.c: 166:         PORTAbits.RA7=1;
  8869  066A  1785               	bsf	5,7	;volatile
  8870                           
  8871                           ;display-7-segment.c: 167:     }else
  8872  066B  2E6D               	goto	i1l3099
  8873  066C                     i1l480:	
  8874                           
  8875                           ;display-7-segment.c: 168:     {;display-7-segment.c: 169:         PORTAbits.RA7=0;
  8876  066C  1385               	bcf	5,7	;volatile
  8877  066D                     i1l3099:	
  8878                           
  8879                           ;display-7-segment.c: 172:     if(sign>>5 & 1)
  8880  066D  0875               	movf	SetAnodeOutputs@sign,w
  8881  066E  00F4               	movwf	??_SetAnodeOutputs
  8882  066F  3005               	movlw	5
  8883  0670                     u239_25:	
  8884  0670  1003               	clrc
  8885  0671  0CF4               	rrf	??_SetAnodeOutputs,f
  8886  0672  3EFF               	addlw	-1
  8887  0673  1D03               	skipz
  8888  0674  2E70               	goto	u239_25
  8889  0675  1C74               	btfss	??_SetAnodeOutputs,0
  8890  0676  2E78               	goto	u240_21
  8891  0677  2E79               	goto	u240_20
  8892  0678                     u240_21:	
  8893  0678  2E7B               	goto	i1l482
  8894  0679                     u240_20:	
  8895  0679                     i1l3101:	
  8896                           
  8897                           ;display-7-segment.c: 173:     {;display-7-segment.c: 174:         PORTAbits.RA5=1;
  8898  0679  1685               	bsf	5,5	;volatile
  8899                           
  8900                           ;display-7-segment.c: 175:     }else
  8901  067A  2E7C               	goto	i1l3103
  8902  067B                     i1l482:	
  8903                           
  8904                           ;display-7-segment.c: 176:     {;display-7-segment.c: 177:         PORTAbits.RA5=0;
  8905  067B  1285               	bcf	5,5	;volatile
  8906  067C                     i1l3103:	
  8907                           
  8908                           ;display-7-segment.c: 180:     if(sign>>4 & 1)
  8909  067C  0875               	movf	SetAnodeOutputs@sign,w
  8910  067D  00F4               	movwf	??_SetAnodeOutputs
  8911  067E  3004               	movlw	4
  8912  067F                     u241_25:	
  8913  067F  1003               	clrc
  8914  0680  0CF4               	rrf	??_SetAnodeOutputs,f
  8915  0681  3EFF               	addlw	-1
  8916  0682  1D03               	skipz
  8917  0683  2E7F               	goto	u241_25
  8918  0684  1C74               	btfss	??_SetAnodeOutputs,0
  8919  0685  2E87               	goto	u242_21
  8920  0686  2E88               	goto	u242_20
  8921  0687                     u242_21:	
  8922  0687  2E8A               	goto	i1l484
  8923  0688                     u242_20:	
  8924  0688                     i1l3105:	
  8925                           
  8926                           ;display-7-segment.c: 181:     {;display-7-segment.c: 182:         PORTAbits.RA4=1;
  8927  0688  1605               	bsf	5,4	;volatile
  8928                           
  8929                           ;display-7-segment.c: 183:     }else
  8930  0689  2E8B               	goto	i1l3107
  8931  068A                     i1l484:	
  8932                           
  8933                           ;display-7-segment.c: 184:     {;display-7-segment.c: 185:         PORTAbits.RA4=0;
  8934  068A  1205               	bcf	5,4	;volatile
  8935  068B                     i1l3107:	
  8936                           
  8937                           ;display-7-segment.c: 188:     if(sign>>3 & 1)
  8938  068B  0875               	movf	SetAnodeOutputs@sign,w
  8939  068C  00F4               	movwf	??_SetAnodeOutputs
  8940  068D  3003               	movlw	3
  8941  068E                     u243_25:	
  8942  068E  1003               	clrc
  8943  068F  0CF4               	rrf	??_SetAnodeOutputs,f
  8944  0690  3EFF               	addlw	-1
  8945  0691  1D03               	skipz
  8946  0692  2E8E               	goto	u243_25
  8947  0693  1C74               	btfss	??_SetAnodeOutputs,0
  8948  0694  2E96               	goto	u244_21
  8949  0695  2E97               	goto	u244_20
  8950  0696                     u244_21:	
  8951  0696  2E99               	goto	i1l486
  8952  0697                     u244_20:	
  8953  0697                     i1l3109:	
  8954                           
  8955                           ;display-7-segment.c: 189:     {;display-7-segment.c: 190:         PORTAbits.RA3=1;
  8956  0697  1585               	bsf	5,3	;volatile
  8957                           
  8958                           ;display-7-segment.c: 191:     }else
  8959  0698  2E9A               	goto	i1l3111
  8960  0699                     i1l486:	
  8961                           
  8962                           ;display-7-segment.c: 192:     {;display-7-segment.c: 193:         PORTAbits.RA3=0;
  8963  0699  1185               	bcf	5,3	;volatile
  8964  069A                     i1l3111:	
  8965                           
  8966                           ;display-7-segment.c: 196:     if(sign>>2 & 1)
  8967  069A  0875               	movf	SetAnodeOutputs@sign,w
  8968  069B  00F4               	movwf	??_SetAnodeOutputs
  8969  069C  3002               	movlw	2
  8970  069D                     u245_25:	
  8971  069D  1003               	clrc
  8972  069E  0CF4               	rrf	??_SetAnodeOutputs,f
  8973  069F  3EFF               	addlw	-1
  8974  06A0  1D03               	skipz
  8975  06A1  2E9D               	goto	u245_25
  8976  06A2  1C74               	btfss	??_SetAnodeOutputs,0
  8977  06A3  2EA5               	goto	u246_21
  8978  06A4  2EA6               	goto	u246_20
  8979  06A5                     u246_21:	
  8980  06A5  2EA8               	goto	i1l488
  8981  06A6                     u246_20:	
  8982  06A6                     i1l3113:	
  8983                           
  8984                           ;display-7-segment.c: 197:     {;display-7-segment.c: 198:         PORTAbits.RA2=1;
  8985  06A6  1505               	bsf	5,2	;volatile
  8986                           
  8987                           ;display-7-segment.c: 199:     }else
  8988  06A7  2EA9               	goto	i1l3115
  8989  06A8                     i1l488:	
  8990                           
  8991                           ;display-7-segment.c: 200:     {;display-7-segment.c: 201:         PORTAbits.RA2=0;
  8992  06A8  1105               	bcf	5,2	;volatile
  8993  06A9                     i1l3115:	
  8994                           
  8995                           ;display-7-segment.c: 204:     if(sign>>1 & 1)
  8996  06A9  0875               	movf	SetAnodeOutputs@sign,w
  8997  06AA  00F4               	movwf	??_SetAnodeOutputs
  8998  06AB  3001               	movlw	1
  8999  06AC                     u247_25:	
  9000  06AC  1003               	clrc
  9001  06AD  0CF4               	rrf	??_SetAnodeOutputs,f
  9002  06AE  3EFF               	addlw	-1
  9003  06AF  1D03               	skipz
  9004  06B0  2EAC               	goto	u247_25
  9005  06B1  1C74               	btfss	??_SetAnodeOutputs,0
  9006  06B2  2EB4               	goto	u248_21
  9007  06B3  2EB5               	goto	u248_20
  9008  06B4                     u248_21:	
  9009  06B4  2EB7               	goto	i1l490
  9010  06B5                     u248_20:	
  9011  06B5                     i1l3117:	
  9012                           
  9013                           ;display-7-segment.c: 205:     {;display-7-segment.c: 206:         PORTAbits.RA1=1;
  9014  06B5  1485               	bsf	5,1	;volatile
  9015                           
  9016                           ;display-7-segment.c: 207:     }else
  9017  06B6  2EB8               	goto	i1l3119
  9018  06B7                     i1l490:	
  9019                           
  9020                           ;display-7-segment.c: 208:     {;display-7-segment.c: 209:         PORTAbits.RA1=0;
  9021  06B7  1085               	bcf	5,1	;volatile
  9022  06B8                     i1l3119:	
  9023                           
  9024                           ;display-7-segment.c: 212:     if(decimal_point==1)
  9025  06B8  0373               	decf	SetAnodeOutputs@decimal_point,w
  9026  06B9  1D03               	btfss	3,2
  9027  06BA  2EBC               	goto	u249_21
  9028  06BB  2EBD               	goto	u249_20
  9029  06BC                     u249_21:	
  9030  06BC  2EBF               	goto	i1l492
  9031  06BD                     u249_20:	
  9032  06BD                     i1l3121:	
  9033                           
  9034                           ;display-7-segment.c: 213:     {;display-7-segment.c: 214:         PORTAbits.RA0=1;
  9035  06BD  1405               	bsf	5,0	;volatile
  9036                           
  9037                           ;display-7-segment.c: 215:     }else
  9038  06BE  2EC0               	goto	i1l494
  9039  06BF                     i1l492:	
  9040                           
  9041                           ;display-7-segment.c: 216:     {;display-7-segment.c: 217:         PORTAbits.RA0=0;
  9042  06BF  1005               	bcf	5,0	;volatile
  9043  06C0                     i1l494:	
  9044  06C0  0008               	return
  9045  06C1                     __end_of_SetAnodeOutputs:	
  9046                           
  9047                           	psect	text49
  9048  09FC                     __ptext49:	
  9049 ;; *************** function _DisableAllDigits *****************
  9050 ;; Defined at:
  9051 ;;		line 78 in file "display-7-segment.c"
  9052 ;; Parameters:    Size  Location     Type
  9053 ;;		None
  9054 ;; Auto vars:     Size  Location     Type
  9055 ;;		None
  9056 ;; Return value:  Size  Location     Type
  9057 ;;                  1    wreg      void 
  9058 ;; Registers used:
  9059 ;;		None
  9060 ;; Tracked objects:
  9061 ;;		On entry : 0/0
  9062 ;;		On exit  : 0/0
  9063 ;;		Unchanged: 0/0
  9064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9065 ;;      Params:         0       0       0       0       0
  9066 ;;      Locals:         0       0       0       0       0
  9067 ;;      Temps:          0       0       0       0       0
  9068 ;;      Totals:         0       0       0       0       0
  9069 ;;Total ram usage:        0 bytes
  9070 ;; Hardware stack levels used:    1
  9071 ;; This function calls:
  9072 ;;		Nothing
  9073 ;; This function is called by:
  9074 ;;		_OneDigitHandler
  9075 ;; This function uses a non-reentrant model
  9076 ;;
  9077                           
  9078                           
  9079                           ;psect for function _DisableAllDigits
  9080  09FC                     _DisableAllDigits:	
  9081  09FC                     i1l3089:	
  9082                           ;incstack = 0
  9083 ;; hardware stack exceeded
  9084                           ; Regs used in _DisableAllDigits: []
  9085                           
  9086                           
  9087                           ;display-7-segment.c: 80:     PORTBbits.RB7=1;
  9088  09FC  1283               	bcf	3,5	;RP0=0, select bank0
  9089  09FD  1303               	bcf	3,6	;RP1=0, select bank0
  9090  09FE  1786               	bsf	6,7	;volatile
  9091                           
  9092                           ;display-7-segment.c: 81:     PORTBbits.RB6=1;
  9093  09FF  1706               	bsf	6,6	;volatile
  9094                           
  9095                           ;display-7-segment.c: 82:     PORTBbits.RB5=1;
  9096  0A00  1686               	bsf	6,5	;volatile
  9097                           
  9098                           ;display-7-segment.c: 83:     PORTBbits.RB4=1;
  9099  0A01  1606               	bsf	6,4	;volatile
  9100  0A02                     i1l446:	
  9101  0A02  0008               	return
  9102  0A03                     __end_of_DisableAllDigits:	
  9103  000C                     
  9104                           	psect	functab
  9105  002E                     __pfunctab:	
  9106  002E                     __fptable:	
  9107  002E                     fptable:	
  9108  002E  00FF               	movwf	(btemp+1)& (0+127)
  9109  002F  3000               	movlw	high fptable
  9110  0030  008A               	movwf	10
  9111  0031  087F               	movf	(btemp+1)& (0+127),w
  9112  0032  0782               	addwf	2,f
  9113  0033                     fpbase:	
  9114  0033  2833               	goto	fpbase	; Call via a null pointer and you will get stuck here.
  9115  0034                     fp__Up_Button_Short:	
  9116  0034  120A  158A  29F8   	ljmp	_Up_Button_Short
  9117  0037                     fp__Set_RTC_Button_Short:	
  9118  0037  120A  158A  2C6B   	ljmp	_Set_RTC_Button_Short
  9119  003A                     fp__Set_Time1_Button_Short:	
  9120  003A  120A  158A  29F9   	ljmp	_Set_Time1_Button_Short
  9121  003D                     fp__Set_Time2_Button_Short:	
  9122  003D  120A  158A  29FA   	ljmp	_Set_Time2_Button_Short
  9123  0040                     fp__Right_Button_Short:	
  9124  0040  120A  158A  29FB   	ljmp	_Right_Button_Short
  9125  0043                     fp__Down_Button_Short:	
  9126  0043  120A  118A  2803   	ljmp	_Down_Button_Short
  9127  0046                     __end_of__fptable:	
  9128  007E                     btemp	set	126	;btemp
  9129  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    35
    Data        1
    BSS         98
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     41      69
    BANK1            80      0      72
    BANK3            96     11      11
    BANK2            96      0       0

Pointer List with Targets:

    Button_Handler@keydef.button_long_function	PTR FTN()void  size(1) Largest target is 0
		 -> Absolute function(), 

    Button_Handler@keydef.button_short_function	PTR FTN()void  size(1) Largest target is 0
		 -> Down_Button_Short(), Up_Button_Short(), Right_Button_Short(), Set_Time2_Button_Short(), 
		 -> Set_Time1_Button_Short(), Set_RTC_Button_Short(), 

    Button_Handler@keydef.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), PORTB(SFR0[1]), 

    Button_Init@keydef.button_long_function	PTR FTN()void  size(1) Largest target is 0
		 -> Absolute function(), 

    Button_Init@keydef.button_short_function	PTR FTN()void  size(1) Largest target is 0
		 -> Down_Button_Short(), Up_Button_Short(), Right_Button_Short(), Set_Time2_Button_Short(), 
		 -> Set_Time1_Button_Short(), Set_RTC_Button_Short(), 

    Button_Init@keydef.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), PORTB(SFR0[1]), 

    Button_Handler@keydef.set_down	PTR struct . size(1) Largest target is 7
		 -> Button_Init@set_down(BANK1[7]), 

    Button_Handler@keydef.set_up	PTR struct . size(1) Largest target is 7
		 -> Button_Init@set_up(BANK1[7]), 

    Button_Handler@keydef.set_right	PTR struct . size(1) Largest target is 7
		 -> Button_Init@set_right(BANK1[7]), 

    Button_Handler@keydef.set_time2	PTR struct . size(1) Largest target is 7
		 -> Button_Init@set_time2(BANK1[7]), 

    Button_Handler@keydef.set_time1	PTR struct . size(1) Largest target is 7
		 -> Button_Init@set_time1(BANK1[7]), 

    Button_Handler@keydef.set_rtc	PTR struct . size(1) Largest target is 7
		 -> Button_Init@set_rtc(BANK1[7]), 

    Button_Handler@keydef	PTR struct . size(1) Largest target is 12
		 -> main@keydef(BANK3[6]), 

    Button_Init@keydef.set_down.button_long_function	PTR FTN()void  size(1) Largest target is 1
		 -> Absolute function(), 

    Button_Init@keydef.set_down.button_short_function	PTR FTN()void  size(1) Largest target is 1
		 -> Down_Button_Short(), Up_Button_Short(), Right_Button_Short(), Set_Time2_Button_Short(), 
		 -> Set_Time1_Button_Short(), Set_RTC_Button_Short(), 

    Button_Init@keydef.set_down.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), PORTB(SFR0[1]), 

    Button_Init@keydef.set_up.button_long_function	PTR FTN()void  size(1) Largest target is 1
		 -> Absolute function(), 

    Button_Init@keydef.set_up.button_short_function	PTR FTN()void  size(1) Largest target is 1
		 -> Down_Button_Short(), Up_Button_Short(), Right_Button_Short(), Set_Time2_Button_Short(), 
		 -> Set_Time1_Button_Short(), Set_RTC_Button_Short(), 

    Button_Init@keydef.set_up.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), PORTB(SFR0[1]), 

    Button_Init@keydef.set_right.button_long_function	PTR FTN()void  size(1) Largest target is 1
		 -> Absolute function(), 

    Button_Init@keydef.set_right.button_short_function	PTR FTN()void  size(1) Largest target is 1
		 -> Down_Button_Short(), Up_Button_Short(), Right_Button_Short(), Set_Time2_Button_Short(), 
		 -> Set_Time1_Button_Short(), Set_RTC_Button_Short(), 

    Button_Init@keydef.set_right.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), PORTB(SFR0[1]), 

    Button_Init@keydef.set_time2.button_long_function	PTR FTN()void  size(1) Largest target is 1
		 -> Absolute function(), 

    Button_Init@keydef.set_time2.button_short_function	PTR FTN()void  size(1) Largest target is 1
		 -> Down_Button_Short(), Up_Button_Short(), Right_Button_Short(), Set_Time2_Button_Short(), 
		 -> Set_Time1_Button_Short(), Set_RTC_Button_Short(), 

    Button_Init@keydef.set_time2.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), PORTB(SFR0[1]), 

    Button_Init@keydef.set_time1.button_long_function	PTR FTN()void  size(1) Largest target is 1
		 -> Absolute function(), 

    Button_Init@keydef.set_time1.button_short_function	PTR FTN()void  size(1) Largest target is 1
		 -> Down_Button_Short(), Up_Button_Short(), Right_Button_Short(), Set_Time2_Button_Short(), 
		 -> Set_Time1_Button_Short(), Set_RTC_Button_Short(), 

    Button_Init@keydef.set_time1.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), PORTB(SFR0[1]), 

    Button_Init@keydef.set_rtc.button_long_function	PTR FTN()void  size(1) Largest target is 1
		 -> Absolute function(), 

    Button_Init@keydef.set_rtc.button_short_function	PTR FTN()void  size(1) Largest target is 1
		 -> Down_Button_Short(), Up_Button_Short(), Right_Button_Short(), Set_Time2_Button_Short(), 
		 -> Set_Time1_Button_Short(), Set_RTC_Button_Short(), 

    Button_Init@keydef.set_rtc.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), PORTB(SFR0[1]), 

    Button_Init@keydef.set_down	PTR struct . size(1) Largest target is 7
		 -> Button_Init@set_down(BANK1[7]), 

    Button_Init@keydef.set_up	PTR struct . size(1) Largest target is 7
		 -> Button_Init@set_up(BANK1[7]), 

    Button_Init@keydef.set_right	PTR struct . size(1) Largest target is 7
		 -> Button_Init@set_right(BANK1[7]), 

    Button_Init@keydef.set_time2	PTR struct . size(1) Largest target is 7
		 -> Button_Init@set_time2(BANK1[7]), 

    Button_Init@keydef.set_time1	PTR struct . size(1) Largest target is 7
		 -> Button_Init@set_time1(BANK1[7]), 

    Button_Init@keydef.set_rtc	PTR struct . size(1) Largest target is 7
		 -> Button_Init@set_rtc(BANK1[7]), 

    Button_Init@keydef	PTR struct . size(1) Largest target is 12
		 -> main@keydef(BANK3[6]), 

    F1273.button_long_function	PTR FTN()void  size(1) Largest target is 1
		 -> Absolute function(), 

    F1273.button_short_function	PTR FTN()void  size(1) Largest target is 1
		 -> Down_Button_Short(), Up_Button_Short(), Right_Button_Short(), Set_Time2_Button_Short(), 
		 -> Set_Time1_Button_Short(), Set_RTC_Button_Short(), 

    F1273.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), PORTB(SFR0[1]), 

    F1272.button_long_function	PTR FTN()void  size(1) Largest target is 1
		 -> Absolute function(), 

    F1272.button_short_function	PTR FTN()void  size(1) Largest target is 1
		 -> Down_Button_Short(), Up_Button_Short(), Right_Button_Short(), Set_Time2_Button_Short(), 
		 -> Set_Time1_Button_Short(), Set_RTC_Button_Short(), 

    F1272.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), PORTB(SFR0[1]), 

    F1271.button_long_function	PTR FTN()void  size(1) Largest target is 1
		 -> Absolute function(), 

    F1271.button_short_function	PTR FTN()void  size(1) Largest target is 1
		 -> Down_Button_Short(), Up_Button_Short(), Right_Button_Short(), Set_Time2_Button_Short(), 
		 -> Set_Time1_Button_Short(), Set_RTC_Button_Short(), 

    F1271.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), PORTB(SFR0[1]), 

    F1270.button_long_function	PTR FTN()void  size(1) Largest target is 1
		 -> Absolute function(), 

    F1270.button_short_function	PTR FTN()void  size(1) Largest target is 1
		 -> Down_Button_Short(), Up_Button_Short(), Right_Button_Short(), Set_Time2_Button_Short(), 
		 -> Set_Time1_Button_Short(), Set_RTC_Button_Short(), 

    F1270.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), PORTB(SFR0[1]), 

    F1269.button_long_function	PTR FTN()void  size(1) Largest target is 1
		 -> Absolute function(), 

    F1269.button_short_function	PTR FTN()void  size(1) Largest target is 1
		 -> Down_Button_Short(), Up_Button_Short(), Right_Button_Short(), Set_Time2_Button_Short(), 
		 -> Set_Time1_Button_Short(), Set_RTC_Button_Short(), 

    F1269.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), PORTB(SFR0[1]), 

    F1268.button_long_function	PTR FTN()void  size(1) Largest target is 1
		 -> Absolute function(), 

    F1268.button_short_function	PTR FTN()void  size(1) Largest target is 1
		 -> Down_Button_Short(), Up_Button_Short(), Right_Button_Short(), Set_Time2_Button_Short(), 
		 -> Set_Time1_Button_Short(), Set_RTC_Button_Short(), 

    F1268.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), PORTB(SFR0[1]), 

    S447$button_long_function	PTR FTN()void  size(1) Largest target is 1
		 -> Absolute function(), 

    Key_Press@button.button_long_function	PTR FTN()void  size(1) Largest target is 1
		 -> Absolute function(), 

    S447$button_short_function	PTR FTN()void  size(1) Largest target is 1
		 -> Down_Button_Short(), Up_Button_Short(), Right_Button_Short(), Set_Time2_Button_Short(), 
		 -> Set_Time1_Button_Short(), Set_RTC_Button_Short(), 

    Key_Press@button.button_short_function	PTR FTN()void  size(1) Largest target is 1
		 -> Down_Button_Short(), Up_Button_Short(), Right_Button_Short(), Set_Time2_Button_Short(), 
		 -> Set_Time1_Button_Short(), Set_RTC_Button_Short(), 

    S447$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), PORTB(SFR0[1]), 

    Key_Press@button.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), PORTB(SFR0[1]), 

    Key_Press@button	PTR struct . size(1) Largest target is 7
		 -> Button_Init@set_down(BANK1[7]), Button_Init@set_up(BANK1[7]), Button_Init@set_right(BANK1[7]), Button_Init@set_time2(BANK1[7]), 
		 -> Button_Init@set_time1(BANK1[7]), Button_Init@set_rtc(BANK1[7]), 

    PCF8583_Read_Time_Date@time_struct_ptr	PTR struct . size(1) Largest target is 6
		 -> Set_RTC_Button_Short@time(BANK0[6]), 

    Display7SegmentText@text	PTR unsigned char  size(1) Largest target is 4
		 -> g_display_text(BANK0[4]), 

    ProcessRCVData@DataRCV	PTR struct . size(1) Largest target is 5
		 -> main@DataRCV(BANK3[5]), 

    CheckEvent@DataRCV	PTR struct . size(1) Largest target is 5
		 -> main@DataRCV(BANK3[5]), 

    CRC_check@DataRCV	PTR struct . size(1) Largest target is 5
		 -> main@DataRCV(BANK3[5]), 

    FrameDecode@DataRCV	PTR struct . size(1) Largest target is 5
		 -> main@DataRCV(BANK3[5]), 

    ManchesterDecode@edge_dir	PTR unsigned char  size(1) Largest target is 1
		 -> ISR@edge_dir(BANK0[1]), 

    ManchesterDecode@pulse_time	PTR unsigned int  size(1) Largest target is 2
		 -> ISR@PulseTime(BANK0[2]), 

    S454$set_down	PTR struct . size(1) Largest target is 7
		 -> Button_Init@set_down(BANK1[7]), 

    keydef.set_down	PTR struct . size(1) Largest target is 7
		 -> Button_Init@set_down(BANK1[7]), 

    S454$set_up	PTR struct . size(1) Largest target is 7
		 -> Button_Init@set_up(BANK1[7]), 

    keydef.set_up	PTR struct . size(1) Largest target is 7
		 -> Button_Init@set_up(BANK1[7]), 

    S454$set_right	PTR struct . size(1) Largest target is 7
		 -> Button_Init@set_right(BANK1[7]), 

    keydef.set_right	PTR struct . size(1) Largest target is 7
		 -> Button_Init@set_right(BANK1[7]), 

    S454$set_time2	PTR struct . size(1) Largest target is 7
		 -> Button_Init@set_time2(BANK1[7]), 

    keydef.set_time2	PTR struct . size(1) Largest target is 7
		 -> Button_Init@set_time2(BANK1[7]), 

    S454$set_time1	PTR struct . size(1) Largest target is 7
		 -> Button_Init@set_time1(BANK1[7]), 

    keydef.set_time1	PTR struct . size(1) Largest target is 7
		 -> Button_Init@set_time1(BANK1[7]), 

    S454$set_rtc	PTR struct . size(1) Largest target is 7
		 -> Button_Init@set_rtc(BANK1[7]), 

    keydef.set_rtc	PTR struct . size(1) Largest target is 7
		 -> Button_Init@set_rtc(BANK1[7]), 

    CRC16@data_tab_ptr	PTR unsigned char  size(1) Largest target is 5
		 -> main@DataRCV(BANK3[5]), 

    FrameBuffer@data	PTR unsigned char  size(1) Largest target is 1
		 -> FrameDecode@data(BANK0[1]), ManchesterDecode@decoded_byte(BANK0[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_Display7SegmentText
    _ManchesterDecode->i1_FrameBuffer
    _Display7SegmentText->_OneDigitHandler
    _OneDigitHandler->_SetAnodeOutputs
    _SetAnodeOutputs->_SignAnodeData

Critical Paths under _main in BANK0

    _main->_Button_Handler
    _ProcessRCVData->_CheckEvent
    _CheckEvent->_PlayRing
    _PlayRing->_GeneratePWM
    _Wait_ms->___lmul
    _GeneratePWM->___lldiv
    _FrameDecode->_FrameBuffer
    _CRC_check->_CRC16
    _Button_Handler->_Key_Press
    _Key_Press->_Set_RTC_Button_Short
    _Set_RTC_Button_Short->_PCF8583_Read_Time_Date
    _PCF8583_Read_Time_Date->_PCF8583_Read_Byte
    _PCF8583_Write_Byte->_I2C_Master_Write
    _PCF8583_Read_Byte->_I2C_Master_Read
    _BCD_2_DEC->___bmul
    _Display_2Dig->___awdiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                18    18      0   11629
                                             40 BANK0      1     1      0
                                              0 BANK3     11    11      0
                     _Button_Handler
                        _Button_Init
                       _Global_Inits
                           _Init_I2C
                    _InterruptConfig
                     _ProcessRCVData
                          _UART_Init
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ProcessRCVData                                       1     1      0    4812
                                             34 BANK0      1     1      0
                          _CRC_check
                         _CheckEvent
                        _FrameDecode
                           _SendUART
 ---------------------------------------------------------------------------------
 (2) _CheckEvent                                           1     1      0    2923
                                             33 BANK0      1     1      0
                        _FrameDecode
                           _PlayRing
                           _SendUART
 ---------------------------------------------------------------------------------
 (3) _PlayRing                                             6     6      0    1533
                                             28 BANK0      5     5      0
                        _GeneratePWM
                   _Init_CaptureMode
                   _Init_CompareMode
                            _Wait_ms
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     421
                                              6 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (4) _Wait_ms                                              6     4      2     437
                                             19 BANK0      6     4      2
                             ___lmul
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              13     5      8     316
                                              6 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (4) _Init_CompareMode                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Init_CaptureMode                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _GeneratePWM                                          8     4      4     542
                                             20 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             14     6      8     421
                                              6 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) _FrameDecode                                          8     6      2    1044
                                              9 BANK0      7     5      2
                        _FrameBuffer
 ---------------------------------------------------------------------------------
 (3) _FrameBuffer                                          3     2      1     436
                                              6 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) _CRC_check                                            7     7      0     623
                                             16 BANK0      7     7      0
                              _CRC16
 ---------------------------------------------------------------------------------
 (3) _CRC16                                               10     8      2     429
                                              6 BANK0     10     8      2
 ---------------------------------------------------------------------------------
 (1) _InterruptConfig                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_I2C                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Global_Inits                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Button_Init                                          2     2      0     222
                                              6 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _Button_Handler                                       1     1      0    6394
                                             39 BANK0      1     1      0
                          _Key_Press
 ---------------------------------------------------------------------------------
 (2) _Key_Press                                            5     5      0    6172
                                             34 BANK0      5     5      0
                  _Down_Button_Short *
                 _Right_Button_Short *
                           _SendUART
               _Set_RTC_Button_Short *
             _Set_Time1_Button_Short *
             _Set_Time2_Button_Short *
                    _Up_Button_Short *
 ---------------------------------------------------------------------------------
 (3) _Up_Button_Short                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Set_Time2_Button_Short                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Set_Time1_Button_Short                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Set_RTC_Button_Short                                 9     9      0    5460
                                             25 BANK0      9     9      0
                       _Display_2Dig
             _PCF8583_Read_Time_Date
                           _SendUART
 ---------------------------------------------------------------------------------
 (2) _SendUART                                             1     1      0      31
                                              6 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _PCF8583_Read_Time_Date                              10    10      0    3714
                                             15 BANK0     10    10      0
                          _BCD_2_DEC
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                  _PCF8583_Read_Byte
                 _PCF8583_Write_Byte
 ---------------------------------------------------------------------------------
 (5) _PCF8583_Write_Byte                                   4     3      1     993
                                              8 BANK0      4     3      1
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (5) _PCF8583_Read_Byte                                    4     4      0     971
                                             11 BANK0      4     4      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Write                                     2     0      2     841
                                              6 BANK0      2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Read                                      5     5      0      65
                                              6 BANK0      5     5      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (7) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _BCD_2_DEC                                            4     4      0     288
                                             10 BANK0      4     4      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (6) ___bmul                                               4     3      1     226
                                              6 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (4) _Display_2Dig                                         4     4      0    1580
                                             15 BANK0      4     4      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              7     3      4     753
                                              6 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              9     5      4     765
                                              6 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (3) _Right_Button_Short                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Down_Button_Short                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _ISR                                                  6     6      0    2381
                                              0 BANK0      6     6      0
                _Display7SegmentText
                   _ManchesterDecode
 ---------------------------------------------------------------------------------
 (9) _ManchesterDecode                                     6     5      1     421
                                              3 COMMON     6     5      1
                      i1_FrameBuffer
 ---------------------------------------------------------------------------------
 (10) i1_FrameBuffer                                       3     2      1      92
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (9) _Display7SegmentText                                  3     2      1    1929
                                             11 COMMON     3     2      1
                    _OneDigitHandler
 ---------------------------------------------------------------------------------
 (10) _OneDigitHandler                                     5     3      2    1556
                                              6 COMMON     5     3      2
                   _DisableAllDigits
                    _SetAnodeOutputs
                      _SignAnodeData
 ---------------------------------------------------------------------------------
 (11) _SignAnodeData                                       3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (11) _SetAnodeOutputs                                     3     2      1     252
                                              3 COMMON     3     2      1
                      _SignAnodeData (ARG)
 ---------------------------------------------------------------------------------
 (11) _DisableAllDigits                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Button_Handler
     _Key_Press
       _Down_Button_Short *
       _Right_Button_Short *
       _SendUART *
       _Set_RTC_Button_Short *
         _Display_2Dig
           ___awdiv
           ___awmod
         _PCF8583_Read_Time_Date
           _BCD_2_DEC
             ___bmul
           _I2C_Master_Read
             _I2C_Master_Wait
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
           _PCF8583_Read_Byte
             _I2C_Master_Read
               _I2C_Master_Wait
             _I2C_Master_Start
               _I2C_Master_Wait
             _I2C_Master_Stop
               _I2C_Master_Wait
             _I2C_Master_Write
               _I2C_Master_Wait
           _PCF8583_Write_Byte
             _I2C_Master_Start
               _I2C_Master_Wait
             _I2C_Master_Stop
               _I2C_Master_Wait
             _I2C_Master_Write
               _I2C_Master_Wait
         _SendUART
       _Set_Time1_Button_Short *
       _Set_Time2_Button_Short *
       _Up_Button_Short *
   _Button_Init
   _Global_Inits
   _Init_I2C
   _InterruptConfig
   _ProcessRCVData
     _CRC_check
       _CRC16
     _CheckEvent
       _FrameDecode
         _FrameBuffer
       _PlayRing
         _GeneratePWM
           ___lldiv
         _Init_CaptureMode
         _Init_CompareMode
         _Wait_ms
           ___lmul
           ___lwdiv (ARG)
         ___lwdiv
       _SendUART
     _FrameDecode
       _FrameBuffer
     _SendUART
   _UART_Init

 _ISR (ROOT)
   _Display7SegmentText
     _OneDigitHandler
       _DisableAllDigits
       _SetAnodeOutputs
         _SignAnodeData (ARG)
       _SignAnodeData
   _ManchesterDecode
     i1_FrameBuffer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      B       B       9       11.5%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      48       7       90.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     29      45       5       86.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      A6      12        0.0%
ABS                  0      0      A6       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Apr 23 09:08:11 2020

                        ??_FrameBuffer 0027                                      pc 0002  
                       ___bmul@product 0028                            __CFG_CP$OFF 0000  
                          _SSPSTATbits 0094                                     l30 0E57  
                                   l14 0EEF                                     l25 0E26  
                                   l51 0A34                                     l45 0A50  
                                   l48 0A2A                           ___awdiv@sign 002C  
                                   fsr 0004                 ??_Set_RTC_Button_Short 0039  
             __size_of_OneDigitHandler 003D                                    l108 0AF8  
                                  l321 060F                                    l155 0A85  
                                  l308 0D37                                    l341 0F45  
                                  l318 0649                                    l512 0AD3  
                                  l521 0BEF                                    l530 025E  
                                  l291 06C4                                    l524 0CF2  
                                  l293 072D                                    l373 0BBA  
                                  l382 0A61                                    l631 0477  
                                  l616 05BC                                    l376 0B27  
                                  l561 0AB7                                    l570 0A26  
                                  l634 0DC5                                    l394 0FFF  
                                  l555 0A42                                    l379 0A72  
                                  l564 0A13                                    l573 0B87  
                                  l558 0A9D                                    l662 0CAD  
                                  l567 0A1C                                    l671 0003  
                                  l665 09F9                                    l674 09F8  
                                  l659 0B57                                    l916 0796  
                                  l668 09FA                                    l677 09FB  
                                  l929 0FA0                                    l777 0E0D  
                                  l789 0A9C                                    l799 07FE  
                         __CFG_CPD$OFF 0000                                    _ISR 0478  
                                  fsr0 0004                                    indf 0000  
                         ___awmod@sign 002C                         ??_Global_Inits 0026  
                    ?_Init_CompareMode 0070            __end_ofInit_I2C@k_i2c_clock 081C  
                           _CheckEvent 05BD                           __CFG_LVP$OFF 0000  
                                 ?_ISR 0070            __size_of_PCF8583_Write_Byte 0035  
                     ISR@display_timer 0057                                   l1035 0D7D  
                   ??_Init_CompareMode 0026                                   l4001 0A65  
                                 l4011 0174                                   l4003 0A69  
                                 l4021 01AA                                   l4013 0179  
                                 l4101 0E53                                   l4005 0A51  
                                 l4031 01EB                                   l4023 01B5  
                                 l4015 0184                                   l4111 06D7  
                                 l4007 0A54                                   l4041 0235  
                                 l4033 01F9                                   l4025 01C0  
                                 l4017 0194                                   l4121 06E7  
                                 l4113 06DF                                   l4105 06C4  
                                 l4009 0A58                                   l4051 0B2B  
                                 l4043 0241                                   l4035 0209  
                                 l4027 01CB                                   l4019 019F  
                                 l4123 06EB                                   l4107 06D0  
                                 l4211 05DD                                   l4203 05C0  
                                 l4045 0245                                   l4037 0219  
                                 l4029 01DB                                   l4301 0ADD  
                                 l4133 06FF                                   l4125 06F1  
                                 l4061 0D4C                                   l4053 0D38  
                                 l4221 05F7                                   l4213 05ED  
                                 l4205 05C9                                   l4047 024C  
                                 l4039 0229                                   l4311 0AE4  
                                 l4303 0ADE                                   l4135 0707  
                                 l4143 0718                                   l4127 06F2  
                                 l4119 06E0                                   l4071 0D6C  
                                 l4063 0D50                                   l4055 0D3C  
                                 l4151 0FA1                                   l4231 0612  
                                 l4223 05FF                                   l4207 05D1  
                                 l4049 0254                                   l4401 041E  
                                 l4321 0AE9                                   l4313 0AE5  
                                 l4305 0AE1                                   l4081 0E15  
                                 l4145 0722                                   l4137 070D  
                                 l4073 0D73                                   l4065 0D54  
                                 l4057 0D42                                   l4161 0FEE  
                                 l4153 0FA6                                   l4241 0629  
                                 l4225 0605                                   l4209 05D7  
                                 l4171 0C7E                                   l4411 042D  
                                 l4403 041F                                   l4331 0AEE  
                                 l4323 0AEA                                   l4315 0AE6  
                                 l4307 0AE2                                   l4091 0E38  
                                 l4083 0E25                                   l4147 0726  
                                 l4139 0713                                   l4067 0D65  
                                 l4059 0D45                                   l4075 0D79  
                                 l4163 0FF4                                   l4155 0FAC  
                                 l4243 0631                                   l4251 0648  
                                 l4227 060C                                   l4219 05EF  
                                 l4181 0C9E                                   l4173 0C8D  
                                 l4261 0550                                   l4421 043A  
                                 l4413 0435                                   l4405 0420  
                                 l4341 0AF3                                   l4333 0AEF  
                                 l4325 0AEB                                   l4317 0AE7  
                                 l4309 0AE3                                   l4093 0E3F  
                                 l4069 0D6B                                   l4165 0FFA  
                                 l4157 0FAE                                   l4245 0637  
                                 l4229 060D                                   l4183 0CA4  
                                 l4175 0C8E                                   l4167 0C6B  
                                 l4271 058C                                   l4263 0555  
                                 l4255 0523                                   l4431 0449  
                                 l4423 043E                                   l4415 0436  
                                 l4407 0421                                   l4343 0AF4  
                                 l4335 0AF0                                   l4327 0AEC  
                                 l4319 0AE8                                   l4351 0A73  
                                 l4095 0E43                                   l4079 0E11  
                                 l4191 0D1E                                   l4159 0FCA  
                                 l4239 0621                                   l4185 0CAC  
                                 l4177 0C94                                   l4169 0C7D  
                                 l4273 0593                                   l4281 05AA  
                                 l4265 0559                                   l4257 052B  
                                 l4441 045F                                   l4433 0451  
                                 l4425 0446                                   l4417 0437  
                                 l4409 0429                                   l4345 0AF5  
                                 l4337 0AF1                                   l4329 0AED  
                                 l4361 0A80                                   l4353 0A77  
                                 l4097 0E49                                   l4089 0E2A  
                                 l4193 0D34                                   l3811 0BEA  
                                 l3803 0BBE                                   l4179 0C9A  
                                 l4283 05B2                                   l4275 059C  
                                 l4267 0561                                   l4259 054C  
                                 l4451 0475                                   l4443 0460  
                                 l4435 0455                                   l4427 0447  
                                 l4419 0438                                   l4347 0AF6  
                                 l4339 0AF2                                   l4371 0A41  
                                 l4363 0A35                                   l4355 0A79  
                                 l4099 0E4D                                   l4187 0CF6  
                                 l4291 0A4E                                   l3901 0788  
                                 l3821 0CDF                                   l3813 0CB1  
                                 l3805 0BC3                                   l4277 059F  
                                 l4269 056B                                   l4453 0476  
                                 l4445 0468                                   l4437 045D  
                                 l4429 0448                                   l4381 03F1  
                                 l4373 03CF                                   l4349 0AF7  
                                 l4293 0AD4                                   l4365 0A38  
                                 l4357 0A7A                                   l4189 0D06  
                                 l4461 0EFC                                   l3903 078D  
                                 l3911 0F49                                   l3751 0AAB  
                                 l3823 0CEF                                   l3815 0CB6  
                                 l3807 0BCE                                   l4287 05B8  
                                 l4279 05A3                                   l4455 0D81  
                                 l4447 046C                                   l4439 045E  
                                 l4391 0408                                   l4383 03F8  
                                 l4375 03DC                                   l4295 0AD8  
                                 l4367 0A3C                                   l4359 0A7F  
                                 l4199 0D36                                   l3831 0DD4  
                                 l4471 0F1B                                   l4463 0F00  
                                 l3905 0792                                   l3921 0F5D  
                                 l3913 0F4D                                   l3753 0AAF  
                                 l3745 0A9D                                   l3761 0A1D  
                                 l3817 0CC1                                   l3809 0BDC  
                                 l4449 0474                                   l4393 0409  
                                 l4385 03FB                                   l4377 03E3  
                                 l4297 0AD9                                   l4369 0A40  
                                 l3841 0797                                   l3833 0DEB  
                                 l4481 0F44                                   l4457 0EF3  
                                 l4289 0A43                                   l3931 0F75  
                                 l3923 0F63                                   l3915 0F52  
                                 l3755 0AB3                                   l3747 0AA3  
                                 l3771 0B60                                   l3763 0A22  
                                 l3819 0CD4                                   l4395 040A  
                                 l4387 03FF                                   l4379 03EA  
                                 l4299 0ADA                                   l3851 07C6  
                                 l3843 07A9                                   l3835 0DF4  
                                 l3827 0DC6                                   l4475 0F29  
                                 l4467 0F07                                   l4459 0EF8  
                                 l4491 0C4D                                   l4483 0C2D  
                                 l3941 0F97                                   l3933 0F7F  
                                 l3925 0F66                                   l3917 0F54  
                                 l3909 0F46                                   l3749 0AA7  
                                 l3781 0B84                                   l3773 0B68  
                                 l3757 0A0B                                   l3765 0A14  
                                 l4397 0412                                   l4389 0407  
                                 l3853 07D8                                   l3845 07AC  
                                 l3861 07F6                                   l3837 0E05  
                                 l3829 0DD0                                   l4477 0F2F  
                                 l4469 0F10                                   l4493 0C51  
                                 l4485 0C41                                   l3871 073A  
                                 l3943 0F9C                                   l3935 0F85  
                                 l3927 0F6D                                   l3919 0F58  
                                 l3791 0A92                                   l3775 0B71  
                                 l3759 0A10                                   l3767 0A19  
                                 l4399 0416                                   l3951 0EAF  
                                 l3855 07E6                                   l3847 07B9  
                                 l4479 0F36                                   l4495 0C55  
                                 l4487 0C45                                   l3881 074B  
                                 l3873 073C                                   l3865 072E  
                                 l3937 0F8C                                   l3929 0F71  
                                 l3793 0A94                                   l3785 0A89  
                                 l3777 0B76                                   l3769 0B5B  
                                 l3953 0EB3                                   l3857 07E7  
                                 l3849 07BD                                   l4497 0C5B  
                                 l4489 0C49                                   l3891 0763  
                                 l3883 0751                                   l3875 0740  
                                 l3867 0731                                   l3939 0F92  
                                 l3795 0A9B                                   l3787 0A8A  
                                 l3779 0B83                                   l3963 0EC6  
                                 l3955 0EB9                                   l3971 0ED2  
                                 l3947 0EA6                                   l3859 07F0  
                                 l4499 0C61                                   l3893 0774  
                                 l3885 0754                                   l3877 0745  
                                 l3869 0735                                   l3789 0A8E  
                                 l3973 0ED8                                   l3965 0ED0  
                                 l3957 0EBA                                   l3949 0EAB  
                                 l3895 077A                                   l3887 075B  
                                 l3879 0749                                   l3799 0ABB  
                                 l3991 0A30                                   l3975 0EE2  
                                 l3959 0EC0                                   l3897 077B  
                                 l3889 075F                                   l3977 0EE3  
                                 l3985 0EEE                                   l3993 0B88  
                                 l3899 0782                                   l3995 0BB4  
                                 l3989 0A2A                                   l3997 0AF9  
                                 l3999 0A62                       _DisableAllDigits 09FC  
              ManchesterDecode@bit_pos 0056                                   u4000 05D1  
                                 u4001 05D0                                   u4010 05ED  
                                 u4011 05EC                                   u3300 0AB7  
                                 u4020 05F7                                   u3301 0AB6  
                                 u4021 05F6                                   u3310 0B80  
                                 u4110 054C                                   u4030 05FF  
                                 u3311 0B7C                                   u4111 054B  
                                 u4031 05FE                                   u4120 0561  
                                 u4104 0543                                   u3400 0E05  
                                 u4040 060C                                   u4200 0EFC  
                                 u4121 0560                                   u4105 0541  
                                 u3401 0E04                                   u4041 060B  
                                 u4201 0EFB                                   u3330 0A8E  
                                 u3250 0AA3                                   u3410 07A9  
                                 u4050 0620                                   u4210 0F06  
                                 u3331 0A8D                                   u3251 0AA2  
                                 u3411 07A8                                   u4051 061F  
                                 u4211 0F05                                   u3500 0751  
                                 u3340 0A9B                                   u3260 0AA7  
                                 u3324 0B83                                   u4140 058C  
                                 u4060 0629                                   u4220 0F10  
                                 u3501 0750                                   u3341 0A9A  
                                 u3261 0AA6                                   u4141 058B  
                                 u4061 0628                                   u4221 0F0F  
                                 u3270 0AAB                                   u4150 0593  
                                 u4134 0583                                   u3430 07BD  
                                 u4070 0631                                   u4230 0F1B  
                                 u3271 0AAA                                   u4151 0592  
                                 u4135 0581                                   u3431 07BC  
                                 u4071 0630                                   u4231 0F1A  
                                 u3520 0763                                   u3600 0F63  
                                 u3280 0AAF                                   u4160 059C  
                                 u3360 0DD4                                   u4080 0647  
                                 u4240 0F28                                   u3521 0762  
                                 u3601 0F62                                   u3281 0AAE  
                                 u4161 059B                                   u3425 07AE  
                                 u3361 0DD3                                   u4081 0646  
                                 u4241 0F27                                   u3290 0AB3  
                                 u4170 05B2                                   u4090 052B  
                                 u3450 07D8                                   u4250 0F44  
                                 u3515 0755                                   u3355 0AC5  
                                 u3291 0AB2                                   u4171 05B1  
                                 u4091 052A                                   u3451 07D7  
                                 u3371 0DDD                                   u4251 0F43  
                                 u3540 0774                                   u3620 0F75  
                                 u4180 05B8                                   u3700 0ED8  
                                 u3372 0DE4                                   u3541 0773  
                                 u3621 0F74                                   u4181 05B7  
                                 u3701 0ED7                                   u3445 07BF  
                                 u3373 0DEB                                   u3630 0F7F  
                                 u3710 0EE2                                   u3470 07F6  
                                 u4190 0EF8                                   u3535 0764  
                                 u3631 0F7E                                   u3615 0F67  
                                 u3711 0EE1                                   u3471 07F5  
                                 u3455 07D4                                   u4191 0EF7  
                                 u3560 0788                                   u3480 0735  
                                 u3720 0A30                                   u3800 0D54  
                                 u3561 0787                                   u3545 0770  
                                 u3481 0734                                   u3721 0A2F  
                                 u3465 07E8                                   u3385 0DED  
                                 u3801 0D53                                   u3570 078D  
                                 u3490 0740                                   u3650 0F92  
                                 u3730 0BAD                                   u3571 078C  
                                 u3555 077C                                   u3491 073F  
                                 u3651 0F91                                   u3635 0F7B  
                                 u4267 0C86                                   u3395 0DF5  
                                 u3660 0F97                                   u3580 0F4D  
                                 u3900 06DF                                   u3740 0BBA  
                                 u3820 0D65                                   u3661 0F96  
                                 u3645 0F86                                   u3581 0F4C  
                                 u3901 06DE                                   u3741 0BB9  
                                 u3821 0D64                                   i1l14 0EA2  
                                 u3590 0F58                                   u3670 0EAB  
                                 u3910 06F1                                   u3750 0B09  
                                 u3591 0F57                                   u3671 0EAA  
                                 u3911 06F0                                   u3735 0BA8  
                                 u3815 0D55                                   u3680 0EB9  
                                 u3920 06FE                                   u3840 0D79  
                                 u3681 0EB8                                   u3921 06FD  
                                 u3841 0D78                                   u3825 0D61  
                                 u3770 024C                                   u3850 0E2A  
                                 u3690 0EC0                                   u3930 0707  
                        PlayRing@beats 0820                                   u3771 024B  
                                 u3851 0E29                                   u3691 0EBF  
                                 u3931 0706                                   u3755 0B04  
                                 u3835 0D6D                                   u3940 070D  
                                 u3780 0D42                                   _RCEN 048B  
                                 u3765 022C                                   u3941 070C  
                                 u3781 0D41                                   u3870 0E49  
                                 u3950 072C                                   u3871 0E48  
                                 u3951 072B                                   u3880 0E53  
                                 u3960 0FFA                                   u3881 0E52  
                                 u3865 0E39                                   u3961 0FF9  
                                 u3970 0D1E                                   u3890 06D0  
                                 u3971 0D1D                                   u3891 06CF  
                                 u3795 0D46                                   u3980 0D34  
                                 u3981 0D33                                   u3990 05C9  
                                 u3975 0D1A                                   u3991 05C8  
                                 u3985 0D30                                   _TMR1 000E  
                        PlayRing@diode 0070                                   _TRMT 04C1  
                         __CFG_WRT$OFF 0000                          PlayRing@tempo 081C  
           __end_of_Right_Button_Short 09FC                                   _main 0C2D  
                   __size_of_CRC_check 0045              PCF8583_Write_Byte@address 002B  
                                 btemp 007E                                   start 0010  
                        __CFG_IESO$OFF 0000                    __end_of_GeneratePWM 0B28  
                    CRC16@data_tab_ptr 002B                      ___bmul@multiplier 0029  
                        __CFG_MCLRE$ON 0000                      ??_SetAnodeOutputs 0074  
              __size_of_Button_Handler 0048                                  ??_ISR 0020  
                     ?_I2C_Master_Read 0070                       ?_I2C_Master_Wait 0070  
                      __end_of_Wait_ms 0BBB               ManchesterDecode@edge_dir 0078  
                     ?_I2C_Master_Stop 0070                          ??_Button_Init 0026  
                  __end_of_FrameDecode 072E                                  ?_main 0070  
                                _ACKEN 048C                                  _ACKDT 048D  
                      __end_of___awdiv 0797                                  _CCPR1 0015  
                                _CRC16 0E0E                          __CFG_WDTE$OFF 0000  
                      __end_of___awmod 0FA1                                  _ANSEL 0188  
                      __end_of___lldiv 07FF                        ___awdiv@divisor 0026  
                  __end_of_FrameBuffer 0EF0                        __end_of___lwdiv 0D7E  
                                i1l181 048C                                  i1l407 03CB  
                                i1l183 04A4                                  i1l192 0516  
                                i1l283 0140                                  i1l269 0170  
                                i1l446 0A02                                  i1l470 0C06  
                                i1l278 00EE                                  i1l480 066C  
                                i1l472 0C0A                                  i1l473 0C0E  
                                i1l490 06B7                                  i1l482 067B  
                                i1l474 0C12                                  i1l458 031C  
                                i1l466 031C                                  i1l475 0C2C  
                                i1l492 06BF                                  i1l484 068A  
                                i1l494 06C0                                  i1l486 0699  
                                i1l478 065B                                  i1l488 06A8  
                      ___awdiv@counter 002B                                  _SPBRG 0099  
                                _PORTB 0006                                  _PORTC 0007  
                                _TXREG 0019                    ___lmul@multiplicand 002A  
                       PlayRing@melody 0806                         __CFG_FCMEN$OFF 0000  
                   __size_of_UART_Init 000E                      __end_of_BCD_2_DEC 0AD4  
                                fpbase 0033                         __CFG_BOREN$OFF 0000  
                                pclath 000A                                  status 0003  
                                wtemp0 007E                      ?_ManchesterDecode 0073  
                   ??_ManchesterDecode 0074                        __initialization 0013  
                         __end_of_main 0C6B                       __end_of_Init_I2C 0A43  
             ??_PCF8583_Read_Time_Date 002F                                 CRC16@i 002D  
                               CRC16@k 002C           __size_of_Display7SegmentText 00BE  
                     __end_of_SendUART 0A35                   Button_Handler@keydef 0047  
                               ??_main 0048                       __end_of_PlayRing 1000  
                               ?_CRC16 0026                      __end_of_CRC_check 0D38  
               __end_ofPlayRing@melody 0818                   __end_of_Display_2Dig 0B58  
                    ?_I2C_Master_Start 0070                      ?_I2C_Master_Write 0026  
                  __end_of_Button_Init 0478               ??_Set_Time1_Button_Short 0026  
                       _g_display_text 005D                     ??_I2C_Master_Start 0026  
                          ?_CheckEvent 0070                     ??_I2C_Master_Write 0028  
                    ??_OneDigitHandler 0078                                 _CCP1IE 0462  
                               _CCP1IF 0062                                 _CCP2IE 0468  
                               _CCP2IF 0068                       ___awdiv@dividend 0028  
                               _ANSELH 0189                            _GeneratePWM 0AF9  
                               i1l3001 0341                                 i1l3101 0679  
                               i1l3021 0347                                 i1l3111 069A  
                               i1l3103 067C                                 i1l3121 06BD  
                               i1l3113 06A6                                 i1l3105 0688  
                               i1l3033 034B                                 i1l3025 0349  
                               i1l3017 0345                                 i1l3009 0343  
                               i1l3115 06A9                                 i1l3107 068B  
                               i1l3211 0BF1                                 i1l3117 06B5  
                               i1l3109 0697                                 i1l3045 034F  
                               i1l3037 034D                                 i1l3213 0BF6  
                               i1l3119 06B8                                 i1l3065 0353  
                               i1l3049 0351                                 i1l3217 0C16  
                               i1l3401 0308                                 i1l3091 064B  
                               i1l3403 0317                                 i1l3411 006F  
                               i1l3093 0657                                 i1l3261 0E64  
                               i1l3421 007B                                 i1l3413 0072  
                               i1l3405 0047                                 i1l3095 065E  
                               i1l3079 0355                                 i1l3263 0E68  
                               i1l3431 00A4                                 i1l3423 0080  
                               i1l3407 004E                                 i1l3089 09FC  
                               i1l3097 066A                                 i1l3281 0E8D  
                               i1l3273 0E7A                                 i1l3265 0E6E  
                               i1l3257 0E59                                 i1l3433 00B4  
                               i1l3441 00F3                                 i1l3425 0091  
                               i1l3409 005F                                 i1l3099 066D  
                               i1l3371 027A                                 i1l3283 0E97  
                               i1l3267 0E6F                                 i1l3259 0E5E  
                               i1l3451 011D                                 i1l3435 00C4  
                               i1l3427 00A1                                 i1l3419 0076  
                               i1l3611 0492                                 i1l3603 0478  
                               i1l3381 02A7                                 i1l3373 0286  
                               i1l3365 0260                                 i1l3285 0E98  
                               i1l3269 0E75                                 i1l3453 0130  
                               i1l3461 0145                                 i1l3437 00CB  
                               i1l3445 00F5                                 i1l3621 04B6  
                               i1l3613 049C                                 i1l3605 047C  
                               i1l3391 02D7                                 i1l3383 02B5  
                               i1l3367 0268                                 i1l3375 028D  
                               i1l3279 0E85                                 i1l3471 0160  
                               i1l3463 014B                                 i1l3455 0144  
                               i1l3447 0106                                 i1l3439 00DE  
                               i1l3631 04CD                                 i1l3623 04BC  
                               i1l3615 04A0                                 i1l3607 0480  
                               i1l3393 02E6                                 i1l3377 0293  
                               i1l3385 02BC                                 i1l3369 026C  
                               i1l3473 0166                                 i1l3465 0151  
                               i1l3449 0116                                 i1l3641 04DE  
                               i1l3633 04D2                                 i1l3617 04AA  
                               i1l3609 0486                                 i1l3625 04BD  
                               i1l2931 031E                                 i1l3387 02C2  
                               i1l3395 02ED                                 i1l3379 0297  
                               i1l3475 0167                                 i1l3467 0153  
                               i1l3651 04F6                                 i1l3643 04E2  
                               i1l3635 04D6                                 i1l3627 04C1  
                               i1l3619 04B0                                 i1l2941 0323  
                               i1l2933 031F                                 i1l3397 02F3  
                               i1l3389 02C6                                 i1l3477 0168  
                               i1l3469 0158                                 i1l3661 050D  
                               i1l3653 04FC                                 i1l3645 04EC  
                               i1l3637 04D9                                 i1l3629 04C7  
                               i1l3399 02F7                                 i1l3479 016E  
                               i1l3663 050F                                 i1l3655 0503  
                               i1l3647 04F0                                 i1l3639 04DD  
                               i1l4561 035D                                 i1l2961 032D  
                               i1l2953 0329                                 i1l2945 0325  
                               i1l2937 0321                                 i1l3665 0513  
                               i1l3657 0507                                 i1l3649 04F1  
                               i1l3667 0515                                 i1l3659 0509  
                               u300_24 0127                                 i1l2981 0337  
                               i1l2973 0333                                 i1l2965 032F  
                               i1l2957 032B                                 i1l2949 0327  
                               u300_25 0124                                 i1l4559 0C1E  
                               i1l2993 033D                                 i1l2985 0339  
                               i1l2977 0335                                 i1l2969 0331  
                               u301_24 0138                                 i1l2997 033F  
                               i1l2989 033B                                 u301_25 0135  
                               u302_20 014B                                 u302_21 014A  
                               u303_20 0151                                 u303_21 0150  
                               u240_20 0679                                 u304_20 0158  
                               u320_20 04C7                                 u240_21 0678  
                               u304_21 0157                                 u320_21 04C6  
                               u305_20 016E                                 u321_20 04D2  
                               u313_20 047C                                 u305_21 016D  
                               u321_21 04D1                                 u313_21 047B  
                               u241_25 067F                                 u242_20 0688  
                               u322_20 04F6                                 u314_20 0480  
                               u242_21 0687                                 u322_21 04F5  
                               u314_21 047F                                 u323_20 04FC  
                               u315_20 0486                                 u323_21 04FB  
                               u315_21 0485                                 u243_25 068E  
                               u235_25 064E                                 u244_20 0697  
                               u236_20 0657                                 u324_20 0503  
                               u316_20 0492                                 u244_21 0696  
                               u236_21 0656                                 u324_21 0502  
                               u316_21 0491                                 u317_20 04AA  
                               u317_21 04A9                                 u245_25 069D  
                               u237_25 0661                                 u246_20 06A6  
                               u238_20 066A                                 u318_20 04B6  
                               u246_21 06A5                                 u238_21 0669  
                               u318_21 04B5                                 u319_20 04C1  
                               u319_21 04C0                                 u247_25 06AC  
                               u239_25 0670                                 u248_20 06B5  
                               u280_20 0297                                 u272_20 0E5E  
                               u248_21 06B4                                 u280_21 0296  
                               u272_21 0E5D                                 u249_20 06BD  
                               u281_20 02C2                                 u273_20 0E6E  
                               u249_21 06BC                                 u281_21 02C1  
                               u273_21 0E6D                                 u282_20 02C6  
                               u274_20 0E75                                 u290_20 0091  
                               u282_21 02C5                                 u274_21 0E74  
                               u290_21 0090                                 u283_20 02F3  
                               u275_20 0E8D                                 u291_20 00A1  
                               u283_21 02F2                                 u275_21 0E8C  
                               u291_21 00A0                                 u284_20 02F7  
                               u276_20 0E97                                 u292_20 00B4  
                               u284_21 02F6                                 u276_21 0E96  
                               u292_21 00B3                                 u277_20 0268  
                               u293_20 00C4                                 u285_20 004E  
                               u277_21 0267                                 u293_21 00C3  
                               u285_21 004D                     __size_of_Key_Press 009D  
                               u278_20 026C                                 u294_20 00CB  
                               u286_20 005F                                 u278_21 026B  
                               u294_21 00CA                                 u286_21 005E  
                               u279_20 0293                                 u287_20 006F  
                            CRC16@size 0026                                 u279_21 0292  
                               u287_21 006E                                 u295_24 00D5  
                               u295_25 00D2                                 u288_20 007B  
                               u288_21 007A                                 u296_24 00E6  
                               u296_25 00E3                                 u297_20 0106  
                               u289_20 0080                                 u297_21 0105  
                               u289_21 007F                                 u298_20 0116  
                               u298_21 0115                                 u299_20 011D  
                               u299_21 011C                                 _TMR0IE 005D  
                               _TMR0IF 005A                                 _SSPADD 0093  
                               _TRISA0 0428                                 _TRISA1 0429  
                               _TRISA2 042A                                 _TRISB0 0430  
                               _TRISA3 042B                                 _TRISB1 0431  
                               _TRISC0 0438                                 _TRISA4 042C  
                               _TRISB2 0432                                 _TRISC1 0439  
                               _TRISA5 042D                                 _TRISB3 0433  
                               _TRISC2 043A                                 _TRISA6 042E  
                               _TRISB4 0434                                 _TRISC3 043B  
                               _TRISA7 042F                                 _TRISB5 0435  
                               _TRISC4 043C                                 _TRISB6 0436  
                               _TRISC5 043D                                 _TRISB7 0437  
                               _TRISC6 043E                                 _TRISC7 043F  
                               _SSPBUF 0013                       __end_of__fptable 0046  
                       __CFG_PWRTE$OFF 0000                  fp__Right_Button_Short 0040  
                               _Timer1 004D                              ??_Wait_ms 0035  
                 __end_of_Global_Inits 0AF9                      __end_of_UART_Init 0A51  
                      Key_Press@button 0046                                 ___bmul 0A86  
                          _FrameDecode 06C1                                 ___lmul 0DC6  
                            ??___awdiv 002A                            _FrameBuffer 0EA3  
                            ??___awmod 002A                              ??___lldiv 002E  
                            ??___lwdiv 002A                       ___awdiv@quotient 002D  
                      ___awmod@divisor 0026                        ___awmod@counter 002B  
                      _Up_Button_Short 09F8                                 fptable 002E  
              fp__Set_RTC_Button_Short 0037                                 fptotal 000C  
                               saved_w 007E                  PlayRing@MELODY_LENGTH 003F  
                      _InterruptConfig 0A73                        _g_generic_timer 0049  
              __end_of__initialization 002A                           BCD_2_DEC@bcd 002D  
            __size_of_Init_CaptureMode 0011                          __end_of_CRC16 0E58  
           FrameBuffer@WritePointerMem 005A                      _PCF8583_Read_Byte 0CAE  
                  ___bmul@multiplicand 0026                            ISR@edge_dir 0062  
                   ?_PCF8583_Read_Byte 0070                         __pcstackCOMMON 0070  
                       _Button_Handler 0D7E                __size_of_ProcessRCVData 0056  
                         __pidataBANK0 07FF                  __end_ofi1_FrameBuffer 0EA3  
                  __size_of_CheckEvent 008D               __end_of_DisableAllDigits 0A03  
      __size_of_PCF8583_Read_Time_Date 00EE                      __end_of_Key_Press 05BD  
                          _Button_Init 03CC                    ??_PCF8583_Read_Byte 002B  
                    i1FrameBuffer@data 0072                                ??_CRC16 0028  
                    i1FrameBuffer@mode 0070                         _OPTION_REGbits 0081  
             ??_Set_Time2_Button_Short 0026        __size_of_Set_Time1_Button_Short 0001  
                          ISR@set_flag 0058                 PCF8583_Write_Byte@data 0028  
                           __pbssBANK0 0049                             __pbssBANK1 00A0  
                            ?_Init_I2C 0070                        _SetAnodeOutputs 064A  
            __end_of_PCF8583_Read_Byte 0CF3                              ?_SendUART 0070  
                            ?_PlayRing 0070                 __end_of_Button_Handler 0DC6  
            __size_of_Init_CompareMode 0011                      _Down_Button_Short 0003  
                           __pmaintext 0C2D                                ?___bmul 0026  
              __end_of_Up_Button_Short 09F9                                ?___lmul 0026  
                   ?_Down_Button_Short 0070                         _g_button_timer 004B  
                           __pintentry 0004                 __size_of_SignAnodeData 00AF  
                   _Right_Button_Short 09FB                         ___lmul@product 002F  
                __size_of_Display_2Dig 0030          __size_of_Set_RTC_Button_Short 0043  
                  ??_Down_Button_Short 0026                __end_of_InterruptConfig 0A86  
                  ?_Right_Button_Short 0070             __end_of_PCF8583_Write_Byte 0BF0  
                              _ISR_ACK 0059                                _SSPCON2 0091  
        PCF8583_Read_Time_Date@bcd_day 0036                                _SSPSTAT 0094  
        PCF8583_Read_Time_Date@bcd_min 0033          PCF8583_Read_Time_Date@bcd_hrs 0034  
        PCF8583_Read_Time_Date@bcd_sec 0032          PCF8583_Read_Time_Date@bcd_mon 0035  
                           __stringtab 0800                 _PCF8583_Read_Time_Date 0171  
                           ??_Init_I2C 0026                              _BCD_2_DEC 0AB8  
                  _Display7SegmentText 025F                  __size_of_Global_Inits 0025  
                           ??_SendUART 0026                            Wait_ms@time 0033  
            __end_of_Down_Button_Short 0004                             ??_PlayRing 003C  
                 ??_Right_Button_Short 0026                        ?_Button_Handler 0070  
                         _Display_2Dig 0B28                 _Set_Time1_Button_Short 09F9  
                              _Wait_ms 0B88                        __size_of___bmul 0017  
                              ___awdiv 072E                        __size_of___lmul 0048  
                              ___awmod 0F46                                ___lldiv 0797  
                              ___lwdiv 0D38                    SetAnodeOutputs@sign 0075  
                 ?_Display7SegmentText 007B                        _OneDigitHandler 0BF0  
                              __ptext1 0A43                                __ptext2 0EF0  
                              __ptext3 05BD                                __ptext4 0FA1  
                              __ptext5 0D38                                __ptext6 0B88  
                              __ptext7 0DC6                                __ptext8 0A62  
                              __ptext9 0A51                           SendUART@data 0026  
            __size_of_ManchesterDecode 012B           SetAnodeOutputs@decimal_point 0073  
                         __size_of_ISR 00A8                              _T1CONbits 0010  
                     ___awmod@dividend 0028               __size_of_I2C_Master_Read 0030  
              __end_of_SetAnodeOutputs 06C1               __size_of_I2C_Master_Wait 001B  
             __size_of_I2C_Master_Stop 0009                              _CRC_check 0CF3  
                         _Global_Inits 0AD4                           ??_CheckEvent 0041  
      __size_of_Set_Time2_Button_Short 0001                                clrloop0 0A04  
                        _SignAnodeData 031D                   end_of_initialization 002A  
                         ?_GeneratePWM 0034                      SignAnodeData@sign 0072  
                           ?_BCD_2_DEC 0070               Set_RTC_Button_Short@time 003C  
           __size_of_PCF8583_Read_Byte 0045                       _Init_CaptureMode 0A51  
            __size_of_I2C_Master_Start 0009              __size_of_I2C_Master_Write 000A  
                      ___lldiv@divisor 0026                        ___lldiv@counter 0033  
                       _ProcessRCVData 0EF0                           ?_FrameDecode 0029  
                            _RCSTAbits 0018                       ?_Up_Button_Short 0070  
                         ?_FrameBuffer 0026                     __end_of_CheckEvent 064A  
                ??_Display7SegmentText 007C                              _UART_Init 0A43  
                            _PORTAbits 0005                              _PORTBbits 0006  
                            _PORTCbits 0007                     Button_Init@set_rtc 00E1  
                         ISR@PulseTime 0024                       ?_InterruptConfig 0070  
                           ?_CRC_check 0070                         ?_SignAnodeData 0070  
         OneDigitHandler@decimal_point 0077                            _CCP1CONbits 0017  
                          _CCP2CONbits 001D                              _TXSTAbits 0098  
               ManchesterDecode@f_sync 0052                             main@keydef 0195  
           __size_of_Down_Button_Short 0001                 __end_of_ProcessRCVData 0F46  
                     _Init_CompareMode 0A62                __end_of_OneDigitHandler 0C2D  
               _Set_Time2_Button_Short 09FA                         __end_of___bmul 0A9D  
                       __end_of___lmul 0E0E                             ?_UART_Init 0070  
                    ?_DisableAllDigits 0070                           ?_Button_Init 0070  
                     CRC_check@DataRCV 0036                     ??_DisableAllDigits 0070  
                  start_initialization 0013                              _Key_Press 0520  
                            PlayRing@i 0040                            __end_of_ISR 0520  
                     ?_SetAnodeOutputs 0073                  __end_ofPlayRing@beats 0829  
          OneDigitHandler@digit_number 0076                  __end_ofPlayRing@tempo 081E  
                          ??_BCD_2_DEC 002A                      ??_I2C_Master_Read 0026  
                    ??_I2C_Master_Wait 0026                      ??_I2C_Master_Stop 0026  
                             CRC16@crc 002E                      __size_of_Init_I2C 000E  
                      FrameDecode@data 002E               __CFG_FOSC$INTRC_NOCLKOUT 0000  
                     CRC_check@crc_val 0034                        ?_ProcessRCVData 0070  
                  OneDigitHandler@sign 007A                      __size_of_SendUART 000E  
                    __size_of_PlayRing 005F                               ??___bmul 0027  
                             ??___lmul 002E              fp__Set_Time1_Button_Short 003A  
      PCF8583_Read_Time_Date@year_bits 0031                 FrameBuffer@ReadPointer 005C  
                          __pdataBANK0 0064                       _ManchesterDecode 0046  
                  Init_I2C@k_i2c_clock 0818                             ?_Key_Press 0070  
                      ??_SignAnodeData 0070                              ___latbits 0002  
                        __pcstackBANK0 0020                          __pcstackBANK3 0190  
              ?_PCF8583_Read_Time_Date 0070                            ??_CRC_check 0030  
                    __size_of__fptable 0018       Display7SegmentText@decimal_point 007B  
               __size_ofi1_FrameBuffer 004B                       ??_Button_Handler 0047  
         __end_of_Set_RTC_Button_Short 0CAE                   __size_of_GeneratePWM 002F  
              ?_Set_Time1_Button_Short 0070                     _PCF8583_Write_Byte 0BBB  
                            __pnvBANK0 0063                       _I2C_Master_Start 0A0B  
                     _I2C_Master_Write 0A1D                       ___lwdiv@dividend 0028  
                             ?_Wait_ms 0033                       ?_OneDigitHandler 0076  
                            __pfunctab 002E                    ?_PCF8583_Write_Byte 0028  
                             ?___awdiv 0026                               ?___awmod 0026  
                             ?___lldiv 0026                               ?___lwdiv 0026  
                 __size_of_FrameDecode 006D                            ??_UART_Init 0026  
                 __size_of_FrameBuffer 004D                   I2C_Master_Write@data 0026  
                            __pstrings 0800               __end_of_Init_CaptureMode 0A62  
                       __size_of_CRC16 004A         __end_of_PCF8583_Read_Time_Date 025F  
                      FrameBuffer@data 0028                        FrameBuffer@mode 0026  
           ManchesterDecode@pulse_time 0073                     FrameDecode@DataRCV 002D  
                     ___lwdiv@quotient 002C                   ??_PCF8583_Write_Byte 0029  
       __end_of_Set_Time1_Button_Short 09FA                      interrupt_function 0004  
                          CheckEvent@a 0051                              clear_ram0 0A03  
          __size_of_Right_Button_Short 0001              fp__Set_Time2_Button_Short 003D  
                    Button_Init@keydef 0027                          i1_FrameBuffer 0E58  
                    Button_Init@set_up 00C5                            __stringbase 0805  
                             _PWM_Freq 004F                   fp__Down_Button_Short 0043  
              FrameBuffer@WritePointer 005B                   __size_of_Button_Init 00AC  
                          ??_Key_Press 0042               __end_of_Init_CompareMode 0A73  
                    FrameBuffer@Buffer 00A0              ManchesterDecode@f_slope_t 0053  
                  I2C_Master_Read@data 0029                      ___lmul@multiplier 0026  
           PCF8583_Read_Time_Date@year 0037                         CRC16@generator 081E  
                             _Init_I2C 0A35           ManchesterDecode@decoded_byte 0061  
                             _SendUART 0A27                ?_Set_Time2_Button_Short 0070  
                             _PlayRing 0FA1            __end_of_Display7SegmentText 031D  
                     __size_of_Wait_ms 0033           ManchesterDecode@data_counter 0055  
                       ?i1_FrameBuffer 0070                        GeneratePWM@freq 0034  
                     __size_of___awdiv 0069                       __size_of___awmod 005B  
                     __size_of___lldiv 0068                       __size_of___lwdiv 0046  
                   __end_of__stringtab 0806                   _Set_RTC_Button_Short 0C6B  
             __size_of_Up_Button_Short 0001                     fp__Up_Button_Short 0034  
                             __fptable 002E                        _I2C_Master_Read 0B58  
                      _I2C_Master_Wait 0A9D                        _I2C_Master_Stop 0A14  
                      ___lwdiv@divisor 0026                        ___lwdiv@counter 002B  
             PCF8583_Read_Byte@address 002D                               __ptext10 0AF9  
                             __ptext11 0797                               __ptext20 0D7E  
                             __ptext12 06C1                               __ptext21 0520  
                             __ptext13 0EA3                               __ptext30 0BBB  
                             __ptext22 0003                               __ptext14 0CF3  
                             __ptext31 0CAE                               __ptext23 09FB  
                             __ptext15 0E0E                               __ptext40 0F46  
                             __ptext32 0A1D                               __ptext24 09FA  
                             __ptext16 0A73                               __ptext41 072E  
                             __ptext33 0A14                               __ptext25 09F9  
                             __ptext17 0A35                               __ptext42 0478  
                             __ptext34 0A0B                               __ptext26 0C6B  
                             __ptext18 0AD4                               __ptext43 0046  
                             __ptext35 0B58                               __ptext27 09F8  
                             __ptext19 03CC                               __ptext44 0E58  
                             __ptext36 0A9D                               __ptext28 0A27  
                             __ptext45 025F                               __ptext37 0AB8  
                             __ptext29 0171                               __ptext46 0BF0  
                             __ptext38 0A86                               __ptext47 031D  
                             __ptext39 0B28                               __ptext48 064A  
                             __ptext49 09FC                 __end_ofCRC16@generator 0820  
              Display7SegmentText@text 007D                      __CFG_BOR4V$BOR40V 0000  
            __size_of_DisableAllDigits 0007                       ??_ProcessRCVData 0042  
             __size_of_InterruptConfig 0013         __end_of_Set_Time2_Button_Short 09FB  
             __end_of_ManchesterDecode 0171                          __size_of_main 003E  
                      _g_decimal_point 0063                       Display_2Dig@data 0032  
                   I2C_Master_Read@ack 0028                  ?_Set_RTC_Button_Short 0070  
             __end_of_I2C_Master_Start 0A14               __end_of_I2C_Master_Write 0A27  
                           _INTCONbits 000B  PCF8583_Read_Time_Date@time_struct_ptr 0038  
                             intlevel1 002E                       ___lldiv@dividend 002A  
             __size_of_SetAnodeOutputs 0077           ManchesterDecode@f_start_data 0054  
                            stringcode 0800                          ?_Display_2Dig 0070  
              PCF8583_Read_Byte@retval 002E                             _OSCCONbits 008F  
                      ??i1_FrameBuffer 0071                __end_of_I2C_Master_Read 0B88  
              __end_of_I2C_Master_Wait 0AB8                __end_of_I2C_Master_Stop 0A1D  
                         FrameDecode@i 002F        Display7SegmentText@enable_digit 0064  
                    ?_Init_CaptureMode 0070                       ___lldiv@quotient 002F  
                             stringdir 0800                               stringtab 0800  
                    CheckEvent@DataRCV 0041                     ??_Init_CaptureMode 0026  
                        ?_Global_Inits 0070                            _SSPCON2bits 0091  
                __end_of_SignAnodeData 03CC                          ??_GeneratePWM 0038  
                    ??_Up_Button_Short 0026                   Button_Init@set_time1 00DA  
                 Button_Init@set_time2 00D3                   Button_Init@set_right 00CC  
                ProcessRCVData@DataRCV 0042                    Button_Init@set_down 00BE  
                           _SSPCONbits 0014                         ??_Display_2Dig 002F  
                          main@DataRCV 0190                      ??_InterruptConfig 0026  
                        ??_FrameDecode 002B                     __size_of_BCD_2_DEC 001C  
